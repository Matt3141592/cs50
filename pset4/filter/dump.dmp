
filter:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    $0x8,%rsp
  401008:	48 8b 05 e9 7f 00 00 	mov    0x7fe9(%rip),%rax        # 408ff8 <__gmon_start__>
  40100f:	48 85 c0             	test   %rax,%rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	callq  *%rax
  401016:	48 83 c4 08          	add    $0x8,%rsp
  40101a:	c3                   	retq   

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	ff 35 e2 7f 00 00    	pushq  0x7fe2(%rip)        # 409008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	ff 25 e4 7f 00 00    	jmpq   *0x7fe4(%rip)        # 409010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401030 <free@plt>:
  401030:	ff 25 e2 7f 00 00    	jmpq   *0x7fe2(%rip)        # 409018 <free@GLIBC_2.2.5>
  401036:	68 00 00 00 00       	pushq  $0x0
  40103b:	e9 e0 ff ff ff       	jmpq   401020 <.plt>

0000000000401040 <round@plt>:
  401040:	ff 25 da 7f 00 00    	jmpq   *0x7fda(%rip)        # 409020 <round@GLIBC_2.2.5>
  401046:	68 01 00 00 00       	pushq  $0x1
  40104b:	e9 d0 ff ff ff       	jmpq   401020 <.plt>

0000000000401050 <fread@plt>:
  401050:	ff 25 d2 7f 00 00    	jmpq   *0x7fd2(%rip)        # 409028 <fread@GLIBC_2.2.5>
  401056:	68 02 00 00 00       	pushq  $0x2
  40105b:	e9 c0 ff ff ff       	jmpq   401020 <.plt>

0000000000401060 <abs@plt>:
  401060:	ff 25 ca 7f 00 00    	jmpq   *0x7fca(%rip)        # 409030 <abs@GLIBC_2.2.5>
  401066:	68 03 00 00 00       	pushq  $0x3
  40106b:	e9 b0 ff ff ff       	jmpq   401020 <.plt>

0000000000401070 <pow@plt>:
  401070:	ff 25 c2 7f 00 00    	jmpq   *0x7fc2(%rip)        # 409038 <pow@GLIBC_2.29>
  401076:	68 04 00 00 00       	pushq  $0x4
  40107b:	e9 a0 ff ff ff       	jmpq   401020 <.plt>

0000000000401080 <fclose@plt>:
  401080:	ff 25 ba 7f 00 00    	jmpq   *0x7fba(%rip)        # 409040 <fclose@GLIBC_2.2.5>
  401086:	68 05 00 00 00       	pushq  $0x5
  40108b:	e9 90 ff ff ff       	jmpq   401020 <.plt>

0000000000401090 <fputc@plt>:
  401090:	ff 25 b2 7f 00 00    	jmpq   *0x7fb2(%rip)        # 409048 <fputc@GLIBC_2.2.5>
  401096:	68 06 00 00 00       	pushq  $0x6
  40109b:	e9 80 ff ff ff       	jmpq   401020 <.plt>

00000000004010a0 <calloc@plt>:
  4010a0:	ff 25 aa 7f 00 00    	jmpq   *0x7faa(%rip)        # 409050 <calloc@GLIBC_2.2.5>
  4010a6:	68 07 00 00 00       	pushq  $0x7
  4010ab:	e9 70 ff ff ff       	jmpq   401020 <.plt>

00000000004010b0 <fprintf@plt>:
  4010b0:	ff 25 a2 7f 00 00    	jmpq   *0x7fa2(%rip)        # 409058 <fprintf@GLIBC_2.2.5>
  4010b6:	68 08 00 00 00       	pushq  $0x8
  4010bb:	e9 60 ff ff ff       	jmpq   401020 <.plt>

00000000004010c0 <fseek@plt>:
  4010c0:	ff 25 9a 7f 00 00    	jmpq   *0x7f9a(%rip)        # 409060 <fseek@GLIBC_2.2.5>
  4010c6:	68 09 00 00 00       	pushq  $0x9
  4010cb:	e9 50 ff ff ff       	jmpq   401020 <.plt>

00000000004010d0 <fopen@plt>:
  4010d0:	ff 25 92 7f 00 00    	jmpq   *0x7f92(%rip)        # 409068 <fopen@GLIBC_2.2.5>
  4010d6:	68 0a 00 00 00       	pushq  $0xa
  4010db:	e9 40 ff ff ff       	jmpq   401020 <.plt>

00000000004010e0 <getopt@plt>:
  4010e0:	ff 25 8a 7f 00 00    	jmpq   *0x7f8a(%rip)        # 409070 <getopt@GLIBC_2.2.5>
  4010e6:	68 0b 00 00 00       	pushq  $0xb
  4010eb:	e9 30 ff ff ff       	jmpq   401020 <.plt>

00000000004010f0 <fwrite@plt>:
  4010f0:	ff 25 82 7f 00 00    	jmpq   *0x7f82(%rip)        # 409078 <fwrite@GLIBC_2.2.5>
  4010f6:	68 0c 00 00 00       	pushq  $0xc
  4010fb:	e9 20 ff ff ff       	jmpq   401020 <.plt>

0000000000401100 <sqrt@plt>:
  401100:	ff 25 7a 7f 00 00    	jmpq   *0x7f7a(%rip)        # 409080 <sqrt@GLIBC_2.2.5>
  401106:	68 0d 00 00 00       	pushq  $0xd
  40110b:	e9 10 ff ff ff       	jmpq   401020 <.plt>

Disassembly of section .text:

0000000000401110 <_start>:
  401110:	f3 0f 1e fa          	endbr64 
  401114:	31 ed                	xor    %ebp,%ebp
  401116:	49 89 d1             	mov    %rdx,%r9
  401119:	5e                   	pop    %rsi
  40111a:	48 89 e2             	mov    %rsp,%rdx
  40111d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  401121:	50                   	push   %rax
  401122:	54                   	push   %rsp
  401123:	49 c7 c0 00 66 40 00 	mov    $0x406600,%r8
  40112a:	48 c7 c1 90 65 40 00 	mov    $0x406590,%rcx
  401131:	48 c7 c7 00 12 40 00 	mov    $0x401200,%rdi
  401138:	ff 15 b2 7e 00 00    	callq  *0x7eb2(%rip)        # 408ff0 <__libc_start_main@GLIBC_2.2.5>
  40113e:	f4                   	hlt    
  40113f:	90                   	nop

0000000000401140 <_dl_relocate_static_pie>:
  401140:	f3 0f 1e fa          	endbr64 
  401144:	c3                   	retq   
  401145:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40114c:	00 00 00 
  40114f:	90                   	nop

0000000000401150 <deregister_tm_clones>:
  401150:	b8 98 90 40 00       	mov    $0x409098,%eax
  401155:	48 3d 98 90 40 00    	cmp    $0x409098,%rax
  40115b:	74 13                	je     401170 <deregister_tm_clones+0x20>
  40115d:	b8 00 00 00 00       	mov    $0x0,%eax
  401162:	48 85 c0             	test   %rax,%rax
  401165:	74 09                	je     401170 <deregister_tm_clones+0x20>
  401167:	bf 98 90 40 00       	mov    $0x409098,%edi
  40116c:	ff e0                	jmpq   *%rax
  40116e:	66 90                	xchg   %ax,%ax
  401170:	c3                   	retq   
  401171:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401178:	00 00 00 00 
  40117c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401180 <register_tm_clones>:
  401180:	be 98 90 40 00       	mov    $0x409098,%esi
  401185:	48 81 ee 98 90 40 00 	sub    $0x409098,%rsi
  40118c:	48 89 f0             	mov    %rsi,%rax
  40118f:	48 c1 ee 3f          	shr    $0x3f,%rsi
  401193:	48 c1 f8 03          	sar    $0x3,%rax
  401197:	48 01 c6             	add    %rax,%rsi
  40119a:	48 d1 fe             	sar    %rsi
  40119d:	74 11                	je     4011b0 <register_tm_clones+0x30>
  40119f:	b8 00 00 00 00       	mov    $0x0,%eax
  4011a4:	48 85 c0             	test   %rax,%rax
  4011a7:	74 07                	je     4011b0 <register_tm_clones+0x30>
  4011a9:	bf 98 90 40 00       	mov    $0x409098,%edi
  4011ae:	ff e0                	jmpq   *%rax
  4011b0:	c3                   	retq   
  4011b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4011b8:	00 00 00 00 
  4011bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004011c0 <__do_global_dtors_aux>:
  4011c0:	f3 0f 1e fa          	endbr64 
  4011c4:	80 3d fd 7e 00 00 00 	cmpb   $0x0,0x7efd(%rip)        # 4090c8 <completed.8060>
  4011cb:	75 13                	jne    4011e0 <__do_global_dtors_aux+0x20>
  4011cd:	55                   	push   %rbp
  4011ce:	48 89 e5             	mov    %rsp,%rbp
  4011d1:	e8 7a ff ff ff       	callq  401150 <deregister_tm_clones>
  4011d6:	c6 05 eb 7e 00 00 01 	movb   $0x1,0x7eeb(%rip)        # 4090c8 <completed.8060>
  4011dd:	5d                   	pop    %rbp
  4011de:	c3                   	retq   
  4011df:	90                   	nop
  4011e0:	c3                   	retq   
  4011e1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4011e8:	00 00 00 00 
  4011ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004011f0 <frame_dummy>:
  4011f0:	f3 0f 1e fa          	endbr64 
  4011f4:	eb 8a                	jmp    401180 <register_tm_clones>
  4011f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4011fd:	00 00 00 

0000000000401200 <main>:
#include <stdlib.h>

#include "helpers.h"

int main(int argc, char *argv[])
{
  401200:	55                   	push   %rbp
  401201:	48 89 e5             	mov    %rsp,%rbp
  401204:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
  40120b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  401212:	89 7d f8             	mov    %edi,-0x8(%rbp)
  401215:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)

    // Define allowable filters
    char *filters = "begr"; //blur, edge, greyscale, reflect.
  401219:	48 b8 90 70 40 00 00 	movabs $0x407090,%rax
  401220:	00 00 00 
  401223:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

    // Get filter flag and check validity
    char filter = getopt(argc, argv, filters);
  401227:	8b 7d f8             	mov    -0x8(%rbp),%edi
  40122a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40122e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401232:	e8 a9 fe ff ff       	callq  4010e0 <getopt@plt>
  401237:	88 45 e7             	mov    %al,-0x19(%rbp)
    if (filter == '?')
  40123a:	0f be 4d e7          	movsbl -0x19(%rbp),%ecx
  40123e:	83 f9 3f             	cmp    $0x3f,%ecx
  401241:	0f 85 25 00 00 00    	jne    40126c <main+0x6c>
    {
        fprintf(stderr, "Invalid filter.\n");
  401247:	48 8b 3c 25 c0 90 40 	mov    0x4090c0,%rdi
  40124e:	00 
  40124f:	48 be 95 70 40 00 00 	movabs $0x407095,%rsi
  401256:	00 00 00 
  401259:	b0 00                	mov    $0x0,%al
  40125b:	e8 50 fe ff ff       	callq  4010b0 <fprintf@plt>
        return 1;
  401260:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  401267:	e9 e6 04 00 00       	jmpq   401752 <main+0x552>
    }

    // Ensure only one filter
    if (getopt(argc, argv, filters) != -1)
  40126c:	8b 7d f8             	mov    -0x8(%rbp),%edi
  40126f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  401273:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401277:	e8 64 fe ff ff       	callq  4010e0 <getopt@plt>
  40127c:	83 f8 ff             	cmp    $0xffffffff,%eax
  40127f:	0f 84 25 00 00 00    	je     4012aa <main+0xaa>
    {
        fprintf(stderr, "Only one filter allowed.\n");
  401285:	48 8b 3c 25 c0 90 40 	mov    0x4090c0,%rdi
  40128c:	00 
  40128d:	48 be a6 70 40 00 00 	movabs $0x4070a6,%rsi
  401294:	00 00 00 
  401297:	b0 00                	mov    $0x0,%al
  401299:	e8 12 fe ff ff       	callq  4010b0 <fprintf@plt>
        return 2;
  40129e:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
  4012a5:	e9 a8 04 00 00       	jmpq   401752 <main+0x552>
    }

    // Ensure proper usage
    if (argc != optind + 2)
  4012aa:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4012ad:	8b 0c 25 a0 90 40 00 	mov    0x4090a0,%ecx
  4012b4:	83 c1 02             	add    $0x2,%ecx
  4012b7:	39 c8                	cmp    %ecx,%eax
  4012b9:	0f 84 25 00 00 00    	je     4012e4 <main+0xe4>
    {
        fprintf(stderr, "Usage: filter [flag] infile outfile\n");
  4012bf:	48 8b 3c 25 c0 90 40 	mov    0x4090c0,%rdi
  4012c6:	00 
  4012c7:	48 be c0 70 40 00 00 	movabs $0x4070c0,%rsi
  4012ce:	00 00 00 
  4012d1:	b0 00                	mov    $0x0,%al
  4012d3:	e8 d8 fd ff ff       	callq  4010b0 <fprintf@plt>
        return 3;
  4012d8:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%rbp)
  4012df:	e9 6e 04 00 00       	jmpq   401752 <main+0x552>
    }

    // Remember filenames
    char *infile = argv[optind];
  4012e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4012e8:	48 63 0c 25 a0 90 40 	movslq 0x4090a0,%rcx
  4012ef:	00 
  4012f0:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  4012f4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    char *outfile = argv[optind + 1];
  4012f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4012fc:	8b 14 25 a0 90 40 00 	mov    0x4090a0,%edx
  401303:	83 c2 01             	add    $0x1,%edx
  401306:	48 63 ca             	movslq %edx,%rcx
  401309:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  40130d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)

    // Open input file
    FILE *inptr = fopen(infile, "r");
  401311:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  401315:	48 be 93 70 40 00 00 	movabs $0x407093,%rsi
  40131c:	00 00 00 
  40131f:	e8 ac fd ff ff       	callq  4010d0 <fopen@plt>
  401324:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    if (inptr == NULL)
  401328:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40132d:	0f 85 29 00 00 00    	jne    40135c <main+0x15c>
    {
        fprintf(stderr, "Could not open %s.\n", infile);
  401333:	48 8b 3c 25 c0 90 40 	mov    0x4090c0,%rdi
  40133a:	00 
  40133b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40133f:	48 be e5 70 40 00 00 	movabs $0x4070e5,%rsi
  401346:	00 00 00 
  401349:	b0 00                	mov    $0x0,%al
  40134b:	e8 60 fd ff ff       	callq  4010b0 <fprintf@plt>
        return 4;
  401350:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%rbp)
  401357:	e9 f6 03 00 00       	jmpq   401752 <main+0x552>
    }

    // Open output file
    FILE *outptr = fopen(outfile, "w");
  40135c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  401360:	48 be f9 70 40 00 00 	movabs $0x4070f9,%rsi
  401367:	00 00 00 
  40136a:	e8 61 fd ff ff       	callq  4010d0 <fopen@plt>
  40136f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    if (outptr == NULL)
  401373:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  401378:	0f 85 38 00 00 00    	jne    4013b6 <main+0x1b6>
    {
        fclose(inptr);
  40137e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  401382:	e8 f9 fc ff ff       	callq  401080 <fclose@plt>
        fprintf(stderr, "Could not create %s.\n", outfile);
  401387:	48 8b 3c 25 c0 90 40 	mov    0x4090c0,%rdi
  40138e:	00 
  40138f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  401393:	48 be fb 70 40 00 00 	movabs $0x4070fb,%rsi
  40139a:	00 00 00 
  40139d:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
  4013a3:	b0 00                	mov    $0x0,%al
  4013a5:	e8 06 fd ff ff       	callq  4010b0 <fprintf@plt>
        return 5;
  4013aa:	c7 45 fc 05 00 00 00 	movl   $0x5,-0x4(%rbp)
  4013b1:	e9 9c 03 00 00       	jmpq   401752 <main+0x552>
    }

    // Read infile's BITMAPFILEHEADER
    BITMAPFILEHEADER bf;
    fread(&bf, sizeof(BITMAPFILEHEADER), 1, inptr);
  4013b6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4013ba:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4013be:	48 89 c7             	mov    %rax,%rdi
  4013c1:	be 0e 00 00 00       	mov    $0xe,%esi
  4013c6:	ba 01 00 00 00       	mov    $0x1,%edx
  4013cb:	e8 80 fc ff ff       	callq  401050 <fread@plt>

    // Read infile's BITMAPINFOHEADER
    BITMAPINFOHEADER bi;
    fread(&bi, sizeof(BITMAPINFOHEADER), 1, inptr);
  4013d0:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
  4013d4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4013d8:	48 89 cf             	mov    %rcx,%rdi
  4013db:	be 28 00 00 00       	mov    $0x28,%esi
  4013e0:	b9 01 00 00 00       	mov    $0x1,%ecx
  4013e5:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
  4013ec:	48 89 ca             	mov    %rcx,%rdx
  4013ef:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  4013f6:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  4013fd:	e8 4e fc ff ff       	callq  401050 <fread@plt>

    // Ensure infile is (likely) a 24-bit uncompressed BMP 4.0
    if (bf.bfType != 0x4d42 || bf.bfOffBits != 54 || bi.biSize != 40 ||
  401402:	44 0f b7 45 b0       	movzwl -0x50(%rbp),%r8d
  401407:	41 81 f8 42 4d 00 00 	cmp    $0x4d42,%r8d
  40140e:	0f 85 2b 00 00 00    	jne    40143f <main+0x23f>
  401414:	83 7d ba 36          	cmpl   $0x36,-0x46(%rbp)
  401418:	0f 85 21 00 00 00    	jne    40143f <main+0x23f>
  40141e:	83 7d 88 28          	cmpl   $0x28,-0x78(%rbp)
  401422:	0f 85 17 00 00 00    	jne    40143f <main+0x23f>
        bi.biBitCount != 24 || bi.biCompression != 0)
  401428:	0f b7 45 96          	movzwl -0x6a(%rbp),%eax
  40142c:	83 f8 18             	cmp    $0x18,%eax
  40142f:	0f 85 0a 00 00 00    	jne    40143f <main+0x23f>
  401435:	83 7d 98 00          	cmpl   $0x0,-0x68(%rbp)
    if (bf.bfType != 0x4d42 || bf.bfOffBits != 54 || bi.biSize != 40 ||
  401439:	0f 84 43 00 00 00    	je     401482 <main+0x282>
    {
        fclose(outptr);
  40143f:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  401443:	e8 38 fc ff ff       	callq  401080 <fclose@plt>
        fclose(inptr);
  401448:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40144c:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  401452:	e8 29 fc ff ff       	callq  401080 <fclose@plt>
        fprintf(stderr, "Unsupported file format.\n");
  401457:	48 8b 3c 25 c0 90 40 	mov    0x4090c0,%rdi
  40145e:	00 
  40145f:	48 be 11 71 40 00 00 	movabs $0x407111,%rsi
  401466:	00 00 00 
  401469:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
  40146f:	b0 00                	mov    $0x0,%al
  401471:	e8 3a fc ff ff       	callq  4010b0 <fprintf@plt>
        return 6;
  401476:	c7 45 fc 06 00 00 00 	movl   $0x6,-0x4(%rbp)
  40147d:	e9 d0 02 00 00       	jmpq   401752 <main+0x552>
    }

    int height = abs(bi.biHeight);
  401482:	8b 7d 90             	mov    -0x70(%rbp),%edi
  401485:	e8 d6 fb ff ff       	callq  401060 <abs@plt>
  40148a:	89 45 84             	mov    %eax,-0x7c(%rbp)
    int width = bi.biWidth;
  40148d:	8b 45 8c             	mov    -0x74(%rbp),%eax
  401490:	89 45 80             	mov    %eax,-0x80(%rbp)

    // Allocate memory for image
    RGBTRIPLE(*image)[width] = calloc(height, width * sizeof(RGBTRIPLE));
  401493:	8b 45 80             	mov    -0x80(%rbp),%eax
  401496:	89 c1                	mov    %eax,%ecx
  401498:	48 63 7d 84          	movslq -0x7c(%rbp),%rdi
  40149c:	48 63 55 80          	movslq -0x80(%rbp),%rdx
  4014a0:	48 69 f2 03 00 00 00 	imul   $0x3,%rdx,%rsi
  4014a7:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
  4014ae:	e8 ed fb ff ff       	callq  4010a0 <calloc@plt>
  4014b3:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    if (image == NULL)
  4014ba:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
  4014c1:	00 
  4014c2:	0f 85 43 00 00 00    	jne    40150b <main+0x30b>
    {
        fprintf(stderr, "Not enough memory to store image.\n");
  4014c8:	48 8b 3c 25 c0 90 40 	mov    0x4090c0,%rdi
  4014cf:	00 
  4014d0:	48 be 2b 71 40 00 00 	movabs $0x40712b,%rsi
  4014d7:	00 00 00 
  4014da:	b0 00                	mov    $0x0,%al
  4014dc:	e8 cf fb ff ff       	callq  4010b0 <fprintf@plt>
        fclose(outptr);
  4014e1:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  4014e5:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  4014eb:	e8 90 fb ff ff       	callq  401080 <fclose@plt>
        fclose(inptr);
  4014f0:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  4014f4:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
  4014fa:	e8 81 fb ff ff       	callq  401080 <fclose@plt>
        return 7;
  4014ff:	c7 45 fc 07 00 00 00 	movl   $0x7,-0x4(%rbp)
  401506:	e9 47 02 00 00       	jmpq   401752 <main+0x552>
    }

    // Determine padding for scanlines
    int padding = (4 - (width * sizeof(RGBTRIPLE)) % 4) % 4;
  40150b:	48 63 45 80          	movslq -0x80(%rbp),%rax
  40150f:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  401516:	48 25 03 00 00 00    	and    $0x3,%rax
  40151c:	b9 04 00 00 00       	mov    $0x4,%ecx
  401521:	48 29 c1             	sub    %rax,%rcx
  401524:	48 81 e1 03 00 00 00 	and    $0x3,%rcx
  40152b:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)

    // Iterate over infile's scanlines
    for (int i = 0; i < height; i++)
  401531:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
  401538:	00 00 00 
  40153b:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
  401541:	3b 45 84             	cmp    -0x7c(%rbp),%eax
  401544:	0f 8d 68 00 00 00    	jge    4015b2 <main+0x3b2>
    {
        // Read row into pixel array
        fread(image[i], sizeof(RGBTRIPLE), width, inptr);
  40154a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  401551:	48 63 8d 70 ff ff ff 	movslq -0x90(%rbp),%rcx
  401558:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  40155f:	48 0f af ca          	imul   %rdx,%rcx
  401563:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40156a:	48 01 c8             	add    %rcx,%rax
  40156d:	48 63 55 80          	movslq -0x80(%rbp),%rdx
  401571:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  401575:	48 89 c7             	mov    %rax,%rdi
  401578:	be 03 00 00 00       	mov    $0x3,%esi
  40157d:	e8 ce fa ff ff       	callq  401050 <fread@plt>

        // Skip over padding
        fseek(inptr, padding, SEEK_CUR);
  401582:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  401586:	48 63 b5 74 ff ff ff 	movslq -0x8c(%rbp),%rsi
  40158d:	ba 01 00 00 00       	mov    $0x1,%edx
  401592:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  401599:	e8 22 fb ff ff       	callq  4010c0 <fseek@plt>
    for (int i = 0; i < height; i++)
  40159e:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
  4015a4:	83 c0 01             	add    $0x1,%eax
  4015a7:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  4015ad:	e9 89 ff ff ff       	jmpq   40153b <main+0x33b>
    }

    // Filter image
    switch (filter)
  4015b2:	0f be 45 e7          	movsbl -0x19(%rbp),%eax
  4015b6:	83 c0 9e             	add    $0xffffff9e,%eax
  4015b9:	89 c1                	mov    %eax,%ecx
  4015bb:	83 e8 10             	sub    $0x10,%eax
  4015be:	48 89 8d 28 ff ff ff 	mov    %rcx,-0xd8(%rbp)
  4015c5:	0f 87 68 00 00 00    	ja     401633 <main+0x433>
  4015cb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4015d2:	48 8b 0c c5 08 70 40 	mov    0x407008(,%rax,8),%rcx
  4015d9:	00 
  4015da:	ff e1                	jmpq   *%rcx
    {
        // Blur
        case 'b':
            blur(height, width, image);
  4015dc:	8b 7d 84             	mov    -0x7c(%rbp),%edi
  4015df:	8b 75 80             	mov    -0x80(%rbp),%esi
  4015e2:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  4015e9:	e8 b2 05 00 00       	callq  401ba0 <blur>
            break;
  4015ee:	e9 40 00 00 00       	jmpq   401633 <main+0x433>

        // Edges
        case 'e':
            edges(height, width, image);
  4015f3:	8b 7d 84             	mov    -0x7c(%rbp),%edi
  4015f6:	8b 75 80             	mov    -0x80(%rbp),%esi
  4015f9:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  401600:	e8 ab 0d 00 00       	callq  4023b0 <edges>
            break;
  401605:	e9 29 00 00 00       	jmpq   401633 <main+0x433>

        // Grayscale
        case 'g':
            grayscale(height, width, image);
  40160a:	8b 7d 84             	mov    -0x7c(%rbp),%edi
  40160d:	8b 75 80             	mov    -0x80(%rbp),%esi
  401610:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  401617:	e8 44 01 00 00       	callq  401760 <grayscale>
            break;
  40161c:	e9 12 00 00 00       	jmpq   401633 <main+0x433>

        // Reflect
        case 'r':
            reflect(height, width, image);
  401621:	8b 7d 84             	mov    -0x7c(%rbp),%edi
  401624:	8b 75 80             	mov    -0x80(%rbp),%esi
  401627:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  40162e:	e8 bd 02 00 00       	callq  4018f0 <reflect>
            break;
    }

    // Write outfile's BITMAPFILEHEADER
    fwrite(&bf, sizeof(BITMAPFILEHEADER), 1, outptr);
  401633:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  401637:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40163b:	48 89 c7             	mov    %rax,%rdi
  40163e:	be 0e 00 00 00       	mov    $0xe,%esi
  401643:	ba 01 00 00 00       	mov    $0x1,%edx
  401648:	e8 a3 fa ff ff       	callq  4010f0 <fwrite@plt>

    // Write outfile's BITMAPINFOHEADER
    fwrite(&bi, sizeof(BITMAPINFOHEADER), 1, outptr);
  40164d:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
  401651:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  401655:	48 89 cf             	mov    %rcx,%rdi
  401658:	be 28 00 00 00       	mov    $0x28,%esi
  40165d:	b9 01 00 00 00       	mov    $0x1,%ecx
  401662:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
  401669:	48 89 ca             	mov    %rcx,%rdx
  40166c:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
  401673:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  40167a:	e8 71 fa ff ff       	callq  4010f0 <fwrite@plt>

    // Write new pixels to outfile
    for (int i = 0; i < height; i++)
  40167f:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
  401686:	00 00 00 
  401689:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  40168f:	3b 45 84             	cmp    -0x7c(%rbp),%eax
  401692:	0f 8d 8c 00 00 00    	jge    401724 <main+0x524>
    {
        // Write row to outfile
        fwrite(image[i], sizeof(RGBTRIPLE), width, outptr);
  401698:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40169f:	48 63 8d 6c ff ff ff 	movslq -0x94(%rbp),%rcx
  4016a6:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  4016ad:	48 0f af ca          	imul   %rdx,%rcx
  4016b1:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4016b8:	48 01 c8             	add    %rcx,%rax
  4016bb:	48 63 55 80          	movslq -0x80(%rbp),%rdx
  4016bf:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4016c3:	48 89 c7             	mov    %rax,%rdi
  4016c6:	be 03 00 00 00       	mov    $0x3,%esi
  4016cb:	e8 20 fa ff ff       	callq  4010f0 <fwrite@plt>

        // Write padding at end of row
        for (int k = 0; k < padding; k++)
  4016d0:	c7 85 68 ff ff ff 00 	movl   $0x0,-0x98(%rbp)
  4016d7:	00 00 00 
  4016da:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
  4016e0:	3b 85 74 ff ff ff    	cmp    -0x8c(%rbp),%eax
  4016e6:	0f 8d 1f 00 00 00    	jge    40170b <main+0x50b>
  4016ec:	31 ff                	xor    %edi,%edi
        {
            fputc(0x00, outptr);
  4016ee:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  4016f2:	e8 99 f9 ff ff       	callq  401090 <fputc@plt>
        for (int k = 0; k < padding; k++)
  4016f7:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
  4016fd:	83 c0 01             	add    $0x1,%eax
  401700:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
  401706:	e9 cf ff ff ff       	jmpq   4016da <main+0x4da>
        }
    }
  40170b:	e9 00 00 00 00       	jmpq   401710 <main+0x510>
    for (int i = 0; i < height; i++)
  401710:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  401716:	83 c0 01             	add    $0x1,%eax
  401719:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  40171f:	e9 65 ff ff ff       	jmpq   401689 <main+0x489>

    // Free memory for image
    free(image);
  401724:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40172b:	48 89 c7             	mov    %rax,%rdi
  40172e:	e8 fd f8 ff ff       	callq  401030 <free@plt>

    // Close infile
    fclose(inptr);
  401733:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  401737:	e8 44 f9 ff ff       	callq  401080 <fclose@plt>

    // Close outfile
    fclose(outptr);
  40173c:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  401740:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
  401746:	e8 35 f9 ff ff       	callq  401080 <fclose@plt>

    return 0;
  40174b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
}
  401752:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401755:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
  40175c:	5d                   	pop    %rbp
  40175d:	c3                   	retq   
  40175e:	66 90                	xchg   %ax,%ax

0000000000401760 <grayscale>:
//probably because there are just so many lines, but most are pretty self explanatory
//and a little repetitive.

// Convert image to grayscale
void grayscale(int height, int width, RGBTRIPLE image[height][width])
{
  401760:	55                   	push   %rbp
  401761:	48 89 e5             	mov    %rsp,%rbp
  401764:	48 83 ec 30          	sub    $0x30,%rsp
  401768:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40176b:	89 75 f8             	mov    %esi,-0x8(%rbp)
  40176e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  401772:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401775:	89 c1                	mov    %eax,%ecx
    for (int i = 0; i < height; i++)
  401777:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40177e:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  401782:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401785:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  401788:	0f 8d 58 01 00 00    	jge    4018e6 <grayscale+0x186>
    {
        for (int j = 0; j < width; j++)
  40178e:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  401795:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401798:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  40179b:	0f 8d 32 01 00 00    	jge    4018d3 <grayscale+0x173>
  4017a1:	f3 0f 10 05 a7 59 00 	movss  0x59a7(%rip),%xmm0        # 407150 <_IO_stdin_used+0x150>
  4017a8:	00 
        {
            //finds the average of all 3 colours and then sets all 3 to that average
            int avg = round((image[i][j].rgbtBlue + image[i][j].rgbtGreen + image[i][j].rgbtRed) / (float)3);
  4017a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4017ad:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  4017b1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4017b5:	48 0f af ca          	imul   %rdx,%rcx
  4017b9:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4017c0:	48 01 c8             	add    %rcx,%rax
  4017c3:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  4017c7:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4017ce:	48 01 c8             	add    %rcx,%rax
  4017d1:	0f b6 30             	movzbl (%rax),%esi
  4017d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4017d8:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  4017dc:	48 0f af ca          	imul   %rdx,%rcx
  4017e0:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4017e7:	48 01 c8             	add    %rcx,%rax
  4017ea:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  4017ee:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4017f5:	48 01 c8             	add    %rcx,%rax
  4017f8:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  4017fc:	01 fe                	add    %edi,%esi
  4017fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401802:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  401806:	48 0f af ca          	imul   %rdx,%rcx
  40180a:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401811:	48 01 c8             	add    %rcx,%rax
  401814:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401818:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40181f:	48 01 c8             	add    %rcx,%rax
  401822:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  401826:	01 fe                	add    %edi,%esi
  401828:	f3 0f 2a ce          	cvtsi2ss %esi,%xmm1
  40182c:	f3 0f 5e c8          	divss  %xmm0,%xmm1
  401830:	f3 0f 5a c1          	cvtss2sd %xmm1,%xmm0
  401834:	e8 07 f8 ff ff       	callq  401040 <round@plt>
  401839:	f2 0f 2c f0          	cvttsd2si %xmm0,%esi
  40183d:	89 75 e4             	mov    %esi,-0x1c(%rbp)

            image[i][j].rgbtBlue = avg;
  401840:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  401843:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401847:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  40184b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40184f:	48 0f af ca          	imul   %rdx,%rcx
  401853:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40185a:	48 01 c8             	add    %rcx,%rax
  40185d:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401861:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401868:	48 01 c8             	add    %rcx,%rax
  40186b:	40 88 30             	mov    %sil,(%rax)
            image[i][j].rgbtRed = avg;
  40186e:	8b 7d e4             	mov    -0x1c(%rbp),%edi
  401871:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401875:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  401879:	48 0f af ca          	imul   %rdx,%rcx
  40187d:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401884:	48 01 c8             	add    %rcx,%rax
  401887:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  40188b:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401892:	48 01 c8             	add    %rcx,%rax
  401895:	40 88 78 02          	mov    %dil,0x2(%rax)
            image[i][j].rgbtGreen = avg;
  401899:	44 8b 45 e4          	mov    -0x1c(%rbp),%r8d
  40189d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4018a1:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  4018a5:	48 0f af ca          	imul   %rdx,%rcx
  4018a9:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4018b0:	48 01 c8             	add    %rcx,%rax
  4018b3:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  4018b7:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4018be:	48 01 c8             	add    %rcx,%rax
  4018c1:	44 88 40 01          	mov    %r8b,0x1(%rax)
        for (int j = 0; j < width; j++)
  4018c5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4018c8:	83 c0 01             	add    $0x1,%eax
  4018cb:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4018ce:	e9 c2 fe ff ff       	jmpq   401795 <grayscale+0x35>

        }
    }
  4018d3:	e9 00 00 00 00       	jmpq   4018d8 <grayscale+0x178>
    for (int i = 0; i < height; i++)
  4018d8:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4018db:	83 c0 01             	add    $0x1,%eax
  4018de:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4018e1:	e9 9c fe ff ff       	jmpq   401782 <grayscale+0x22>
    return;
  4018e6:	48 83 c4 30          	add    $0x30,%rsp
  4018ea:	5d                   	pop    %rbp
  4018eb:	c3                   	retq   
  4018ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004018f0 <reflect>:
}

// Reflect image horizontally
void reflect(int height, int width, RGBTRIPLE image[height][width])
{
  4018f0:	55                   	push   %rbp
  4018f1:	48 89 e5             	mov    %rsp,%rbp
  4018f4:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4018f7:	89 75 f8             	mov    %esi,-0x8(%rbp)
  4018fa:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4018fe:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401901:	89 c1                	mov    %eax,%ecx
    //similar to a bubble sort, only goes through half the image and swaps with the other half
    for (int i = 0; i < width / 2; i++)
  401903:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40190a:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  40190e:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401911:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  401914:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  401917:	89 c8                	mov    %ecx,%eax
  401919:	99                   	cltd   
  40191a:	b9 02 00 00 00       	mov    $0x2,%ecx
  40191f:	f7 f9                	idiv   %ecx
  401921:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  401924:	39 c1                	cmp    %eax,%ecx
  401926:	0f 8d 6b 02 00 00    	jge    401b97 <reflect+0x2a7>
    {
        for (int j = 0; j < height; j++)
  40192c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  401933:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401936:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  401939:	0f 8d 45 02 00 00    	jge    401b84 <reflect+0x294>
        {
            int tmp = image[j][i].rgbtBlue;
  40193f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401943:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401947:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40194b:	48 0f af ca          	imul   %rdx,%rcx
  40194f:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401956:	48 01 c8             	add    %rcx,%rax
  401959:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  40195d:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401964:	48 01 c8             	add    %rcx,%rax
  401967:	0f b6 30             	movzbl (%rax),%esi
  40196a:	89 75 e4             	mov    %esi,-0x1c(%rbp)
            image[j][i].rgbtBlue = image[j][width - 1 - i].rgbtBlue;
  40196d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401971:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401975:	48 0f af ca          	imul   %rdx,%rcx
  401979:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401980:	48 01 c8             	add    %rcx,%rax
  401983:	8b 75 f8             	mov    -0x8(%rbp),%esi
  401986:	83 ee 01             	sub    $0x1,%esi
  401989:	2b 75 ec             	sub    -0x14(%rbp),%esi
  40198c:	48 63 ce             	movslq %esi,%rcx
  40198f:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401996:	48 01 c8             	add    %rcx,%rax
  401999:	40 8a 38             	mov    (%rax),%dil
  40199c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4019a0:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  4019a4:	48 0f af ca          	imul   %rdx,%rcx
  4019a8:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4019af:	48 01 c8             	add    %rcx,%rax
  4019b2:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  4019b6:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4019bd:	48 01 c8             	add    %rcx,%rax
  4019c0:	40 88 38             	mov    %dil,(%rax)
            image[j][width - 1 - i].rgbtBlue = tmp;
  4019c3:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  4019c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4019ca:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  4019ce:	48 0f af ca          	imul   %rdx,%rcx
  4019d2:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4019d9:	48 01 c8             	add    %rcx,%rax
  4019dc:	44 8b 45 f8          	mov    -0x8(%rbp),%r8d
  4019e0:	41 83 e8 01          	sub    $0x1,%r8d
  4019e4:	44 2b 45 ec          	sub    -0x14(%rbp),%r8d
  4019e8:	49 63 c8             	movslq %r8d,%rcx
  4019eb:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4019f2:	48 01 c8             	add    %rcx,%rax
  4019f5:	40 88 30             	mov    %sil,(%rax)

            tmp = image[j][i].rgbtGreen;
  4019f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4019fc:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401a00:	48 0f af ca          	imul   %rdx,%rcx
  401a04:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401a0b:	48 01 c8             	add    %rcx,%rax
  401a0e:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  401a12:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401a19:	48 01 c8             	add    %rcx,%rax
  401a1c:	44 0f b6 40 01       	movzbl 0x1(%rax),%r8d
  401a21:	44 89 45 e4          	mov    %r8d,-0x1c(%rbp)
            image[j][i].rgbtGreen = image[j][width - 1 - i].rgbtGreen;
  401a25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401a29:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401a2d:	48 0f af ca          	imul   %rdx,%rcx
  401a31:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401a38:	48 01 c8             	add    %rcx,%rax
  401a3b:	44 8b 45 f8          	mov    -0x8(%rbp),%r8d
  401a3f:	41 83 e8 01          	sub    $0x1,%r8d
  401a43:	44 2b 45 ec          	sub    -0x14(%rbp),%r8d
  401a47:	49 63 c8             	movslq %r8d,%rcx
  401a4a:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401a51:	48 01 c8             	add    %rcx,%rax
  401a54:	40 8a 70 01          	mov    0x1(%rax),%sil
  401a58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401a5c:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401a60:	48 0f af ca          	imul   %rdx,%rcx
  401a64:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401a6b:	48 01 c8             	add    %rcx,%rax
  401a6e:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  401a72:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401a79:	48 01 c8             	add    %rcx,%rax
  401a7c:	40 88 70 01          	mov    %sil,0x1(%rax)
            image[j][width - 1 - i].rgbtGreen = tmp;
  401a80:	44 8b 45 e4          	mov    -0x1c(%rbp),%r8d
  401a84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401a88:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401a8c:	48 0f af ca          	imul   %rdx,%rcx
  401a90:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401a97:	48 01 c8             	add    %rcx,%rax
  401a9a:	44 8b 4d f8          	mov    -0x8(%rbp),%r9d
  401a9e:	41 83 e9 01          	sub    $0x1,%r9d
  401aa2:	44 2b 4d ec          	sub    -0x14(%rbp),%r9d
  401aa6:	49 63 c9             	movslq %r9d,%rcx
  401aa9:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401ab0:	48 01 c8             	add    %rcx,%rax
  401ab3:	44 88 40 01          	mov    %r8b,0x1(%rax)

            tmp = image[j][i].rgbtRed;
  401ab7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401abb:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401abf:	48 0f af ca          	imul   %rdx,%rcx
  401ac3:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401aca:	48 01 c8             	add    %rcx,%rax
  401acd:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  401ad1:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401ad8:	48 01 c8             	add    %rcx,%rax
  401adb:	44 0f b6 48 02       	movzbl 0x2(%rax),%r9d
  401ae0:	44 89 4d e4          	mov    %r9d,-0x1c(%rbp)
            image[j][i].rgbtRed = image[j][width - 1 - i].rgbtRed;
  401ae4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401ae8:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401aec:	48 0f af ca          	imul   %rdx,%rcx
  401af0:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401af7:	48 01 c8             	add    %rcx,%rax
  401afa:	44 8b 4d f8          	mov    -0x8(%rbp),%r9d
  401afe:	41 83 e9 01          	sub    $0x1,%r9d
  401b02:	44 2b 4d ec          	sub    -0x14(%rbp),%r9d
  401b06:	49 63 c9             	movslq %r9d,%rcx
  401b09:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401b10:	48 01 c8             	add    %rcx,%rax
  401b13:	40 8a 70 02          	mov    0x2(%rax),%sil
  401b17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401b1b:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401b1f:	48 0f af ca          	imul   %rdx,%rcx
  401b23:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401b2a:	48 01 c8             	add    %rcx,%rax
  401b2d:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  401b31:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401b38:	48 01 c8             	add    %rcx,%rax
  401b3b:	40 88 70 02          	mov    %sil,0x2(%rax)
            image[j][width - 1 - i].rgbtRed = tmp;
  401b3f:	44 8b 4d e4          	mov    -0x1c(%rbp),%r9d
  401b43:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401b47:	48 63 4d e8          	movslq -0x18(%rbp),%rcx
  401b4b:	48 0f af ca          	imul   %rdx,%rcx
  401b4f:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401b56:	48 01 c8             	add    %rcx,%rax
  401b59:	44 8b 55 f8          	mov    -0x8(%rbp),%r10d
  401b5d:	41 83 ea 01          	sub    $0x1,%r10d
  401b61:	44 2b 55 ec          	sub    -0x14(%rbp),%r10d
  401b65:	49 63 ca             	movslq %r10d,%rcx
  401b68:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  401b6f:	48 01 c8             	add    %rcx,%rax
  401b72:	44 88 48 02          	mov    %r9b,0x2(%rax)
        for (int j = 0; j < height; j++)
  401b76:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401b79:	83 c0 01             	add    $0x1,%eax
  401b7c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  401b7f:	e9 af fd ff ff       	jmpq   401933 <reflect+0x43>
        }
    }
  401b84:	e9 00 00 00 00       	jmpq   401b89 <reflect+0x299>
    for (int i = 0; i < width / 2; i++)
  401b89:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401b8c:	83 c0 01             	add    $0x1,%eax
  401b8f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  401b92:	e9 77 fd ff ff       	jmpq   40190e <reflect+0x1e>
    return;
  401b97:	5d                   	pop    %rbp
  401b98:	c3                   	retq   
  401b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401ba0 <blur>:
}

// Blur image
void blur(int height, int width, RGBTRIPLE image[height][width])
{
  401ba0:	55                   	push   %rbp
  401ba1:	48 89 e5             	mov    %rsp,%rbp
  401ba4:	48 83 ec 70          	sub    $0x70,%rsp
  401ba8:	89 7d fc             	mov    %edi,-0x4(%rbp)
  401bab:	89 75 f8             	mov    %esi,-0x8(%rbp)
  401bae:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
void blur(int height, int width, RGBTRIPLE image[height][width])
  401bb2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401bb5:	89 c1                	mov    %eax,%ecx
  401bb7:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401bba:	89 c2                	mov    %eax,%edx
    // updating the image with it's average will mess up later averages.
    // holder holds updated values while image holds original values
    RGBTRIPLE holder[height][width];
  401bbc:	49 89 d0             	mov    %rdx,%r8
  401bbf:	49 89 e1             	mov    %rsp,%r9
  401bc2:	4c 89 4d e8          	mov    %r9,-0x18(%rbp)
  401bc6:	49 89 c9             	mov    %rcx,%r9
  401bc9:	4c 0f af ca          	imul   %rdx,%r9
  401bcd:	4f 8d 4c 49 0f       	lea    0xf(%r9,%r9,2),%r9
  401bd2:	49 83 e1 f0          	and    $0xfffffffffffffff0,%r9
  401bd6:	49 89 e2             	mov    %rsp,%r10
  401bd9:	4d 29 ca             	sub    %r9,%r10
  401bdc:	4c 89 d4             	mov    %r10,%rsp
  401bdf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  401be3:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)

    for (int i = 0; i < height; i++)
  401be7:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  401bee:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
  401bf2:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
  401bf6:	4c 89 55 90          	mov    %r10,-0x70(%rbp)
  401bfa:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  401bfd:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  401c00:	0f 8d e9 06 00 00    	jge    4022ef <blur+0x74f>
    {
        for (int j = 0; j < width; j++)
  401c06:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
  401c0d:	8b 45 d0             	mov    -0x30(%rbp),%eax
  401c10:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  401c13:	0f 8d c3 06 00 00    	jge    4022dc <blur+0x73c>
        {
            //max of eight around a pixel
            int left = j - 1;
  401c19:	8b 45 d0             	mov    -0x30(%rbp),%eax
  401c1c:	83 e8 01             	sub    $0x1,%eax
  401c1f:	89 45 cc             	mov    %eax,-0x34(%rbp)
            int right = j + 1;
  401c22:	8b 45 d0             	mov    -0x30(%rbp),%eax
  401c25:	83 c0 01             	add    $0x1,%eax
  401c28:	89 45 c8             	mov    %eax,-0x38(%rbp)
            int above = i - 1;
  401c2b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  401c2e:	83 e8 01             	sub    $0x1,%eax
  401c31:	89 45 c4             	mov    %eax,-0x3c(%rbp)
            int below = i + 1;
  401c34:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  401c37:	83 c0 01             	add    $0x1,%eax
  401c3a:	89 45 c0             	mov    %eax,-0x40(%rbp)
            int sumR = image[i][j].rgbtRed;
  401c3d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401c41:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
  401c45:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  401c49:	48 0f af d6          	imul   %rsi,%rdx
  401c4d:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401c54:	48 01 d1             	add    %rdx,%rcx
  401c57:	48 63 55 d0          	movslq -0x30(%rbp),%rdx
  401c5b:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401c62:	48 01 d1             	add    %rdx,%rcx
  401c65:	0f b6 41 02          	movzbl 0x2(%rcx),%eax
  401c69:	89 45 bc             	mov    %eax,-0x44(%rbp)
            int sumG = image[i][j].rgbtGreen;
  401c6c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401c70:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
  401c74:	48 0f af d6          	imul   %rsi,%rdx
  401c78:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401c7f:	48 01 d1             	add    %rdx,%rcx
  401c82:	48 63 55 d0          	movslq -0x30(%rbp),%rdx
  401c86:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401c8d:	48 01 d1             	add    %rdx,%rcx
  401c90:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
  401c94:	89 45 b8             	mov    %eax,-0x48(%rbp)
            int sumB = image[i][j].rgbtBlue;
  401c97:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401c9b:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
  401c9f:	48 0f af d6          	imul   %rsi,%rdx
  401ca3:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401caa:	48 01 d1             	add    %rdx,%rcx
  401cad:	48 63 55 d0          	movslq -0x30(%rbp),%rdx
  401cb1:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401cb8:	48 01 d1             	add    %rdx,%rcx
  401cbb:	0f b6 01             	movzbl (%rcx),%eax
  401cbe:	89 45 b4             	mov    %eax,-0x4c(%rbp)
            int counter = 1;
  401cc1:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)

            //checks that it doesn't go out of the image
            if (left >= 0)
  401cc8:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  401ccc:	0f 8c ef 01 00 00    	jl     401ec1 <blur+0x321>
            {
                sumR = sumR + image[i][left].rgbtRed;
  401cd2:	8b 45 bc             	mov    -0x44(%rbp),%eax
  401cd5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401cd9:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
  401cdd:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  401ce1:	48 0f af d6          	imul   %rsi,%rdx
  401ce5:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401cec:	48 01 d1             	add    %rdx,%rcx
  401cef:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  401cf3:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401cfa:	48 01 d1             	add    %rdx,%rcx
  401cfd:	0f b6 79 02          	movzbl 0x2(%rcx),%edi
  401d01:	01 f8                	add    %edi,%eax
  401d03:	89 45 bc             	mov    %eax,-0x44(%rbp)
                sumG = sumG + image[i][left].rgbtGreen;
  401d06:	8b 45 b8             	mov    -0x48(%rbp),%eax
  401d09:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401d0d:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
  401d11:	48 0f af d6          	imul   %rsi,%rdx
  401d15:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401d1c:	48 01 d1             	add    %rdx,%rcx
  401d1f:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  401d23:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401d2a:	48 01 d1             	add    %rdx,%rcx
  401d2d:	0f b6 79 01          	movzbl 0x1(%rcx),%edi
  401d31:	01 f8                	add    %edi,%eax
  401d33:	89 45 b8             	mov    %eax,-0x48(%rbp)
                sumB = sumB + image[i][left].rgbtBlue;
  401d36:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  401d39:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401d3d:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
  401d41:	48 0f af d6          	imul   %rsi,%rdx
  401d45:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401d4c:	48 01 d1             	add    %rdx,%rcx
  401d4f:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  401d53:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401d5a:	48 01 d1             	add    %rdx,%rcx
  401d5d:	0f b6 39             	movzbl (%rcx),%edi
  401d60:	01 f8                	add    %edi,%eax
  401d62:	89 45 b4             	mov    %eax,-0x4c(%rbp)
                counter++;
  401d65:	8b 45 b0             	mov    -0x50(%rbp),%eax
  401d68:	83 c0 01             	add    $0x1,%eax
  401d6b:	89 45 b0             	mov    %eax,-0x50(%rbp)

                if (above >= 0)
  401d6e:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  401d72:	0f 8c 9c 00 00 00    	jl     401e14 <blur+0x274>
                {
                    sumR = sumR + image[above][left].rgbtRed;
  401d78:	8b 45 bc             	mov    -0x44(%rbp),%eax
  401d7b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401d7f:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  401d83:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  401d87:	48 0f af d6          	imul   %rsi,%rdx
  401d8b:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401d92:	48 01 d1             	add    %rdx,%rcx
  401d95:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  401d99:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401da0:	48 01 d1             	add    %rdx,%rcx
  401da3:	0f b6 79 02          	movzbl 0x2(%rcx),%edi
  401da7:	01 f8                	add    %edi,%eax
  401da9:	89 45 bc             	mov    %eax,-0x44(%rbp)
                    sumG = sumG + image[above][left].rgbtGreen;
  401dac:	8b 45 b8             	mov    -0x48(%rbp),%eax
  401daf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401db3:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  401db7:	48 0f af d6          	imul   %rsi,%rdx
  401dbb:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401dc2:	48 01 d1             	add    %rdx,%rcx
  401dc5:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  401dc9:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401dd0:	48 01 d1             	add    %rdx,%rcx
  401dd3:	0f b6 79 01          	movzbl 0x1(%rcx),%edi
  401dd7:	01 f8                	add    %edi,%eax
  401dd9:	89 45 b8             	mov    %eax,-0x48(%rbp)
                    sumB = sumB + image[above][left].rgbtBlue;
  401ddc:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  401ddf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401de3:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  401de7:	48 0f af d6          	imul   %rsi,%rdx
  401deb:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401df2:	48 01 d1             	add    %rdx,%rcx
  401df5:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  401df9:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401e00:	48 01 d1             	add    %rdx,%rcx
  401e03:	0f b6 39             	movzbl (%rcx),%edi
  401e06:	01 f8                	add    %edi,%eax
  401e08:	89 45 b4             	mov    %eax,-0x4c(%rbp)
                    counter++;
  401e0b:	8b 45 b0             	mov    -0x50(%rbp),%eax
  401e0e:	83 c0 01             	add    $0x1,%eax
  401e11:	89 45 b0             	mov    %eax,-0x50(%rbp)
                }

                if (below < height)
  401e14:	8b 45 c0             	mov    -0x40(%rbp),%eax
  401e17:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  401e1a:	0f 8d 9c 00 00 00    	jge    401ebc <blur+0x31c>
                {
                    sumR = sumR + image[below][left].rgbtRed;
  401e20:	8b 45 bc             	mov    -0x44(%rbp),%eax
  401e23:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401e27:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  401e2b:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  401e2f:	48 0f af d6          	imul   %rsi,%rdx
  401e33:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401e3a:	48 01 d1             	add    %rdx,%rcx
  401e3d:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  401e41:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401e48:	48 01 d1             	add    %rdx,%rcx
  401e4b:	0f b6 79 02          	movzbl 0x2(%rcx),%edi
  401e4f:	01 f8                	add    %edi,%eax
  401e51:	89 45 bc             	mov    %eax,-0x44(%rbp)
                    sumG = sumG + image[below][left].rgbtGreen;
  401e54:	8b 45 b8             	mov    -0x48(%rbp),%eax
  401e57:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401e5b:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  401e5f:	48 0f af d6          	imul   %rsi,%rdx
  401e63:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401e6a:	48 01 d1             	add    %rdx,%rcx
  401e6d:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  401e71:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401e78:	48 01 d1             	add    %rdx,%rcx
  401e7b:	0f b6 79 01          	movzbl 0x1(%rcx),%edi
  401e7f:	01 f8                	add    %edi,%eax
  401e81:	89 45 b8             	mov    %eax,-0x48(%rbp)
                    sumB = sumB + image[below][left].rgbtBlue;
  401e84:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  401e87:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401e8b:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  401e8f:	48 0f af d6          	imul   %rsi,%rdx
  401e93:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401e9a:	48 01 d1             	add    %rdx,%rcx
  401e9d:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  401ea1:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401ea8:	48 01 d1             	add    %rdx,%rcx
  401eab:	0f b6 39             	movzbl (%rcx),%edi
  401eae:	01 f8                	add    %edi,%eax
  401eb0:	89 45 b4             	mov    %eax,-0x4c(%rbp)
                    counter++;
  401eb3:	8b 45 b0             	mov    -0x50(%rbp),%eax
  401eb6:	83 c0 01             	add    $0x1,%eax
  401eb9:	89 45 b0             	mov    %eax,-0x50(%rbp)
                }

            }
  401ebc:	e9 00 00 00 00       	jmpq   401ec1 <blur+0x321>
            if (right < width)
  401ec1:	8b 45 c8             	mov    -0x38(%rbp),%eax
  401ec4:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  401ec7:	0f 8d ef 01 00 00    	jge    4020bc <blur+0x51c>
            {
                sumR = sumR + image[i][right].rgbtRed;
  401ecd:	8b 45 bc             	mov    -0x44(%rbp),%eax
  401ed0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401ed4:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
  401ed8:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  401edc:	48 0f af d6          	imul   %rsi,%rdx
  401ee0:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401ee7:	48 01 d1             	add    %rdx,%rcx
  401eea:	48 63 55 c8          	movslq -0x38(%rbp),%rdx
  401eee:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401ef5:	48 01 d1             	add    %rdx,%rcx
  401ef8:	0f b6 79 02          	movzbl 0x2(%rcx),%edi
  401efc:	01 f8                	add    %edi,%eax
  401efe:	89 45 bc             	mov    %eax,-0x44(%rbp)
                sumG = sumG + image[i][right].rgbtGreen;
  401f01:	8b 45 b8             	mov    -0x48(%rbp),%eax
  401f04:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401f08:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
  401f0c:	48 0f af d6          	imul   %rsi,%rdx
  401f10:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401f17:	48 01 d1             	add    %rdx,%rcx
  401f1a:	48 63 55 c8          	movslq -0x38(%rbp),%rdx
  401f1e:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401f25:	48 01 d1             	add    %rdx,%rcx
  401f28:	0f b6 79 01          	movzbl 0x1(%rcx),%edi
  401f2c:	01 f8                	add    %edi,%eax
  401f2e:	89 45 b8             	mov    %eax,-0x48(%rbp)
                sumB = sumB + image[i][right].rgbtBlue;
  401f31:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  401f34:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401f38:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
  401f3c:	48 0f af d6          	imul   %rsi,%rdx
  401f40:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401f47:	48 01 d1             	add    %rdx,%rcx
  401f4a:	48 63 55 c8          	movslq -0x38(%rbp),%rdx
  401f4e:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401f55:	48 01 d1             	add    %rdx,%rcx
  401f58:	0f b6 39             	movzbl (%rcx),%edi
  401f5b:	01 f8                	add    %edi,%eax
  401f5d:	89 45 b4             	mov    %eax,-0x4c(%rbp)
                counter++;
  401f60:	8b 45 b0             	mov    -0x50(%rbp),%eax
  401f63:	83 c0 01             	add    $0x1,%eax
  401f66:	89 45 b0             	mov    %eax,-0x50(%rbp)

                if (above >= 0)
  401f69:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  401f6d:	0f 8c 9c 00 00 00    	jl     40200f <blur+0x46f>
                {
                    sumR = sumR + image[above][right].rgbtRed;
  401f73:	8b 45 bc             	mov    -0x44(%rbp),%eax
  401f76:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401f7a:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  401f7e:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  401f82:	48 0f af d6          	imul   %rsi,%rdx
  401f86:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401f8d:	48 01 d1             	add    %rdx,%rcx
  401f90:	48 63 55 c8          	movslq -0x38(%rbp),%rdx
  401f94:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401f9b:	48 01 d1             	add    %rdx,%rcx
  401f9e:	0f b6 79 02          	movzbl 0x2(%rcx),%edi
  401fa2:	01 f8                	add    %edi,%eax
  401fa4:	89 45 bc             	mov    %eax,-0x44(%rbp)
                    sumG = sumG + image[above][right].rgbtGreen;
  401fa7:	8b 45 b8             	mov    -0x48(%rbp),%eax
  401faa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401fae:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  401fb2:	48 0f af d6          	imul   %rsi,%rdx
  401fb6:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401fbd:	48 01 d1             	add    %rdx,%rcx
  401fc0:	48 63 55 c8          	movslq -0x38(%rbp),%rdx
  401fc4:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401fcb:	48 01 d1             	add    %rdx,%rcx
  401fce:	0f b6 79 01          	movzbl 0x1(%rcx),%edi
  401fd2:	01 f8                	add    %edi,%eax
  401fd4:	89 45 b8             	mov    %eax,-0x48(%rbp)
                    sumB = sumB + image[above][right].rgbtBlue;
  401fd7:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  401fda:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401fde:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  401fe2:	48 0f af d6          	imul   %rsi,%rdx
  401fe6:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401fed:	48 01 d1             	add    %rdx,%rcx
  401ff0:	48 63 55 c8          	movslq -0x38(%rbp),%rdx
  401ff4:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  401ffb:	48 01 d1             	add    %rdx,%rcx
  401ffe:	0f b6 39             	movzbl (%rcx),%edi
  402001:	01 f8                	add    %edi,%eax
  402003:	89 45 b4             	mov    %eax,-0x4c(%rbp)
                    counter++;
  402006:	8b 45 b0             	mov    -0x50(%rbp),%eax
  402009:	83 c0 01             	add    $0x1,%eax
  40200c:	89 45 b0             	mov    %eax,-0x50(%rbp)
                }

                if (below < height)
  40200f:	8b 45 c0             	mov    -0x40(%rbp),%eax
  402012:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  402015:	0f 8d 9c 00 00 00    	jge    4020b7 <blur+0x517>
                {
                    sumR = sumR + image[below][right].rgbtRed;
  40201b:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40201e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  402022:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  402026:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  40202a:	48 0f af d6          	imul   %rsi,%rdx
  40202e:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402035:	48 01 d1             	add    %rdx,%rcx
  402038:	48 63 55 c8          	movslq -0x38(%rbp),%rdx
  40203c:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402043:	48 01 d1             	add    %rdx,%rcx
  402046:	0f b6 79 02          	movzbl 0x2(%rcx),%edi
  40204a:	01 f8                	add    %edi,%eax
  40204c:	89 45 bc             	mov    %eax,-0x44(%rbp)
                    sumG = sumG + image[below][right].rgbtGreen;
  40204f:	8b 45 b8             	mov    -0x48(%rbp),%eax
  402052:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  402056:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  40205a:	48 0f af d6          	imul   %rsi,%rdx
  40205e:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402065:	48 01 d1             	add    %rdx,%rcx
  402068:	48 63 55 c8          	movslq -0x38(%rbp),%rdx
  40206c:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402073:	48 01 d1             	add    %rdx,%rcx
  402076:	0f b6 79 01          	movzbl 0x1(%rcx),%edi
  40207a:	01 f8                	add    %edi,%eax
  40207c:	89 45 b8             	mov    %eax,-0x48(%rbp)
                    sumB = sumB + image[below][right].rgbtBlue;
  40207f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  402082:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  402086:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  40208a:	48 0f af d6          	imul   %rsi,%rdx
  40208e:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402095:	48 01 d1             	add    %rdx,%rcx
  402098:	48 63 55 c8          	movslq -0x38(%rbp),%rdx
  40209c:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4020a3:	48 01 d1             	add    %rdx,%rcx
  4020a6:	0f b6 39             	movzbl (%rcx),%edi
  4020a9:	01 f8                	add    %edi,%eax
  4020ab:	89 45 b4             	mov    %eax,-0x4c(%rbp)
                    counter++;
  4020ae:	8b 45 b0             	mov    -0x50(%rbp),%eax
  4020b1:	83 c0 01             	add    $0x1,%eax
  4020b4:	89 45 b0             	mov    %eax,-0x50(%rbp)
                }
            }
  4020b7:	e9 00 00 00 00       	jmpq   4020bc <blur+0x51c>

            if (above >= 0)
  4020bc:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  4020c0:	0f 8c 9c 00 00 00    	jl     402162 <blur+0x5c2>
            {
                sumR = sumR + image[above][j].rgbtRed;
  4020c6:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4020c9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4020cd:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  4020d1:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  4020d5:	48 0f af d6          	imul   %rsi,%rdx
  4020d9:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4020e0:	48 01 d1             	add    %rdx,%rcx
  4020e3:	48 63 55 d0          	movslq -0x30(%rbp),%rdx
  4020e7:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4020ee:	48 01 d1             	add    %rdx,%rcx
  4020f1:	0f b6 79 02          	movzbl 0x2(%rcx),%edi
  4020f5:	01 f8                	add    %edi,%eax
  4020f7:	89 45 bc             	mov    %eax,-0x44(%rbp)
                sumG = sumG + image[above][j].rgbtGreen;
  4020fa:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4020fd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  402101:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  402105:	48 0f af d6          	imul   %rsi,%rdx
  402109:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402110:	48 01 d1             	add    %rdx,%rcx
  402113:	48 63 55 d0          	movslq -0x30(%rbp),%rdx
  402117:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40211e:	48 01 d1             	add    %rdx,%rcx
  402121:	0f b6 79 01          	movzbl 0x1(%rcx),%edi
  402125:	01 f8                	add    %edi,%eax
  402127:	89 45 b8             	mov    %eax,-0x48(%rbp)
                sumB = sumB + image[above][j].rgbtBlue;
  40212a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  40212d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  402131:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  402135:	48 0f af d6          	imul   %rsi,%rdx
  402139:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402140:	48 01 d1             	add    %rdx,%rcx
  402143:	48 63 55 d0          	movslq -0x30(%rbp),%rdx
  402147:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40214e:	48 01 d1             	add    %rdx,%rcx
  402151:	0f b6 39             	movzbl (%rcx),%edi
  402154:	01 f8                	add    %edi,%eax
  402156:	89 45 b4             	mov    %eax,-0x4c(%rbp)
                counter++;
  402159:	8b 45 b0             	mov    -0x50(%rbp),%eax
  40215c:	83 c0 01             	add    $0x1,%eax
  40215f:	89 45 b0             	mov    %eax,-0x50(%rbp)
            }

            if (below < height)
  402162:	8b 45 c0             	mov    -0x40(%rbp),%eax
  402165:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  402168:	0f 8d 9c 00 00 00    	jge    40220a <blur+0x66a>
            {
                sumR = sumR + image[below][j].rgbtRed;
  40216e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  402171:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  402175:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  402179:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  40217d:	48 0f af d6          	imul   %rsi,%rdx
  402181:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402188:	48 01 d1             	add    %rdx,%rcx
  40218b:	48 63 55 d0          	movslq -0x30(%rbp),%rdx
  40218f:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402196:	48 01 d1             	add    %rdx,%rcx
  402199:	0f b6 79 02          	movzbl 0x2(%rcx),%edi
  40219d:	01 f8                	add    %edi,%eax
  40219f:	89 45 bc             	mov    %eax,-0x44(%rbp)
                sumG = sumG + image[below][j].rgbtGreen;
  4021a2:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4021a5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4021a9:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  4021ad:	48 0f af d6          	imul   %rsi,%rdx
  4021b1:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4021b8:	48 01 d1             	add    %rdx,%rcx
  4021bb:	48 63 55 d0          	movslq -0x30(%rbp),%rdx
  4021bf:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4021c6:	48 01 d1             	add    %rdx,%rcx
  4021c9:	0f b6 79 01          	movzbl 0x1(%rcx),%edi
  4021cd:	01 f8                	add    %edi,%eax
  4021cf:	89 45 b8             	mov    %eax,-0x48(%rbp)
                sumB = sumB + image[below][j].rgbtBlue;
  4021d2:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  4021d5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4021d9:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  4021dd:	48 0f af d6          	imul   %rsi,%rdx
  4021e1:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4021e8:	48 01 d1             	add    %rdx,%rcx
  4021eb:	48 63 55 d0          	movslq -0x30(%rbp),%rdx
  4021ef:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4021f6:	48 01 d1             	add    %rdx,%rcx
  4021f9:	0f b6 39             	movzbl (%rcx),%edi
  4021fc:	01 f8                	add    %edi,%eax
  4021fe:	89 45 b4             	mov    %eax,-0x4c(%rbp)
                counter++;
  402201:	8b 45 b0             	mov    -0x50(%rbp),%eax
  402204:	83 c0 01             	add    $0x1,%eax
  402207:	89 45 b0             	mov    %eax,-0x50(%rbp)
            }
            //calculating the average
            holder[i][j].rgbtRed = round(sumR / (float) counter);
  40220a:	f3 0f 2a 45 bc       	cvtsi2ssl -0x44(%rbp),%xmm0
  40220f:	f3 0f 2a 4d b0       	cvtsi2ssl -0x50(%rbp),%xmm1
  402214:	f3 0f 5e c1          	divss  %xmm1,%xmm0
  402218:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
  40221c:	e8 1f ee ff ff       	callq  401040 <round@plt>
  402221:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  402225:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  402229:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40222d:	48 0f af ca          	imul   %rdx,%rcx
  402231:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
  402235:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  402239:	48 01 ce             	add    %rcx,%rsi
  40223c:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  402240:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
  402244:	88 44 0e 02          	mov    %al,0x2(%rsi,%rcx,1)
            holder[i][j].rgbtGreen = round(sumG / (float) counter);
  402248:	f3 0f 2a 45 b8       	cvtsi2ssl -0x48(%rbp),%xmm0
  40224d:	f3 0f 2a 4d b0       	cvtsi2ssl -0x50(%rbp),%xmm1
  402252:	f3 0f 5e c1          	divss  %xmm1,%xmm0
  402256:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
  40225a:	e8 e1 ed ff ff       	callq  401040 <round@plt>
  40225f:	f2 0f 2c f8          	cvttsd2si %xmm0,%edi
  402263:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  402267:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40226b:	48 0f af ca          	imul   %rdx,%rcx
  40226f:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
  402273:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  402277:	48 01 ce             	add    %rcx,%rsi
  40227a:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  40227e:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
  402282:	40 88 7c 0e 01       	mov    %dil,0x1(%rsi,%rcx,1)
            holder[i][j].rgbtBlue = round(sumB / (float) counter);
  402287:	f3 0f 2a 45 b4       	cvtsi2ssl -0x4c(%rbp),%xmm0
  40228c:	f3 0f 2a 4d b0       	cvtsi2ssl -0x50(%rbp),%xmm1
  402291:	f3 0f 5e c1          	divss  %xmm1,%xmm0
  402295:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
  402299:	e8 a2 ed ff ff       	callq  401040 <round@plt>
  40229e:	f2 44 0f 2c c0       	cvttsd2si %xmm0,%r8d
  4022a3:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  4022a7:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  4022ab:	48 0f af ca          	imul   %rdx,%rcx
  4022af:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4022b6:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  4022ba:	48 01 ce             	add    %rcx,%rsi
  4022bd:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  4022c1:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4022c8:	48 01 ce             	add    %rcx,%rsi
  4022cb:	44 88 06             	mov    %r8b,(%rsi)
        for (int j = 0; j < width; j++)
  4022ce:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4022d1:	83 c0 01             	add    $0x1,%eax
  4022d4:	89 45 d0             	mov    %eax,-0x30(%rbp)
  4022d7:	e9 31 f9 ff ff       	jmpq   401c0d <blur+0x6d>
        }
    }
  4022dc:	e9 00 00 00 00       	jmpq   4022e1 <blur+0x741>
    for (int i = 0; i < height; i++)
  4022e1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4022e4:	83 c0 01             	add    $0x1,%eax
  4022e7:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  4022ea:	e9 0b f9 ff ff       	jmpq   401bfa <blur+0x5a>
    //giving image the new value.
    for (int i = 0; i < height; i++)
  4022ef:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
  4022f6:	8b 45 ac             	mov    -0x54(%rbp),%eax
  4022f9:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  4022fc:	0f 8d 94 00 00 00    	jge    402396 <blur+0x7f6>
    {
        for (int j = 0; j < width; j++)
  402302:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
  402309:	8b 45 a8             	mov    -0x58(%rbp),%eax
  40230c:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  40230f:	0f 8d 6e 00 00 00    	jge    402383 <blur+0x7e3>
        {
            image[i][j] = holder[i][j];
  402315:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402319:	48 63 4d ac          	movslq -0x54(%rbp),%rcx
  40231d:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  402321:	48 0f af ca          	imul   %rdx,%rcx
  402325:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40232c:	48 01 c8             	add    %rcx,%rax
  40232f:	48 63 4d a8          	movslq -0x58(%rbp),%rcx
  402333:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40233a:	48 01 c8             	add    %rcx,%rax
  40233d:	48 63 4d ac          	movslq -0x54(%rbp),%rcx
  402341:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  402345:	48 0f af ce          	imul   %rsi,%rcx
  402349:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402350:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
  402354:	48 01 cf             	add    %rcx,%rdi
  402357:	48 63 4d a8          	movslq -0x58(%rbp),%rcx
  40235b:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402362:	48 01 cf             	add    %rcx,%rdi
  402365:	66 44 8b 07          	mov    (%rdi),%r8w
  402369:	66 44 89 00          	mov    %r8w,(%rax)
  40236d:	44 8a 4f 02          	mov    0x2(%rdi),%r9b
  402371:	44 88 48 02          	mov    %r9b,0x2(%rax)
        for (int j = 0; j < width; j++)
  402375:	8b 45 a8             	mov    -0x58(%rbp),%eax
  402378:	83 c0 01             	add    $0x1,%eax
  40237b:	89 45 a8             	mov    %eax,-0x58(%rbp)
  40237e:	e9 86 ff ff ff       	jmpq   402309 <blur+0x769>
        }
    }
  402383:	e9 00 00 00 00       	jmpq   402388 <blur+0x7e8>
    for (int i = 0; i < height; i++)
  402388:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40238b:	83 c0 01             	add    $0x1,%eax
  40238e:	89 45 ac             	mov    %eax,-0x54(%rbp)
  402391:	e9 60 ff ff ff       	jmpq   4022f6 <blur+0x756>
    return;
}
  402396:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40239a:	48 89 c4             	mov    %rax,%rsp
  40239d:	48 89 ec             	mov    %rbp,%rsp
  4023a0:	5d                   	pop    %rbp
  4023a1:	c3                   	retq   
  4023a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4023a9:	00 00 00 
  4023ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004023b0 <edges>:

// Detect edges
void edges(int height, int width, RGBTRIPLE image[height][width])
{
  4023b0:	55                   	push   %rbp
  4023b1:	48 89 e5             	mov    %rsp,%rbp
  4023b4:	48 81 ec a0 04 00 00 	sub    $0x4a0,%rsp
  4023bb:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4023be:	89 75 f8             	mov    %esi,-0x8(%rbp)
  4023c1:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
void edges(int height, int width, RGBTRIPLE image[height][width])
  4023c5:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4023c8:	89 c1                	mov    %eax,%ecx
  4023ca:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4023cd:	89 c2                	mov    %eax,%edx
    RGBTRIPLE holder[height][width];
  4023cf:	49 89 d0             	mov    %rdx,%r8
  4023d2:	49 89 e1             	mov    %rsp,%r9
  4023d5:	4c 89 4d e8          	mov    %r9,-0x18(%rbp)
  4023d9:	49 89 c9             	mov    %rcx,%r9
  4023dc:	4c 0f af ca          	imul   %rdx,%r9
  4023e0:	4f 8d 4c 49 0f       	lea    0xf(%r9,%r9,2),%r9
  4023e5:	49 83 e1 f0          	and    $0xfffffffffffffff0,%r9
  4023e9:	49 89 e2             	mov    %rsp,%r10
  4023ec:	4d 29 ca             	sub    %r9,%r10
  4023ef:	4c 89 d4             	mov    %r10,%rsp
  4023f2:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  4023f6:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)

    //inner image, doesn't do the edges.
    for (int i = 1; i < height - 1; i++)
  4023fa:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
  402401:	48 89 95 d8 fe ff ff 	mov    %rdx,-0x128(%rbp)
  402408:	4c 89 85 d0 fe ff ff 	mov    %r8,-0x130(%rbp)
  40240f:	4c 89 95 c8 fe ff ff 	mov    %r10,-0x138(%rbp)
  402416:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  402419:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40241c:	83 e9 01             	sub    $0x1,%ecx
  40241f:	39 c8                	cmp    %ecx,%eax
  402421:	0f 8d f9 0a 00 00    	jge    402f20 <edges+0xb70>
    {
        for (int j = 1; j < width - 1; j++)
  402427:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%rbp)
  40242e:	8b 45 d0             	mov    -0x30(%rbp),%eax
  402431:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402434:	83 e9 01             	sub    $0x1,%ecx
  402437:	39 c8                	cmp    %ecx,%eax
  402439:	0f 8d ce 0a 00 00    	jge    402f0d <edges+0xb5d>
  40243f:	f2 0f 10 0d 19 4d 00 	movsd  0x4d19(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  402446:	00 
        {
            int sumrx = -2 * image[i][j - 1].rgbtRed - image[i - 1][j - 1].rgbtRed - image[i + 1][j - 1].rgbtRed + image[i - 1][j + 1].rgbtRed
  402447:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40244b:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  40244f:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
  402456:	48 0f af ca          	imul   %rdx,%rcx
  40245a:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402461:	48 01 c8             	add    %rcx,%rax
  402464:	8b 75 d0             	mov    -0x30(%rbp),%esi
  402467:	83 ee 01             	sub    $0x1,%esi
  40246a:	48 63 ce             	movslq %esi,%rcx
  40246d:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402474:	48 01 c8             	add    %rcx,%rax
  402477:	0f b6 70 02          	movzbl 0x2(%rax),%esi
  40247b:	69 f6 fe ff ff ff    	imul   $0xfffffffe,%esi,%esi
  402481:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402485:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402488:	83 ef 01             	sub    $0x1,%edi
  40248b:	48 63 cf             	movslq %edi,%rcx
  40248e:	48 0f af ca          	imul   %rdx,%rcx
  402492:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402499:	48 01 c8             	add    %rcx,%rax
  40249c:	8b 7d d0             	mov    -0x30(%rbp),%edi
  40249f:	83 ef 01             	sub    $0x1,%edi
  4024a2:	48 63 cf             	movslq %edi,%rcx
  4024a5:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4024ac:	48 01 c8             	add    %rcx,%rax
  4024af:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  4024b3:	29 fe                	sub    %edi,%esi
  4024b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4024b9:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  4024bc:	83 c7 01             	add    $0x1,%edi
  4024bf:	48 63 cf             	movslq %edi,%rcx
  4024c2:	48 0f af ca          	imul   %rdx,%rcx
  4024c6:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4024cd:	48 01 c8             	add    %rcx,%rax
  4024d0:	8b 7d d0             	mov    -0x30(%rbp),%edi
  4024d3:	83 ef 01             	sub    $0x1,%edi
  4024d6:	48 63 cf             	movslq %edi,%rcx
  4024d9:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4024e0:	48 01 c8             	add    %rcx,%rax
  4024e3:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  4024e7:	29 fe                	sub    %edi,%esi
  4024e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4024ed:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  4024f0:	83 ef 01             	sub    $0x1,%edi
  4024f3:	48 63 cf             	movslq %edi,%rcx
  4024f6:	48 0f af ca          	imul   %rdx,%rcx
  4024fa:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402501:	48 01 c8             	add    %rcx,%rax
  402504:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402507:	83 c7 01             	add    $0x1,%edi
  40250a:	48 63 cf             	movslq %edi,%rcx
  40250d:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402514:	48 01 c8             	add    %rcx,%rax
  402517:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  40251b:	01 fe                	add    %edi,%esi
                        + 2 * image[i][j + 1].rgbtRed + image[i + 1][j + 1].rgbtRed;
  40251d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402521:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  402525:	48 0f af ca          	imul   %rdx,%rcx
  402529:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402530:	48 01 c8             	add    %rcx,%rax
  402533:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402536:	83 c7 01             	add    $0x1,%edi
  402539:	48 63 cf             	movslq %edi,%rcx
  40253c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402543:	48 01 c8             	add    %rcx,%rax
  402546:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  40254a:	c1 e7 01             	shl    $0x1,%edi
  40254d:	01 fe                	add    %edi,%esi
  40254f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402553:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402556:	83 c7 01             	add    $0x1,%edi
  402559:	48 63 cf             	movslq %edi,%rcx
  40255c:	48 0f af ca          	imul   %rdx,%rcx
  402560:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402567:	48 01 c8             	add    %rcx,%rax
  40256a:	8b 7d d0             	mov    -0x30(%rbp),%edi
  40256d:	83 c7 01             	add    $0x1,%edi
  402570:	48 63 cf             	movslq %edi,%rcx
  402573:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40257a:	48 01 c8             	add    %rcx,%rax
  40257d:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  402581:	01 fe                	add    %edi,%esi
            int sumrx = -2 * image[i][j - 1].rgbtRed - image[i - 1][j - 1].rgbtRed - image[i + 1][j - 1].rgbtRed + image[i - 1][j + 1].rgbtRed
  402583:	89 75 cc             	mov    %esi,-0x34(%rbp)
            int sumgx = -2 * image[i][j - 1].rgbtGreen - image[i - 1][j - 1].rgbtGreen - image[i + 1][j - 1].rgbtGreen + image[i - 1][j +
  402586:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40258a:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  40258e:	48 0f af ca          	imul   %rdx,%rcx
  402592:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402599:	48 01 c8             	add    %rcx,%rax
  40259c:	8b 75 d0             	mov    -0x30(%rbp),%esi
  40259f:	83 ee 01             	sub    $0x1,%esi
  4025a2:	48 63 ce             	movslq %esi,%rcx
  4025a5:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4025ac:	48 01 c8             	add    %rcx,%rax
  4025af:	0f b6 70 01          	movzbl 0x1(%rax),%esi
  4025b3:	69 f6 fe ff ff ff    	imul   $0xfffffffe,%esi,%esi
  4025b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4025bd:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  4025c0:	83 ef 01             	sub    $0x1,%edi
  4025c3:	48 63 cf             	movslq %edi,%rcx
  4025c6:	48 0f af ca          	imul   %rdx,%rcx
  4025ca:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4025d1:	48 01 c8             	add    %rcx,%rax
  4025d4:	8b 7d d0             	mov    -0x30(%rbp),%edi
  4025d7:	83 ef 01             	sub    $0x1,%edi
  4025da:	48 63 cf             	movslq %edi,%rcx
  4025dd:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4025e4:	48 01 c8             	add    %rcx,%rax
  4025e7:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  4025eb:	29 fe                	sub    %edi,%esi
  4025ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4025f1:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  4025f4:	83 c7 01             	add    $0x1,%edi
  4025f7:	48 63 cf             	movslq %edi,%rcx
  4025fa:	48 0f af ca          	imul   %rdx,%rcx
  4025fe:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402605:	48 01 c8             	add    %rcx,%rax
  402608:	8b 7d d0             	mov    -0x30(%rbp),%edi
  40260b:	83 ef 01             	sub    $0x1,%edi
  40260e:	48 63 cf             	movslq %edi,%rcx
  402611:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402618:	48 01 c8             	add    %rcx,%rax
  40261b:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  40261f:	29 fe                	sub    %edi,%esi
  402621:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402625:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402628:	83 ef 01             	sub    $0x1,%edi
  40262b:	48 63 cf             	movslq %edi,%rcx
  40262e:	48 0f af ca          	imul   %rdx,%rcx
  402632:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402639:	48 01 c8             	add    %rcx,%rax
  40263c:	8b 7d d0             	mov    -0x30(%rbp),%edi
  40263f:	83 c7 01             	add    $0x1,%edi
  402642:	48 63 cf             	movslq %edi,%rcx
  402645:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40264c:	48 01 c8             	add    %rcx,%rax
  40264f:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  402653:	01 fe                	add    %edi,%esi
                        1].rgbtGreen + 2 * image[i][j + 1].rgbtGreen + image[i + 1][j + 1].rgbtGreen;
  402655:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402659:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  40265d:	48 0f af ca          	imul   %rdx,%rcx
  402661:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402668:	48 01 c8             	add    %rcx,%rax
  40266b:	8b 7d d0             	mov    -0x30(%rbp),%edi
  40266e:	83 c7 01             	add    $0x1,%edi
  402671:	48 63 cf             	movslq %edi,%rcx
  402674:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40267b:	48 01 c8             	add    %rcx,%rax
  40267e:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  402682:	c1 e7 01             	shl    $0x1,%edi
  402685:	01 fe                	add    %edi,%esi
  402687:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40268b:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  40268e:	83 c7 01             	add    $0x1,%edi
  402691:	48 63 cf             	movslq %edi,%rcx
  402694:	48 0f af ca          	imul   %rdx,%rcx
  402698:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40269f:	48 01 c8             	add    %rcx,%rax
  4026a2:	8b 7d d0             	mov    -0x30(%rbp),%edi
  4026a5:	83 c7 01             	add    $0x1,%edi
  4026a8:	48 63 cf             	movslq %edi,%rcx
  4026ab:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4026b2:	48 01 c8             	add    %rcx,%rax
  4026b5:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  4026b9:	01 fe                	add    %edi,%esi
            int sumgx = -2 * image[i][j - 1].rgbtGreen - image[i - 1][j - 1].rgbtGreen - image[i + 1][j - 1].rgbtGreen + image[i - 1][j +
  4026bb:	89 75 c8             	mov    %esi,-0x38(%rbp)
            int sumbx = -2 * image[i][j - 1].rgbtBlue - image[i - 1][j - 1].rgbtBlue - image[i + 1][j - 1].rgbtBlue + image[i - 1][j +
  4026be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4026c2:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  4026c6:	48 0f af ca          	imul   %rdx,%rcx
  4026ca:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4026d1:	48 01 c8             	add    %rcx,%rax
  4026d4:	8b 75 d0             	mov    -0x30(%rbp),%esi
  4026d7:	83 ee 01             	sub    $0x1,%esi
  4026da:	48 63 ce             	movslq %esi,%rcx
  4026dd:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4026e4:	48 01 c8             	add    %rcx,%rax
  4026e7:	0f b6 30             	movzbl (%rax),%esi
  4026ea:	69 f6 fe ff ff ff    	imul   $0xfffffffe,%esi,%esi
  4026f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4026f4:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  4026f7:	83 ef 01             	sub    $0x1,%edi
  4026fa:	48 63 cf             	movslq %edi,%rcx
  4026fd:	48 0f af ca          	imul   %rdx,%rcx
  402701:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402708:	48 01 c8             	add    %rcx,%rax
  40270b:	8b 7d d0             	mov    -0x30(%rbp),%edi
  40270e:	83 ef 01             	sub    $0x1,%edi
  402711:	48 63 cf             	movslq %edi,%rcx
  402714:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40271b:	48 01 c8             	add    %rcx,%rax
  40271e:	0f b6 38             	movzbl (%rax),%edi
  402721:	29 fe                	sub    %edi,%esi
  402723:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402727:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  40272a:	83 c7 01             	add    $0x1,%edi
  40272d:	48 63 cf             	movslq %edi,%rcx
  402730:	48 0f af ca          	imul   %rdx,%rcx
  402734:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40273b:	48 01 c8             	add    %rcx,%rax
  40273e:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402741:	83 ef 01             	sub    $0x1,%edi
  402744:	48 63 cf             	movslq %edi,%rcx
  402747:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40274e:	48 01 c8             	add    %rcx,%rax
  402751:	0f b6 38             	movzbl (%rax),%edi
  402754:	29 fe                	sub    %edi,%esi
  402756:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40275a:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  40275d:	83 ef 01             	sub    $0x1,%edi
  402760:	48 63 cf             	movslq %edi,%rcx
  402763:	48 0f af ca          	imul   %rdx,%rcx
  402767:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40276e:	48 01 c8             	add    %rcx,%rax
  402771:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402774:	83 c7 01             	add    $0x1,%edi
  402777:	48 63 cf             	movslq %edi,%rcx
  40277a:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402781:	48 01 c8             	add    %rcx,%rax
  402784:	0f b6 38             	movzbl (%rax),%edi
  402787:	01 fe                	add    %edi,%esi
                        1].rgbtBlue + 2 * image[i][j + 1].rgbtBlue + image[i + 1][j + 1].rgbtBlue;
  402789:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40278d:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  402791:	48 0f af ca          	imul   %rdx,%rcx
  402795:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40279c:	48 01 c8             	add    %rcx,%rax
  40279f:	8b 7d d0             	mov    -0x30(%rbp),%edi
  4027a2:	83 c7 01             	add    $0x1,%edi
  4027a5:	48 63 cf             	movslq %edi,%rcx
  4027a8:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4027af:	48 01 c8             	add    %rcx,%rax
  4027b2:	0f b6 38             	movzbl (%rax),%edi
  4027b5:	c1 e7 01             	shl    $0x1,%edi
  4027b8:	01 fe                	add    %edi,%esi
  4027ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4027be:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  4027c1:	83 c7 01             	add    $0x1,%edi
  4027c4:	48 63 cf             	movslq %edi,%rcx
  4027c7:	48 0f af ca          	imul   %rdx,%rcx
  4027cb:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4027d2:	48 01 c8             	add    %rcx,%rax
  4027d5:	8b 7d d0             	mov    -0x30(%rbp),%edi
  4027d8:	83 c7 01             	add    $0x1,%edi
  4027db:	48 63 cf             	movslq %edi,%rcx
  4027de:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4027e5:	48 01 c8             	add    %rcx,%rax
  4027e8:	0f b6 38             	movzbl (%rax),%edi
  4027eb:	01 fe                	add    %edi,%esi
            int sumbx = -2 * image[i][j - 1].rgbtBlue - image[i - 1][j - 1].rgbtBlue - image[i + 1][j - 1].rgbtBlue + image[i - 1][j +
  4027ed:	89 75 c4             	mov    %esi,-0x3c(%rbp)

            int sumry = -2 * image[i - 1][j].rgbtRed - image[i - 1][j - 1].rgbtRed - image[i - 1][j + 1].rgbtRed + image[i + 1][j - 1].rgbtRed
  4027f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4027f4:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  4027f7:	83 ee 01             	sub    $0x1,%esi
  4027fa:	48 63 ce             	movslq %esi,%rcx
  4027fd:	48 0f af ca          	imul   %rdx,%rcx
  402801:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402808:	48 01 c8             	add    %rcx,%rax
  40280b:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  40280f:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402816:	48 01 c8             	add    %rcx,%rax
  402819:	0f b6 70 02          	movzbl 0x2(%rax),%esi
  40281d:	69 f6 fe ff ff ff    	imul   $0xfffffffe,%esi,%esi
  402823:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402827:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  40282a:	83 ef 01             	sub    $0x1,%edi
  40282d:	48 63 cf             	movslq %edi,%rcx
  402830:	48 0f af ca          	imul   %rdx,%rcx
  402834:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40283b:	48 01 c8             	add    %rcx,%rax
  40283e:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402841:	83 ef 01             	sub    $0x1,%edi
  402844:	48 63 cf             	movslq %edi,%rcx
  402847:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40284e:	48 01 c8             	add    %rcx,%rax
  402851:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  402855:	29 fe                	sub    %edi,%esi
  402857:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40285b:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  40285e:	83 ef 01             	sub    $0x1,%edi
  402861:	48 63 cf             	movslq %edi,%rcx
  402864:	48 0f af ca          	imul   %rdx,%rcx
  402868:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40286f:	48 01 c8             	add    %rcx,%rax
  402872:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402875:	83 c7 01             	add    $0x1,%edi
  402878:	48 63 cf             	movslq %edi,%rcx
  40287b:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402882:	48 01 c8             	add    %rcx,%rax
  402885:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  402889:	29 fe                	sub    %edi,%esi
  40288b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40288f:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402892:	83 c7 01             	add    $0x1,%edi
  402895:	48 63 cf             	movslq %edi,%rcx
  402898:	48 0f af ca          	imul   %rdx,%rcx
  40289c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4028a3:	48 01 c8             	add    %rcx,%rax
  4028a6:	8b 7d d0             	mov    -0x30(%rbp),%edi
  4028a9:	83 ef 01             	sub    $0x1,%edi
  4028ac:	48 63 cf             	movslq %edi,%rcx
  4028af:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4028b6:	48 01 c8             	add    %rcx,%rax
  4028b9:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  4028bd:	01 fe                	add    %edi,%esi
                        + 2 * image[i + 1][j].rgbtRed + image[i + 1][j + 1].rgbtRed;
  4028bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4028c3:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  4028c6:	83 c7 01             	add    $0x1,%edi
  4028c9:	48 63 cf             	movslq %edi,%rcx
  4028cc:	48 0f af ca          	imul   %rdx,%rcx
  4028d0:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4028d7:	48 01 c8             	add    %rcx,%rax
  4028da:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  4028de:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4028e5:	48 01 c8             	add    %rcx,%rax
  4028e8:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  4028ec:	c1 e7 01             	shl    $0x1,%edi
  4028ef:	01 fe                	add    %edi,%esi
  4028f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4028f5:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  4028f8:	83 c7 01             	add    $0x1,%edi
  4028fb:	48 63 cf             	movslq %edi,%rcx
  4028fe:	48 0f af ca          	imul   %rdx,%rcx
  402902:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402909:	48 01 c8             	add    %rcx,%rax
  40290c:	8b 7d d0             	mov    -0x30(%rbp),%edi
  40290f:	83 c7 01             	add    $0x1,%edi
  402912:	48 63 cf             	movslq %edi,%rcx
  402915:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40291c:	48 01 c8             	add    %rcx,%rax
  40291f:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  402923:	01 fe                	add    %edi,%esi
            int sumry = -2 * image[i - 1][j].rgbtRed - image[i - 1][j - 1].rgbtRed - image[i - 1][j + 1].rgbtRed + image[i + 1][j - 1].rgbtRed
  402925:	89 75 c0             	mov    %esi,-0x40(%rbp)
            int sumgy = -2 * image[i - 1][j].rgbtGreen - image[i - 1][j - 1].rgbtGreen - image[i - 1][j + 1].rgbtGreen + image[i + 1][j -
  402928:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40292c:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  40292f:	83 ee 01             	sub    $0x1,%esi
  402932:	48 63 ce             	movslq %esi,%rcx
  402935:	48 0f af ca          	imul   %rdx,%rcx
  402939:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402940:	48 01 c8             	add    %rcx,%rax
  402943:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  402947:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40294e:	48 01 c8             	add    %rcx,%rax
  402951:	0f b6 70 01          	movzbl 0x1(%rax),%esi
  402955:	69 f6 fe ff ff ff    	imul   $0xfffffffe,%esi,%esi
  40295b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40295f:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402962:	83 ef 01             	sub    $0x1,%edi
  402965:	48 63 cf             	movslq %edi,%rcx
  402968:	48 0f af ca          	imul   %rdx,%rcx
  40296c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402973:	48 01 c8             	add    %rcx,%rax
  402976:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402979:	83 ef 01             	sub    $0x1,%edi
  40297c:	48 63 cf             	movslq %edi,%rcx
  40297f:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402986:	48 01 c8             	add    %rcx,%rax
  402989:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  40298d:	29 fe                	sub    %edi,%esi
  40298f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402993:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402996:	83 ef 01             	sub    $0x1,%edi
  402999:	48 63 cf             	movslq %edi,%rcx
  40299c:	48 0f af ca          	imul   %rdx,%rcx
  4029a0:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4029a7:	48 01 c8             	add    %rcx,%rax
  4029aa:	8b 7d d0             	mov    -0x30(%rbp),%edi
  4029ad:	83 c7 01             	add    $0x1,%edi
  4029b0:	48 63 cf             	movslq %edi,%rcx
  4029b3:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4029ba:	48 01 c8             	add    %rcx,%rax
  4029bd:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  4029c1:	29 fe                	sub    %edi,%esi
  4029c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4029c7:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  4029ca:	83 c7 01             	add    $0x1,%edi
  4029cd:	48 63 cf             	movslq %edi,%rcx
  4029d0:	48 0f af ca          	imul   %rdx,%rcx
  4029d4:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4029db:	48 01 c8             	add    %rcx,%rax
  4029de:	8b 7d d0             	mov    -0x30(%rbp),%edi
  4029e1:	83 ef 01             	sub    $0x1,%edi
  4029e4:	48 63 cf             	movslq %edi,%rcx
  4029e7:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4029ee:	48 01 c8             	add    %rcx,%rax
  4029f1:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  4029f5:	01 fe                	add    %edi,%esi
                        1].rgbtGreen + 2 * image[i + 1][j].rgbtGreen + image[i + 1][j + 1].rgbtGreen;
  4029f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4029fb:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  4029fe:	83 c7 01             	add    $0x1,%edi
  402a01:	48 63 cf             	movslq %edi,%rcx
  402a04:	48 0f af ca          	imul   %rdx,%rcx
  402a08:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402a0f:	48 01 c8             	add    %rcx,%rax
  402a12:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  402a16:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402a1d:	48 01 c8             	add    %rcx,%rax
  402a20:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  402a24:	c1 e7 01             	shl    $0x1,%edi
  402a27:	01 fe                	add    %edi,%esi
  402a29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402a2d:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402a30:	83 c7 01             	add    $0x1,%edi
  402a33:	48 63 cf             	movslq %edi,%rcx
  402a36:	48 0f af ca          	imul   %rdx,%rcx
  402a3a:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402a41:	48 01 c8             	add    %rcx,%rax
  402a44:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402a47:	83 c7 01             	add    $0x1,%edi
  402a4a:	48 63 cf             	movslq %edi,%rcx
  402a4d:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402a54:	48 01 c8             	add    %rcx,%rax
  402a57:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  402a5b:	01 fe                	add    %edi,%esi
            int sumgy = -2 * image[i - 1][j].rgbtGreen - image[i - 1][j - 1].rgbtGreen - image[i - 1][j + 1].rgbtGreen + image[i + 1][j -
  402a5d:	89 75 bc             	mov    %esi,-0x44(%rbp)
            int sumby = -2 * image[i - 1][j].rgbtBlue - image[i - 1][j - 1].rgbtBlue - image[i - 1][j + 1].rgbtBlue + image[i + 1][j -
  402a60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402a64:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  402a67:	83 ee 01             	sub    $0x1,%esi
  402a6a:	48 63 ce             	movslq %esi,%rcx
  402a6d:	48 0f af ca          	imul   %rdx,%rcx
  402a71:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402a78:	48 01 c8             	add    %rcx,%rax
  402a7b:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  402a7f:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402a86:	48 01 c8             	add    %rcx,%rax
  402a89:	0f b6 30             	movzbl (%rax),%esi
  402a8c:	69 f6 fe ff ff ff    	imul   $0xfffffffe,%esi,%esi
  402a92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402a96:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402a99:	83 ef 01             	sub    $0x1,%edi
  402a9c:	48 63 cf             	movslq %edi,%rcx
  402a9f:	48 0f af ca          	imul   %rdx,%rcx
  402aa3:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402aaa:	48 01 c8             	add    %rcx,%rax
  402aad:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402ab0:	83 ef 01             	sub    $0x1,%edi
  402ab3:	48 63 cf             	movslq %edi,%rcx
  402ab6:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402abd:	48 01 c8             	add    %rcx,%rax
  402ac0:	0f b6 38             	movzbl (%rax),%edi
  402ac3:	29 fe                	sub    %edi,%esi
  402ac5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402ac9:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402acc:	83 ef 01             	sub    $0x1,%edi
  402acf:	48 63 cf             	movslq %edi,%rcx
  402ad2:	48 0f af ca          	imul   %rdx,%rcx
  402ad6:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402add:	48 01 c8             	add    %rcx,%rax
  402ae0:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402ae3:	83 c7 01             	add    $0x1,%edi
  402ae6:	48 63 cf             	movslq %edi,%rcx
  402ae9:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402af0:	48 01 c8             	add    %rcx,%rax
  402af3:	0f b6 38             	movzbl (%rax),%edi
  402af6:	29 fe                	sub    %edi,%esi
  402af8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402afc:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402aff:	83 c7 01             	add    $0x1,%edi
  402b02:	48 63 cf             	movslq %edi,%rcx
  402b05:	48 0f af ca          	imul   %rdx,%rcx
  402b09:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402b10:	48 01 c8             	add    %rcx,%rax
  402b13:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402b16:	83 ef 01             	sub    $0x1,%edi
  402b19:	48 63 cf             	movslq %edi,%rcx
  402b1c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402b23:	48 01 c8             	add    %rcx,%rax
  402b26:	0f b6 38             	movzbl (%rax),%edi
  402b29:	01 fe                	add    %edi,%esi
                        1].rgbtBlue + 2 * image[i + 1][j].rgbtBlue + image[i + 1][j + 1].rgbtBlue;
  402b2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402b2f:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402b32:	83 c7 01             	add    $0x1,%edi
  402b35:	48 63 cf             	movslq %edi,%rcx
  402b38:	48 0f af ca          	imul   %rdx,%rcx
  402b3c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402b43:	48 01 c8             	add    %rcx,%rax
  402b46:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  402b4a:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402b51:	48 01 c8             	add    %rcx,%rax
  402b54:	0f b6 38             	movzbl (%rax),%edi
  402b57:	c1 e7 01             	shl    $0x1,%edi
  402b5a:	01 fe                	add    %edi,%esi
  402b5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402b60:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  402b63:	83 c7 01             	add    $0x1,%edi
  402b66:	48 63 cf             	movslq %edi,%rcx
  402b69:	48 0f af ca          	imul   %rdx,%rcx
  402b6d:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402b74:	48 01 c8             	add    %rcx,%rax
  402b77:	8b 7d d0             	mov    -0x30(%rbp),%edi
  402b7a:	83 c7 01             	add    $0x1,%edi
  402b7d:	48 63 cf             	movslq %edi,%rcx
  402b80:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402b87:	48 01 c8             	add    %rcx,%rax
  402b8a:	0f b6 38             	movzbl (%rax),%edi
  402b8d:	01 fe                	add    %edi,%esi
            int sumby = -2 * image[i - 1][j].rgbtBlue - image[i - 1][j - 1].rgbtBlue - image[i - 1][j + 1].rgbtBlue + image[i + 1][j -
  402b8f:	89 75 b8             	mov    %esi,-0x48(%rbp)

            //these are needed so that holder does not overflow.
            if (round(sqrt(pow(sumrx, 2) + pow(sumry, 2))) > 255)
  402b92:	f2 0f 2a 45 cc       	cvtsi2sdl -0x34(%rbp),%xmm0
  402b97:	e8 d4 e4 ff ff       	callq  401070 <pow@plt>
  402b9c:	f2 0f 10 0d bc 45 00 	movsd  0x45bc(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  402ba3:	00 
  402ba4:	f2 0f 2a 55 c0       	cvtsi2sdl -0x40(%rbp),%xmm2
  402ba9:	f2 0f 11 85 c0 fe ff 	movsd  %xmm0,-0x140(%rbp)
  402bb0:	ff 
  402bb1:	0f 28 c2             	movaps %xmm2,%xmm0
  402bb4:	e8 b7 e4 ff ff       	callq  401070 <pow@plt>
  402bb9:	f2 0f 10 0d 97 45 00 	movsd  0x4597(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  402bc0:	00 
  402bc1:	f2 0f 10 95 c0 fe ff 	movsd  -0x140(%rbp),%xmm2
  402bc8:	ff 
  402bc9:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  402bcd:	0f 28 c2             	movaps %xmm2,%xmm0
  402bd0:	f2 0f 11 8d b8 fe ff 	movsd  %xmm1,-0x148(%rbp)
  402bd7:	ff 
  402bd8:	e8 23 e5 ff ff       	callq  401100 <sqrt@plt>
  402bdd:	e8 5e e4 ff ff       	callq  401040 <round@plt>
  402be2:	f2 0f 10 8d b8 fe ff 	movsd  -0x148(%rbp),%xmm1
  402be9:	ff 
  402bea:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  402bee:	0f 86 37 00 00 00    	jbe    402c2b <edges+0x87b>
            {
                holder[i][j].rgbtRed = 255;
  402bf4:	48 63 45 d4          	movslq -0x2c(%rbp),%rax
  402bf8:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  402bff:	48 0f af c1          	imul   %rcx,%rax
  402c03:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  402c0a:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  402c11:	48 01 c2             	add    %rax,%rdx
  402c14:	48 63 45 d0          	movslq -0x30(%rbp),%rax
  402c18:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  402c1f:	48 01 c2             	add    %rax,%rdx
  402c22:	c6 42 02 ff          	movb   $0xff,0x2(%rdx)
            }
  402c26:	e9 85 00 00 00       	jmpq   402cb0 <edges+0x900>
            else
            {
                holder[i][j].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
  402c2b:	f2 0f 2a 45 cc       	cvtsi2sdl -0x34(%rbp),%xmm0
  402c30:	f2 0f 10 0d 28 45 00 	movsd  0x4528(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  402c37:	00 
  402c38:	f2 0f 11 8d b0 fe ff 	movsd  %xmm1,-0x150(%rbp)
  402c3f:	ff 
  402c40:	e8 2b e4 ff ff       	callq  401070 <pow@plt>
  402c45:	f2 0f 2a 4d c0       	cvtsi2sdl -0x40(%rbp),%xmm1
  402c4a:	f2 0f 11 85 a8 fe ff 	movsd  %xmm0,-0x158(%rbp)
  402c51:	ff 
  402c52:	0f 28 c1             	movaps %xmm1,%xmm0
  402c55:	f2 0f 10 8d b0 fe ff 	movsd  -0x150(%rbp),%xmm1
  402c5c:	ff 
  402c5d:	e8 0e e4 ff ff       	callq  401070 <pow@plt>
  402c62:	f2 0f 10 8d a8 fe ff 	movsd  -0x158(%rbp),%xmm1
  402c69:	ff 
  402c6a:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  402c6e:	0f 28 c1             	movaps %xmm1,%xmm0
  402c71:	e8 8a e4 ff ff       	callq  401100 <sqrt@plt>
  402c76:	e8 c5 e3 ff ff       	callq  401040 <round@plt>
  402c7b:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  402c7f:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  402c83:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  402c8a:	48 0f af ca          	imul   %rdx,%rcx
  402c8e:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402c95:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  402c9c:	48 01 ce             	add    %rcx,%rsi
  402c9f:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  402ca3:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402caa:	48 01 ce             	add    %rcx,%rsi
  402cad:	88 46 02             	mov    %al,0x2(%rsi)
  402cb0:	f2 0f 10 0d a8 44 00 	movsd  0x44a8(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  402cb7:	00 
            }

            if (round(sqrt(pow(sumgx, 2) + pow(sumgy, 2))) > 255)
  402cb8:	f2 0f 2a 45 c8       	cvtsi2sdl -0x38(%rbp),%xmm0
  402cbd:	e8 ae e3 ff ff       	callq  401070 <pow@plt>
  402cc2:	f2 0f 10 0d 96 44 00 	movsd  0x4496(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  402cc9:	00 
  402cca:	f2 0f 2a 55 bc       	cvtsi2sdl -0x44(%rbp),%xmm2
  402ccf:	f2 0f 11 85 a0 fe ff 	movsd  %xmm0,-0x160(%rbp)
  402cd6:	ff 
  402cd7:	0f 28 c2             	movaps %xmm2,%xmm0
  402cda:	e8 91 e3 ff ff       	callq  401070 <pow@plt>
  402cdf:	f2 0f 10 0d 71 44 00 	movsd  0x4471(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  402ce6:	00 
  402ce7:	f2 0f 10 95 a0 fe ff 	movsd  -0x160(%rbp),%xmm2
  402cee:	ff 
  402cef:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  402cf3:	0f 28 c2             	movaps %xmm2,%xmm0
  402cf6:	f2 0f 11 8d 98 fe ff 	movsd  %xmm1,-0x168(%rbp)
  402cfd:	ff 
  402cfe:	e8 fd e3 ff ff       	callq  401100 <sqrt@plt>
  402d03:	e8 38 e3 ff ff       	callq  401040 <round@plt>
  402d08:	f2 0f 10 8d 98 fe ff 	movsd  -0x168(%rbp),%xmm1
  402d0f:	ff 
  402d10:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  402d14:	0f 86 37 00 00 00    	jbe    402d51 <edges+0x9a1>
            {
                holder[i][j].rgbtGreen = 255;
  402d1a:	48 63 45 d4          	movslq -0x2c(%rbp),%rax
  402d1e:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  402d25:	48 0f af c1          	imul   %rcx,%rax
  402d29:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  402d30:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  402d37:	48 01 c2             	add    %rax,%rdx
  402d3a:	48 63 45 d0          	movslq -0x30(%rbp),%rax
  402d3e:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  402d45:	48 01 c2             	add    %rax,%rdx
  402d48:	c6 42 01 ff          	movb   $0xff,0x1(%rdx)
            }
  402d4c:	e9 85 00 00 00       	jmpq   402dd6 <edges+0xa26>
            else
            {
                holder[i][j].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
  402d51:	f2 0f 2a 45 c8       	cvtsi2sdl -0x38(%rbp),%xmm0
  402d56:	f2 0f 10 0d 02 44 00 	movsd  0x4402(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  402d5d:	00 
  402d5e:	f2 0f 11 8d 90 fe ff 	movsd  %xmm1,-0x170(%rbp)
  402d65:	ff 
  402d66:	e8 05 e3 ff ff       	callq  401070 <pow@plt>
  402d6b:	f2 0f 2a 4d bc       	cvtsi2sdl -0x44(%rbp),%xmm1
  402d70:	f2 0f 11 85 88 fe ff 	movsd  %xmm0,-0x178(%rbp)
  402d77:	ff 
  402d78:	0f 28 c1             	movaps %xmm1,%xmm0
  402d7b:	f2 0f 10 8d 90 fe ff 	movsd  -0x170(%rbp),%xmm1
  402d82:	ff 
  402d83:	e8 e8 e2 ff ff       	callq  401070 <pow@plt>
  402d88:	f2 0f 10 8d 88 fe ff 	movsd  -0x178(%rbp),%xmm1
  402d8f:	ff 
  402d90:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  402d94:	0f 28 c1             	movaps %xmm1,%xmm0
  402d97:	e8 64 e3 ff ff       	callq  401100 <sqrt@plt>
  402d9c:	e8 9f e2 ff ff       	callq  401040 <round@plt>
  402da1:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  402da5:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  402da9:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  402db0:	48 0f af ca          	imul   %rdx,%rcx
  402db4:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402dbb:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  402dc2:	48 01 ce             	add    %rcx,%rsi
  402dc5:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  402dc9:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402dd0:	48 01 ce             	add    %rcx,%rsi
  402dd3:	88 46 01             	mov    %al,0x1(%rsi)
  402dd6:	f2 0f 10 0d 82 43 00 	movsd  0x4382(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  402ddd:	00 
            }

            if (round(sqrt(pow(sumbx, 2) + pow(sumby, 2))) > 255)
  402dde:	f2 0f 2a 45 c4       	cvtsi2sdl -0x3c(%rbp),%xmm0
  402de3:	e8 88 e2 ff ff       	callq  401070 <pow@plt>
  402de8:	f2 0f 10 0d 70 43 00 	movsd  0x4370(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  402def:	00 
  402df0:	f2 0f 2a 55 b8       	cvtsi2sdl -0x48(%rbp),%xmm2
  402df5:	f2 0f 11 85 80 fe ff 	movsd  %xmm0,-0x180(%rbp)
  402dfc:	ff 
  402dfd:	0f 28 c2             	movaps %xmm2,%xmm0
  402e00:	e8 6b e2 ff ff       	callq  401070 <pow@plt>
  402e05:	f2 0f 10 0d 4b 43 00 	movsd  0x434b(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  402e0c:	00 
  402e0d:	f2 0f 10 95 80 fe ff 	movsd  -0x180(%rbp),%xmm2
  402e14:	ff 
  402e15:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  402e19:	0f 28 c2             	movaps %xmm2,%xmm0
  402e1c:	f2 0f 11 8d 78 fe ff 	movsd  %xmm1,-0x188(%rbp)
  402e23:	ff 
  402e24:	e8 d7 e2 ff ff       	callq  401100 <sqrt@plt>
  402e29:	e8 12 e2 ff ff       	callq  401040 <round@plt>
  402e2e:	f2 0f 10 8d 78 fe ff 	movsd  -0x188(%rbp),%xmm1
  402e35:	ff 
  402e36:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  402e3a:	0f 86 36 00 00 00    	jbe    402e76 <edges+0xac6>
            {
                holder[i][j].rgbtBlue = 255;
  402e40:	48 63 45 d4          	movslq -0x2c(%rbp),%rax
  402e44:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  402e4b:	48 0f af c1          	imul   %rcx,%rax
  402e4f:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  402e56:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  402e5d:	48 01 c2             	add    %rax,%rdx
  402e60:	48 63 45 d0          	movslq -0x30(%rbp),%rax
  402e64:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  402e6b:	48 01 c2             	add    %rax,%rdx
  402e6e:	c6 02 ff             	movb   $0xff,(%rdx)
            }
  402e71:	e9 84 00 00 00       	jmpq   402efa <edges+0xb4a>
            else
            {
                holder[i][j].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));
  402e76:	f2 0f 2a 45 c4       	cvtsi2sdl -0x3c(%rbp),%xmm0
  402e7b:	f2 0f 10 0d dd 42 00 	movsd  0x42dd(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  402e82:	00 
  402e83:	f2 0f 11 8d 70 fe ff 	movsd  %xmm1,-0x190(%rbp)
  402e8a:	ff 
  402e8b:	e8 e0 e1 ff ff       	callq  401070 <pow@plt>
  402e90:	f2 0f 2a 4d b8       	cvtsi2sdl -0x48(%rbp),%xmm1
  402e95:	f2 0f 11 85 68 fe ff 	movsd  %xmm0,-0x198(%rbp)
  402e9c:	ff 
  402e9d:	0f 28 c1             	movaps %xmm1,%xmm0
  402ea0:	f2 0f 10 8d 70 fe ff 	movsd  -0x190(%rbp),%xmm1
  402ea7:	ff 
  402ea8:	e8 c3 e1 ff ff       	callq  401070 <pow@plt>
  402ead:	f2 0f 10 8d 68 fe ff 	movsd  -0x198(%rbp),%xmm1
  402eb4:	ff 
  402eb5:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  402eb9:	0f 28 c1             	movaps %xmm1,%xmm0
  402ebc:	e8 3f e2 ff ff       	callq  401100 <sqrt@plt>
  402ec1:	e8 7a e1 ff ff       	callq  401040 <round@plt>
  402ec6:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  402eca:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  402ece:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  402ed5:	48 0f af ca          	imul   %rdx,%rcx
  402ed9:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402ee0:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  402ee7:	48 01 ce             	add    %rcx,%rsi
  402eea:	48 63 4d d0          	movslq -0x30(%rbp),%rcx
  402eee:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402ef5:	48 01 ce             	add    %rcx,%rsi
  402ef8:	88 06                	mov    %al,(%rsi)
            }

            /*holder[i][j].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
            holder[i][j].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
            holder[i][j].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));*/
        }
  402efa:	e9 00 00 00 00       	jmpq   402eff <edges+0xb4f>
        for (int j = 1; j < width - 1; j++)
  402eff:	8b 45 d0             	mov    -0x30(%rbp),%eax
  402f02:	83 c0 01             	add    $0x1,%eax
  402f05:	89 45 d0             	mov    %eax,-0x30(%rbp)
  402f08:	e9 21 f5 ff ff       	jmpq   40242e <edges+0x7e>
    }
  402f0d:	e9 00 00 00 00       	jmpq   402f12 <edges+0xb62>
    for (int i = 1; i < height - 1; i++)
  402f12:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  402f15:	83 c0 01             	add    $0x1,%eax
  402f18:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  402f1b:	e9 f6 f4 ff ff       	jmpq   402416 <edges+0x66>

    //top edge
    //minus corners
    //with no ifs, just a lot of lines of code for individual pixels
    for (int i = 1; i < width - 1; i++)
  402f20:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%rbp)
  402f27:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  402f2a:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402f2d:	83 e9 01             	sub    $0x1,%ecx
  402f30:	39 c8                	cmp    %ecx,%eax
  402f32:	0f 8d 93 07 00 00    	jge    4036cb <edges+0x131b>
  402f38:	f2 0f 10 0d 20 42 00 	movsd  0x4220(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  402f3f:	00 
    {
        int sumrx = -2 * image[0][i - 1].rgbtRed - image[1][i - 1].rgbtRed + 2 * image[0][i + 1].rgbtRed + image[1][i + 1].rgbtRed;
  402f40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402f44:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  402f4b:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  402f52:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402f59:	48 01 d0             	add    %rdx,%rax
  402f5c:	8b 75 b4             	mov    -0x4c(%rbp),%esi
  402f5f:	83 ee 01             	sub    $0x1,%esi
  402f62:	48 63 d6             	movslq %esi,%rdx
  402f65:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402f6c:	48 01 d0             	add    %rdx,%rax
  402f6f:	0f b6 70 02          	movzbl 0x2(%rax),%esi
  402f73:	69 f6 fe ff ff ff    	imul   $0xfffffffe,%esi,%esi
  402f79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402f7d:	48 c1 e1 00          	shl    $0x0,%rcx
  402f81:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402f88:	48 01 c8             	add    %rcx,%rax
  402f8b:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  402f8e:	83 ef 01             	sub    $0x1,%edi
  402f91:	48 63 cf             	movslq %edi,%rcx
  402f94:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402f9b:	48 01 c8             	add    %rcx,%rax
  402f9e:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  402fa2:	29 fe                	sub    %edi,%esi
  402fa4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402fa8:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  402faf:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  402fb6:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402fbd:	48 01 d0             	add    %rdx,%rax
  402fc0:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  402fc3:	83 c7 01             	add    $0x1,%edi
  402fc6:	48 63 d7             	movslq %edi,%rdx
  402fc9:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  402fd0:	48 01 d0             	add    %rdx,%rax
  402fd3:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  402fd7:	c1 e7 01             	shl    $0x1,%edi
  402fda:	01 fe                	add    %edi,%esi
  402fdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  402fe0:	48 c1 e1 00          	shl    $0x0,%rcx
  402fe4:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402feb:	48 01 c8             	add    %rcx,%rax
  402fee:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  402ff1:	83 c7 01             	add    $0x1,%edi
  402ff4:	48 63 cf             	movslq %edi,%rcx
  402ff7:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  402ffe:	48 01 c8             	add    %rcx,%rax
  403001:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  403005:	01 fe                	add    %edi,%esi
  403007:	89 75 b0             	mov    %esi,-0x50(%rbp)
        int sumgx = -2 * image[0][i - 1].rgbtGreen - image[1][i - 1].rgbtGreen + 2 * image[0][i + 1].rgbtGreen + image[1][i + 1].rgbtGreen;
  40300a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40300e:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  403015:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  40301c:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403023:	48 01 d0             	add    %rdx,%rax
  403026:	8b 75 b4             	mov    -0x4c(%rbp),%esi
  403029:	83 ee 01             	sub    $0x1,%esi
  40302c:	48 63 d6             	movslq %esi,%rdx
  40302f:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403036:	48 01 d0             	add    %rdx,%rax
  403039:	0f b6 70 01          	movzbl 0x1(%rax),%esi
  40303d:	69 f6 fe ff ff ff    	imul   $0xfffffffe,%esi,%esi
  403043:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403047:	48 c1 e1 00          	shl    $0x0,%rcx
  40304b:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403052:	48 01 c8             	add    %rcx,%rax
  403055:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  403058:	83 ef 01             	sub    $0x1,%edi
  40305b:	48 63 cf             	movslq %edi,%rcx
  40305e:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403065:	48 01 c8             	add    %rcx,%rax
  403068:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  40306c:	29 fe                	sub    %edi,%esi
  40306e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403072:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  403079:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  403080:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403087:	48 01 d0             	add    %rdx,%rax
  40308a:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  40308d:	83 c7 01             	add    $0x1,%edi
  403090:	48 63 d7             	movslq %edi,%rdx
  403093:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40309a:	48 01 d0             	add    %rdx,%rax
  40309d:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  4030a1:	c1 e7 01             	shl    $0x1,%edi
  4030a4:	01 fe                	add    %edi,%esi
  4030a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4030aa:	48 c1 e1 00          	shl    $0x0,%rcx
  4030ae:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4030b5:	48 01 c8             	add    %rcx,%rax
  4030b8:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  4030bb:	83 c7 01             	add    $0x1,%edi
  4030be:	48 63 cf             	movslq %edi,%rcx
  4030c1:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4030c8:	48 01 c8             	add    %rcx,%rax
  4030cb:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  4030cf:	01 fe                	add    %edi,%esi
  4030d1:	89 75 ac             	mov    %esi,-0x54(%rbp)
        int sumbx = -2 * image[0][i - 1].rgbtBlue - image[1][i - 1].rgbtBlue + 2 * image[0][i + 1].rgbtBlue + image[1][i + 1].rgbtBlue;
  4030d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4030d8:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  4030df:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  4030e6:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4030ed:	48 01 d0             	add    %rdx,%rax
  4030f0:	8b 75 b4             	mov    -0x4c(%rbp),%esi
  4030f3:	83 ee 01             	sub    $0x1,%esi
  4030f6:	48 63 d6             	movslq %esi,%rdx
  4030f9:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403100:	48 01 d0             	add    %rdx,%rax
  403103:	0f b6 30             	movzbl (%rax),%esi
  403106:	69 f6 fe ff ff ff    	imul   $0xfffffffe,%esi,%esi
  40310c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403110:	48 c1 e1 00          	shl    $0x0,%rcx
  403114:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40311b:	48 01 c8             	add    %rcx,%rax
  40311e:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  403121:	83 ef 01             	sub    $0x1,%edi
  403124:	48 63 cf             	movslq %edi,%rcx
  403127:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40312e:	48 01 c8             	add    %rcx,%rax
  403131:	0f b6 38             	movzbl (%rax),%edi
  403134:	29 fe                	sub    %edi,%esi
  403136:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40313a:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  403141:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  403148:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40314f:	48 01 d0             	add    %rdx,%rax
  403152:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  403155:	83 c7 01             	add    $0x1,%edi
  403158:	48 63 d7             	movslq %edi,%rdx
  40315b:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403162:	48 01 d0             	add    %rdx,%rax
  403165:	0f b6 38             	movzbl (%rax),%edi
  403168:	c1 e7 01             	shl    $0x1,%edi
  40316b:	01 fe                	add    %edi,%esi
  40316d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403171:	48 c1 e1 00          	shl    $0x0,%rcx
  403175:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40317c:	48 01 c8             	add    %rcx,%rax
  40317f:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  403182:	83 c7 01             	add    $0x1,%edi
  403185:	48 63 cf             	movslq %edi,%rcx
  403188:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40318f:	48 01 c8             	add    %rcx,%rax
  403192:	0f b6 38             	movzbl (%rax),%edi
  403195:	01 fe                	add    %edi,%esi
  403197:	89 75 a8             	mov    %esi,-0x58(%rbp)

        int sumry = image[1][i - 1].rgbtRed + 2 * image[1][i].rgbtRed + image[1][i + 1].rgbtRed;
  40319a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40319e:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  4031a5:	48 c1 e1 00          	shl    $0x0,%rcx
  4031a9:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4031b0:	48 01 c8             	add    %rcx,%rax
  4031b3:	8b 75 b4             	mov    -0x4c(%rbp),%esi
  4031b6:	83 ee 01             	sub    $0x1,%esi
  4031b9:	48 63 ce             	movslq %esi,%rcx
  4031bc:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4031c3:	48 01 c8             	add    %rcx,%rax
  4031c6:	0f b6 70 02          	movzbl 0x2(%rax),%esi
  4031ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4031ce:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  4031d5:	48 c1 e1 00          	shl    $0x0,%rcx
  4031d9:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4031e0:	48 01 c8             	add    %rcx,%rax
  4031e3:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  4031e7:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4031ee:	48 01 c8             	add    %rcx,%rax
  4031f1:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  4031f5:	c1 e7 01             	shl    $0x1,%edi
  4031f8:	01 fe                	add    %edi,%esi
  4031fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4031fe:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  403205:	48 c1 e1 00          	shl    $0x0,%rcx
  403209:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403210:	48 01 c8             	add    %rcx,%rax
  403213:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  403216:	83 c7 01             	add    $0x1,%edi
  403219:	48 63 cf             	movslq %edi,%rcx
  40321c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403223:	48 01 c8             	add    %rcx,%rax
  403226:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  40322a:	01 fe                	add    %edi,%esi
  40322c:	89 75 a4             	mov    %esi,-0x5c(%rbp)
        int sumgy = image[1][i - 1].rgbtGreen + 2 * image[1][i].rgbtGreen + image[1][i + 1].rgbtGreen;
  40322f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403233:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  40323a:	48 c1 e1 00          	shl    $0x0,%rcx
  40323e:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403245:	48 01 c8             	add    %rcx,%rax
  403248:	8b 75 b4             	mov    -0x4c(%rbp),%esi
  40324b:	83 ee 01             	sub    $0x1,%esi
  40324e:	48 63 ce             	movslq %esi,%rcx
  403251:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403258:	48 01 c8             	add    %rcx,%rax
  40325b:	0f b6 70 01          	movzbl 0x1(%rax),%esi
  40325f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403263:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  40326a:	48 c1 e1 00          	shl    $0x0,%rcx
  40326e:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403275:	48 01 c8             	add    %rcx,%rax
  403278:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  40327c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403283:	48 01 c8             	add    %rcx,%rax
  403286:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  40328a:	c1 e7 01             	shl    $0x1,%edi
  40328d:	01 fe                	add    %edi,%esi
  40328f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403293:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  40329a:	48 c1 e1 00          	shl    $0x0,%rcx
  40329e:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4032a5:	48 01 c8             	add    %rcx,%rax
  4032a8:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  4032ab:	83 c7 01             	add    $0x1,%edi
  4032ae:	48 63 cf             	movslq %edi,%rcx
  4032b1:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4032b8:	48 01 c8             	add    %rcx,%rax
  4032bb:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  4032bf:	01 fe                	add    %edi,%esi
  4032c1:	89 75 a0             	mov    %esi,-0x60(%rbp)
        int sumby = image[1][i - 1].rgbtBlue + 2 * image[1][i].rgbtBlue + image[1][i + 1].rgbtBlue;
  4032c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4032c8:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  4032cf:	48 c1 e1 00          	shl    $0x0,%rcx
  4032d3:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4032da:	48 01 c8             	add    %rcx,%rax
  4032dd:	8b 75 b4             	mov    -0x4c(%rbp),%esi
  4032e0:	83 ee 01             	sub    $0x1,%esi
  4032e3:	48 63 ce             	movslq %esi,%rcx
  4032e6:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4032ed:	48 01 c8             	add    %rcx,%rax
  4032f0:	0f b6 30             	movzbl (%rax),%esi
  4032f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4032f7:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  4032fe:	48 c1 e1 00          	shl    $0x0,%rcx
  403302:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403309:	48 01 c8             	add    %rcx,%rax
  40330c:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  403310:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403317:	48 01 c8             	add    %rcx,%rax
  40331a:	0f b6 38             	movzbl (%rax),%edi
  40331d:	c1 e7 01             	shl    $0x1,%edi
  403320:	01 fe                	add    %edi,%esi
  403322:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403326:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  40332d:	48 c1 e1 00          	shl    $0x0,%rcx
  403331:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403338:	48 01 c8             	add    %rcx,%rax
  40333b:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  40333e:	83 c7 01             	add    $0x1,%edi
  403341:	48 63 cf             	movslq %edi,%rcx
  403344:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40334b:	48 01 c8             	add    %rcx,%rax
  40334e:	0f b6 38             	movzbl (%rax),%edi
  403351:	01 fe                	add    %edi,%esi
  403353:	89 75 9c             	mov    %esi,-0x64(%rbp)

        if (round(sqrt(pow(sumrx, 2) + pow(sumry, 2))) > 255)
  403356:	f2 0f 2a 45 b0       	cvtsi2sdl -0x50(%rbp),%xmm0
  40335b:	e8 10 dd ff ff       	callq  401070 <pow@plt>
  403360:	f2 0f 10 0d f8 3d 00 	movsd  0x3df8(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403367:	00 
  403368:	f2 0f 2a 55 a4       	cvtsi2sdl -0x5c(%rbp),%xmm2
  40336d:	f2 0f 11 85 60 fe ff 	movsd  %xmm0,-0x1a0(%rbp)
  403374:	ff 
  403375:	0f 28 c2             	movaps %xmm2,%xmm0
  403378:	e8 f3 dc ff ff       	callq  401070 <pow@plt>
  40337d:	f2 0f 10 0d d3 3d 00 	movsd  0x3dd3(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  403384:	00 
  403385:	f2 0f 10 95 60 fe ff 	movsd  -0x1a0(%rbp),%xmm2
  40338c:	ff 
  40338d:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  403391:	0f 28 c2             	movaps %xmm2,%xmm0
  403394:	f2 0f 11 8d 58 fe ff 	movsd  %xmm1,-0x1a8(%rbp)
  40339b:	ff 
  40339c:	e8 5f dd ff ff       	callq  401100 <sqrt@plt>
  4033a1:	e8 9a dc ff ff       	callq  401040 <round@plt>
  4033a6:	f2 0f 10 8d 58 fe ff 	movsd  -0x1a8(%rbp),%xmm1
  4033ad:	ff 
  4033ae:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  4033b2:	0f 86 36 00 00 00    	jbe    4033ee <edges+0x103e>
  4033b8:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
        {
            holder[0][i].rgbtRed = 255;
  4033bf:	48 69 c8 00 00 00 00 	imul   $0x0,%rax,%rcx
  4033c6:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4033cd:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  4033d4:	48 01 ca             	add    %rcx,%rdx
  4033d7:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  4033db:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4033e2:	48 01 ca             	add    %rcx,%rdx
  4033e5:	c6 42 02 ff          	movb   $0xff,0x2(%rdx)
        }
  4033e9:	e9 84 00 00 00       	jmpq   403472 <edges+0x10c2>
        else
        {
            holder[0][i].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
  4033ee:	f2 0f 2a 45 b0       	cvtsi2sdl -0x50(%rbp),%xmm0
  4033f3:	f2 0f 10 0d 65 3d 00 	movsd  0x3d65(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4033fa:	00 
  4033fb:	f2 0f 11 8d 50 fe ff 	movsd  %xmm1,-0x1b0(%rbp)
  403402:	ff 
  403403:	e8 68 dc ff ff       	callq  401070 <pow@plt>
  403408:	f2 0f 2a 4d a4       	cvtsi2sdl -0x5c(%rbp),%xmm1
  40340d:	f2 0f 11 85 48 fe ff 	movsd  %xmm0,-0x1b8(%rbp)
  403414:	ff 
  403415:	0f 28 c1             	movaps %xmm1,%xmm0
  403418:	f2 0f 10 8d 50 fe ff 	movsd  -0x1b0(%rbp),%xmm1
  40341f:	ff 
  403420:	e8 4b dc ff ff       	callq  401070 <pow@plt>
  403425:	f2 0f 10 8d 48 fe ff 	movsd  -0x1b8(%rbp),%xmm1
  40342c:	ff 
  40342d:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  403431:	0f 28 c1             	movaps %xmm1,%xmm0
  403434:	e8 c7 dc ff ff       	callq  401100 <sqrt@plt>
  403439:	e8 02 dc ff ff       	callq  401040 <round@plt>
  40343e:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  403442:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  403449:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  403450:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403457:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  40345e:	48 01 d6             	add    %rdx,%rsi
  403461:	48 63 55 b4          	movslq -0x4c(%rbp),%rdx
  403465:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40346c:	48 01 d6             	add    %rdx,%rsi
  40346f:	88 46 02             	mov    %al,0x2(%rsi)
  403472:	f2 0f 10 0d e6 3c 00 	movsd  0x3ce6(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403479:	00 
        }

        if (round(sqrt(pow(sumgx, 2) + pow(sumgy, 2))) > 255)
  40347a:	f2 0f 2a 45 ac       	cvtsi2sdl -0x54(%rbp),%xmm0
  40347f:	e8 ec db ff ff       	callq  401070 <pow@plt>
  403484:	f2 0f 10 0d d4 3c 00 	movsd  0x3cd4(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40348b:	00 
  40348c:	f2 0f 2a 55 a0       	cvtsi2sdl -0x60(%rbp),%xmm2
  403491:	f2 0f 11 85 40 fe ff 	movsd  %xmm0,-0x1c0(%rbp)
  403498:	ff 
  403499:	0f 28 c2             	movaps %xmm2,%xmm0
  40349c:	e8 cf db ff ff       	callq  401070 <pow@plt>
  4034a1:	f2 0f 10 0d af 3c 00 	movsd  0x3caf(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  4034a8:	00 
  4034a9:	f2 0f 10 95 40 fe ff 	movsd  -0x1c0(%rbp),%xmm2
  4034b0:	ff 
  4034b1:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  4034b5:	0f 28 c2             	movaps %xmm2,%xmm0
  4034b8:	f2 0f 11 8d 38 fe ff 	movsd  %xmm1,-0x1c8(%rbp)
  4034bf:	ff 
  4034c0:	e8 3b dc ff ff       	callq  401100 <sqrt@plt>
  4034c5:	e8 76 db ff ff       	callq  401040 <round@plt>
  4034ca:	f2 0f 10 8d 38 fe ff 	movsd  -0x1c8(%rbp),%xmm1
  4034d1:	ff 
  4034d2:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  4034d6:	0f 86 36 00 00 00    	jbe    403512 <edges+0x1162>
  4034dc:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
        {
            holder[0][i].rgbtGreen = 255;
  4034e3:	48 69 c8 00 00 00 00 	imul   $0x0,%rax,%rcx
  4034ea:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4034f1:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  4034f8:	48 01 ca             	add    %rcx,%rdx
  4034fb:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  4034ff:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403506:	48 01 ca             	add    %rcx,%rdx
  403509:	c6 42 01 ff          	movb   $0xff,0x1(%rdx)
        }
  40350d:	e9 84 00 00 00       	jmpq   403596 <edges+0x11e6>
        else
        {
            holder[0][i].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
  403512:	f2 0f 2a 45 ac       	cvtsi2sdl -0x54(%rbp),%xmm0
  403517:	f2 0f 10 0d 41 3c 00 	movsd  0x3c41(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40351e:	00 
  40351f:	f2 0f 11 8d 30 fe ff 	movsd  %xmm1,-0x1d0(%rbp)
  403526:	ff 
  403527:	e8 44 db ff ff       	callq  401070 <pow@plt>
  40352c:	f2 0f 2a 4d a0       	cvtsi2sdl -0x60(%rbp),%xmm1
  403531:	f2 0f 11 85 28 fe ff 	movsd  %xmm0,-0x1d8(%rbp)
  403538:	ff 
  403539:	0f 28 c1             	movaps %xmm1,%xmm0
  40353c:	f2 0f 10 8d 30 fe ff 	movsd  -0x1d0(%rbp),%xmm1
  403543:	ff 
  403544:	e8 27 db ff ff       	callq  401070 <pow@plt>
  403549:	f2 0f 10 8d 28 fe ff 	movsd  -0x1d8(%rbp),%xmm1
  403550:	ff 
  403551:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  403555:	0f 28 c1             	movaps %xmm1,%xmm0
  403558:	e8 a3 db ff ff       	callq  401100 <sqrt@plt>
  40355d:	e8 de da ff ff       	callq  401040 <round@plt>
  403562:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  403566:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  40356d:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  403574:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40357b:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  403582:	48 01 d6             	add    %rdx,%rsi
  403585:	48 63 55 b4          	movslq -0x4c(%rbp),%rdx
  403589:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403590:	48 01 d6             	add    %rdx,%rsi
  403593:	88 46 01             	mov    %al,0x1(%rsi)
  403596:	f2 0f 10 0d c2 3b 00 	movsd  0x3bc2(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40359d:	00 
        }

        if (round(sqrt(pow(sumbx, 2) + pow(sumby, 2))) > 255)
  40359e:	f2 0f 2a 45 a8       	cvtsi2sdl -0x58(%rbp),%xmm0
  4035a3:	e8 c8 da ff ff       	callq  401070 <pow@plt>
  4035a8:	f2 0f 10 0d b0 3b 00 	movsd  0x3bb0(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4035af:	00 
  4035b0:	f2 0f 2a 55 9c       	cvtsi2sdl -0x64(%rbp),%xmm2
  4035b5:	f2 0f 11 85 20 fe ff 	movsd  %xmm0,-0x1e0(%rbp)
  4035bc:	ff 
  4035bd:	0f 28 c2             	movaps %xmm2,%xmm0
  4035c0:	e8 ab da ff ff       	callq  401070 <pow@plt>
  4035c5:	f2 0f 10 0d 8b 3b 00 	movsd  0x3b8b(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  4035cc:	00 
  4035cd:	f2 0f 10 95 20 fe ff 	movsd  -0x1e0(%rbp),%xmm2
  4035d4:	ff 
  4035d5:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  4035d9:	0f 28 c2             	movaps %xmm2,%xmm0
  4035dc:	f2 0f 11 8d 18 fe ff 	movsd  %xmm1,-0x1e8(%rbp)
  4035e3:	ff 
  4035e4:	e8 17 db ff ff       	callq  401100 <sqrt@plt>
  4035e9:	e8 52 da ff ff       	callq  401040 <round@plt>
  4035ee:	f2 0f 10 8d 18 fe ff 	movsd  -0x1e8(%rbp),%xmm1
  4035f5:	ff 
  4035f6:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  4035fa:	0f 86 35 00 00 00    	jbe    403635 <edges+0x1285>
  403600:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
        {
            holder[0][i].rgbtBlue = 255;
  403607:	48 69 c8 00 00 00 00 	imul   $0x0,%rax,%rcx
  40360e:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403615:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  40361c:	48 01 ca             	add    %rcx,%rdx
  40361f:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  403623:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40362a:	48 01 ca             	add    %rcx,%rdx
  40362d:	c6 02 ff             	movb   $0xff,(%rdx)
        }
  403630:	e9 83 00 00 00       	jmpq   4036b8 <edges+0x1308>
        else
        {
            holder[0][i].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));
  403635:	f2 0f 2a 45 a8       	cvtsi2sdl -0x58(%rbp),%xmm0
  40363a:	f2 0f 10 0d 1e 3b 00 	movsd  0x3b1e(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403641:	00 
  403642:	f2 0f 11 8d 10 fe ff 	movsd  %xmm1,-0x1f0(%rbp)
  403649:	ff 
  40364a:	e8 21 da ff ff       	callq  401070 <pow@plt>
  40364f:	f2 0f 2a 4d 9c       	cvtsi2sdl -0x64(%rbp),%xmm1
  403654:	f2 0f 11 85 08 fe ff 	movsd  %xmm0,-0x1f8(%rbp)
  40365b:	ff 
  40365c:	0f 28 c1             	movaps %xmm1,%xmm0
  40365f:	f2 0f 10 8d 10 fe ff 	movsd  -0x1f0(%rbp),%xmm1
  403666:	ff 
  403667:	e8 04 da ff ff       	callq  401070 <pow@plt>
  40366c:	f2 0f 10 8d 08 fe ff 	movsd  -0x1f8(%rbp),%xmm1
  403673:	ff 
  403674:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  403678:	0f 28 c1             	movaps %xmm1,%xmm0
  40367b:	e8 80 da ff ff       	callq  401100 <sqrt@plt>
  403680:	e8 bb d9 ff ff       	callq  401040 <round@plt>
  403685:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  403689:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  403690:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  403697:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40369e:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  4036a5:	48 01 d6             	add    %rdx,%rsi
  4036a8:	48 63 55 b4          	movslq -0x4c(%rbp),%rdx
  4036ac:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4036b3:	48 01 d6             	add    %rdx,%rsi
  4036b6:	88 06                	mov    %al,(%rsi)
        }

        /*(holder[0][i].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
        holder[0][i].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
        holder[0][i].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));*/
    }
  4036b8:	e9 00 00 00 00       	jmpq   4036bd <edges+0x130d>
    for (int i = 1; i < width - 1; i++)
  4036bd:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  4036c0:	83 c0 01             	add    $0x1,%eax
  4036c3:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  4036c6:	e9 5c f8 ff ff       	jmpq   402f27 <edges+0xb77>

    //bottom edge
    //minus corners
    for (int i = 1; i < width - 1; i++)
  4036cb:	c7 45 98 01 00 00 00 	movl   $0x1,-0x68(%rbp)
  4036d2:	8b 45 98             	mov    -0x68(%rbp),%eax
  4036d5:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4036d8:	83 e9 01             	sub    $0x1,%ecx
  4036db:	39 c8                	cmp    %ecx,%eax
  4036dd:	0f 8d 00 08 00 00    	jge    403ee3 <edges+0x1b33>
  4036e3:	f2 0f 10 0d 75 3a 00 	movsd  0x3a75(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4036ea:	00 
    {
        int sumrx = -2 * image[height - 1][i - 1].rgbtRed - image[height - 2][i - 1].rgbtRed + 2 * image[height - 1][i + 1].rgbtRed +
  4036eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4036ef:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4036f2:	83 e9 01             	sub    $0x1,%ecx
  4036f5:	48 63 d1             	movslq %ecx,%rdx
  4036f8:	48 8b b5 d8 fe ff ff 	mov    -0x128(%rbp),%rsi
  4036ff:	48 0f af d6          	imul   %rsi,%rdx
  403703:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40370a:	48 01 d0             	add    %rdx,%rax
  40370d:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  403710:	83 e9 01             	sub    $0x1,%ecx
  403713:	48 63 d1             	movslq %ecx,%rdx
  403716:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40371d:	48 01 d0             	add    %rdx,%rax
  403720:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
  403724:	69 c9 fe ff ff ff    	imul   $0xfffffffe,%ecx,%ecx
  40372a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40372e:	8b 7d fc             	mov    -0x4(%rbp),%edi
  403731:	83 ef 02             	sub    $0x2,%edi
  403734:	48 63 d7             	movslq %edi,%rdx
  403737:	48 0f af d6          	imul   %rsi,%rdx
  40373b:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403742:	48 01 d0             	add    %rdx,%rax
  403745:	8b 7d 98             	mov    -0x68(%rbp),%edi
  403748:	83 ef 01             	sub    $0x1,%edi
  40374b:	48 63 d7             	movslq %edi,%rdx
  40374e:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403755:	48 01 d0             	add    %rdx,%rax
  403758:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  40375c:	29 f9                	sub    %edi,%ecx
  40375e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403762:	8b 7d fc             	mov    -0x4(%rbp),%edi
  403765:	83 ef 01             	sub    $0x1,%edi
  403768:	48 63 d7             	movslq %edi,%rdx
  40376b:	48 0f af d6          	imul   %rsi,%rdx
  40376f:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403776:	48 01 d0             	add    %rdx,%rax
  403779:	8b 7d 98             	mov    -0x68(%rbp),%edi
  40377c:	83 c7 01             	add    $0x1,%edi
  40377f:	48 63 d7             	movslq %edi,%rdx
  403782:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403789:	48 01 d0             	add    %rdx,%rax
  40378c:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  403790:	c1 e7 01             	shl    $0x1,%edi
  403793:	01 f9                	add    %edi,%ecx
                    image[height - 2][i + 1].rgbtRed;
  403795:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403799:	8b 7d fc             	mov    -0x4(%rbp),%edi
  40379c:	83 ef 02             	sub    $0x2,%edi
  40379f:	48 63 d7             	movslq %edi,%rdx
  4037a2:	48 0f af d6          	imul   %rsi,%rdx
  4037a6:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4037ad:	48 01 d0             	add    %rdx,%rax
  4037b0:	8b 7d 98             	mov    -0x68(%rbp),%edi
  4037b3:	83 c7 01             	add    $0x1,%edi
  4037b6:	48 63 d7             	movslq %edi,%rdx
  4037b9:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4037c0:	48 01 d0             	add    %rdx,%rax
  4037c3:	0f b6 78 02          	movzbl 0x2(%rax),%edi
        int sumrx = -2 * image[height - 1][i - 1].rgbtRed - image[height - 2][i - 1].rgbtRed + 2 * image[height - 1][i + 1].rgbtRed +
  4037c7:	01 f9                	add    %edi,%ecx
  4037c9:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
        int sumgx = -2 * image[height - 1][i - 1].rgbtGreen - image[height - 2][i - 1].rgbtGreen + 2 * image[height - 1][i + 1].rgbtGreen +
  4037cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4037d0:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4037d3:	83 e9 01             	sub    $0x1,%ecx
  4037d6:	48 63 d1             	movslq %ecx,%rdx
  4037d9:	48 0f af d6          	imul   %rsi,%rdx
  4037dd:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4037e4:	48 01 d0             	add    %rdx,%rax
  4037e7:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  4037ea:	83 e9 01             	sub    $0x1,%ecx
  4037ed:	48 63 d1             	movslq %ecx,%rdx
  4037f0:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4037f7:	48 01 d0             	add    %rdx,%rax
  4037fa:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  4037fe:	69 c9 fe ff ff ff    	imul   $0xfffffffe,%ecx,%ecx
  403804:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403808:	8b 7d fc             	mov    -0x4(%rbp),%edi
  40380b:	83 ef 02             	sub    $0x2,%edi
  40380e:	48 63 d7             	movslq %edi,%rdx
  403811:	48 0f af d6          	imul   %rsi,%rdx
  403815:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40381c:	48 01 d0             	add    %rdx,%rax
  40381f:	8b 7d 98             	mov    -0x68(%rbp),%edi
  403822:	83 ef 01             	sub    $0x1,%edi
  403825:	48 63 d7             	movslq %edi,%rdx
  403828:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40382f:	48 01 d0             	add    %rdx,%rax
  403832:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  403836:	29 f9                	sub    %edi,%ecx
  403838:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40383c:	8b 7d fc             	mov    -0x4(%rbp),%edi
  40383f:	83 ef 01             	sub    $0x1,%edi
  403842:	48 63 d7             	movslq %edi,%rdx
  403845:	48 0f af d6          	imul   %rsi,%rdx
  403849:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403850:	48 01 d0             	add    %rdx,%rax
  403853:	8b 7d 98             	mov    -0x68(%rbp),%edi
  403856:	83 c7 01             	add    $0x1,%edi
  403859:	48 63 d7             	movslq %edi,%rdx
  40385c:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403863:	48 01 d0             	add    %rdx,%rax
  403866:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  40386a:	c1 e7 01             	shl    $0x1,%edi
  40386d:	01 f9                	add    %edi,%ecx
                    image[height - 2][i + 1].rgbtGreen;
  40386f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403873:	8b 7d fc             	mov    -0x4(%rbp),%edi
  403876:	83 ef 02             	sub    $0x2,%edi
  403879:	48 63 d7             	movslq %edi,%rdx
  40387c:	48 0f af d6          	imul   %rsi,%rdx
  403880:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403887:	48 01 d0             	add    %rdx,%rax
  40388a:	8b 7d 98             	mov    -0x68(%rbp),%edi
  40388d:	83 c7 01             	add    $0x1,%edi
  403890:	48 63 d7             	movslq %edi,%rdx
  403893:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40389a:	48 01 d0             	add    %rdx,%rax
  40389d:	0f b6 78 01          	movzbl 0x1(%rax),%edi
        int sumgx = -2 * image[height - 1][i - 1].rgbtGreen - image[height - 2][i - 1].rgbtGreen + 2 * image[height - 1][i + 1].rgbtGreen +
  4038a1:	01 f9                	add    %edi,%ecx
  4038a3:	89 4d 90             	mov    %ecx,-0x70(%rbp)
        int sumbx = -2 * image[height - 1][i - 1].rgbtBlue - image[height - 2][i - 1].rgbtBlue + 2 * image[height - 1][i + 1].rgbtBlue +
  4038a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4038aa:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4038ad:	83 e9 01             	sub    $0x1,%ecx
  4038b0:	48 63 d1             	movslq %ecx,%rdx
  4038b3:	48 0f af d6          	imul   %rsi,%rdx
  4038b7:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4038be:	48 01 d0             	add    %rdx,%rax
  4038c1:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  4038c4:	83 e9 01             	sub    $0x1,%ecx
  4038c7:	48 63 d1             	movslq %ecx,%rdx
  4038ca:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4038d1:	48 01 d0             	add    %rdx,%rax
  4038d4:	0f b6 08             	movzbl (%rax),%ecx
  4038d7:	69 c9 fe ff ff ff    	imul   $0xfffffffe,%ecx,%ecx
  4038dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4038e1:	8b 7d fc             	mov    -0x4(%rbp),%edi
  4038e4:	83 ef 02             	sub    $0x2,%edi
  4038e7:	48 63 d7             	movslq %edi,%rdx
  4038ea:	48 0f af d6          	imul   %rsi,%rdx
  4038ee:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4038f5:	48 01 d0             	add    %rdx,%rax
  4038f8:	8b 7d 98             	mov    -0x68(%rbp),%edi
  4038fb:	83 ef 01             	sub    $0x1,%edi
  4038fe:	48 63 d7             	movslq %edi,%rdx
  403901:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403908:	48 01 d0             	add    %rdx,%rax
  40390b:	0f b6 38             	movzbl (%rax),%edi
  40390e:	29 f9                	sub    %edi,%ecx
  403910:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403914:	8b 7d fc             	mov    -0x4(%rbp),%edi
  403917:	83 ef 01             	sub    $0x1,%edi
  40391a:	48 63 d7             	movslq %edi,%rdx
  40391d:	48 0f af d6          	imul   %rsi,%rdx
  403921:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403928:	48 01 d0             	add    %rdx,%rax
  40392b:	8b 7d 98             	mov    -0x68(%rbp),%edi
  40392e:	83 c7 01             	add    $0x1,%edi
  403931:	48 63 d7             	movslq %edi,%rdx
  403934:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40393b:	48 01 d0             	add    %rdx,%rax
  40393e:	0f b6 38             	movzbl (%rax),%edi
  403941:	c1 e7 01             	shl    $0x1,%edi
  403944:	01 f9                	add    %edi,%ecx
                    image[height - 2][i + 1].rgbtBlue;
  403946:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40394a:	8b 7d fc             	mov    -0x4(%rbp),%edi
  40394d:	83 ef 02             	sub    $0x2,%edi
  403950:	48 63 d7             	movslq %edi,%rdx
  403953:	48 0f af d6          	imul   %rsi,%rdx
  403957:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40395e:	48 01 d0             	add    %rdx,%rax
  403961:	8b 7d 98             	mov    -0x68(%rbp),%edi
  403964:	83 c7 01             	add    $0x1,%edi
  403967:	48 63 d7             	movslq %edi,%rdx
  40396a:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403971:	48 01 d0             	add    %rdx,%rax
  403974:	0f b6 38             	movzbl (%rax),%edi
        int sumbx = -2 * image[height - 1][i - 1].rgbtBlue - image[height - 2][i - 1].rgbtBlue + 2 * image[height - 1][i + 1].rgbtBlue +
  403977:	01 f9                	add    %edi,%ecx
  403979:	89 4d 8c             	mov    %ecx,-0x74(%rbp)

        int sumry = image[height - 2][i - 1].rgbtRed + 2 * image[height - 2][i].rgbtRed + image[height - 2][i + 1].rgbtRed;
  40397c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403980:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  403983:	83 e9 02             	sub    $0x2,%ecx
  403986:	48 63 d1             	movslq %ecx,%rdx
  403989:	48 0f af d6          	imul   %rsi,%rdx
  40398d:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403994:	48 01 d0             	add    %rdx,%rax
  403997:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  40399a:	83 e9 01             	sub    $0x1,%ecx
  40399d:	48 63 d1             	movslq %ecx,%rdx
  4039a0:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4039a7:	48 01 d0             	add    %rdx,%rax
  4039aa:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
  4039ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4039b2:	8b 7d fc             	mov    -0x4(%rbp),%edi
  4039b5:	83 ef 02             	sub    $0x2,%edi
  4039b8:	48 63 d7             	movslq %edi,%rdx
  4039bb:	48 0f af d6          	imul   %rsi,%rdx
  4039bf:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4039c6:	48 01 d0             	add    %rdx,%rax
  4039c9:	48 63 55 98          	movslq -0x68(%rbp),%rdx
  4039cd:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4039d4:	48 01 d0             	add    %rdx,%rax
  4039d7:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  4039db:	c1 e7 01             	shl    $0x1,%edi
  4039de:	01 f9                	add    %edi,%ecx
  4039e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4039e4:	8b 7d fc             	mov    -0x4(%rbp),%edi
  4039e7:	83 ef 02             	sub    $0x2,%edi
  4039ea:	48 63 d7             	movslq %edi,%rdx
  4039ed:	48 0f af d6          	imul   %rsi,%rdx
  4039f1:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4039f8:	48 01 d0             	add    %rdx,%rax
  4039fb:	8b 7d 98             	mov    -0x68(%rbp),%edi
  4039fe:	83 c7 01             	add    $0x1,%edi
  403a01:	48 63 d7             	movslq %edi,%rdx
  403a04:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403a0b:	48 01 d0             	add    %rdx,%rax
  403a0e:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  403a12:	01 f9                	add    %edi,%ecx
  403a14:	89 4d 88             	mov    %ecx,-0x78(%rbp)
        int sumgy = image[height - 2][i - 1].rgbtGreen + 2 * image[height - 2][i].rgbtGreen + image[height - 2][i + 1].rgbtGreen;
  403a17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403a1b:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  403a1e:	83 e9 02             	sub    $0x2,%ecx
  403a21:	48 63 d1             	movslq %ecx,%rdx
  403a24:	48 0f af d6          	imul   %rsi,%rdx
  403a28:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403a2f:	48 01 d0             	add    %rdx,%rax
  403a32:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  403a35:	83 e9 01             	sub    $0x1,%ecx
  403a38:	48 63 d1             	movslq %ecx,%rdx
  403a3b:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403a42:	48 01 d0             	add    %rdx,%rax
  403a45:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  403a49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403a4d:	8b 7d fc             	mov    -0x4(%rbp),%edi
  403a50:	83 ef 02             	sub    $0x2,%edi
  403a53:	48 63 d7             	movslq %edi,%rdx
  403a56:	48 0f af d6          	imul   %rsi,%rdx
  403a5a:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403a61:	48 01 d0             	add    %rdx,%rax
  403a64:	48 63 55 98          	movslq -0x68(%rbp),%rdx
  403a68:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403a6f:	48 01 d0             	add    %rdx,%rax
  403a72:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  403a76:	c1 e7 01             	shl    $0x1,%edi
  403a79:	01 f9                	add    %edi,%ecx
  403a7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403a7f:	8b 7d fc             	mov    -0x4(%rbp),%edi
  403a82:	83 ef 02             	sub    $0x2,%edi
  403a85:	48 63 d7             	movslq %edi,%rdx
  403a88:	48 0f af d6          	imul   %rsi,%rdx
  403a8c:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403a93:	48 01 d0             	add    %rdx,%rax
  403a96:	8b 7d 98             	mov    -0x68(%rbp),%edi
  403a99:	83 c7 01             	add    $0x1,%edi
  403a9c:	48 63 d7             	movslq %edi,%rdx
  403a9f:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403aa6:	48 01 d0             	add    %rdx,%rax
  403aa9:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  403aad:	01 f9                	add    %edi,%ecx
  403aaf:	89 4d 84             	mov    %ecx,-0x7c(%rbp)
        int sumby = image[height - 2][i - 1].rgbtBlue + 2 * image[height - 2][i].rgbtBlue + image[height - 2][i + 1].rgbtBlue;
  403ab2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403ab6:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  403ab9:	83 e9 02             	sub    $0x2,%ecx
  403abc:	48 63 d1             	movslq %ecx,%rdx
  403abf:	48 0f af d6          	imul   %rsi,%rdx
  403ac3:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403aca:	48 01 d0             	add    %rdx,%rax
  403acd:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  403ad0:	83 e9 01             	sub    $0x1,%ecx
  403ad3:	48 63 d1             	movslq %ecx,%rdx
  403ad6:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403add:	48 01 d0             	add    %rdx,%rax
  403ae0:	0f b6 08             	movzbl (%rax),%ecx
  403ae3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403ae7:	8b 7d fc             	mov    -0x4(%rbp),%edi
  403aea:	83 ef 02             	sub    $0x2,%edi
  403aed:	48 63 d7             	movslq %edi,%rdx
  403af0:	48 0f af d6          	imul   %rsi,%rdx
  403af4:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403afb:	48 01 d0             	add    %rdx,%rax
  403afe:	48 63 55 98          	movslq -0x68(%rbp),%rdx
  403b02:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403b09:	48 01 d0             	add    %rdx,%rax
  403b0c:	0f b6 38             	movzbl (%rax),%edi
  403b0f:	c1 e7 01             	shl    $0x1,%edi
  403b12:	01 f9                	add    %edi,%ecx
  403b14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403b18:	8b 7d fc             	mov    -0x4(%rbp),%edi
  403b1b:	83 ef 02             	sub    $0x2,%edi
  403b1e:	48 63 d7             	movslq %edi,%rdx
  403b21:	48 0f af d6          	imul   %rsi,%rdx
  403b25:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403b2c:	48 01 d0             	add    %rdx,%rax
  403b2f:	8b 7d 98             	mov    -0x68(%rbp),%edi
  403b32:	83 c7 01             	add    $0x1,%edi
  403b35:	48 63 d7             	movslq %edi,%rdx
  403b38:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403b3f:	48 01 d0             	add    %rdx,%rax
  403b42:	0f b6 38             	movzbl (%rax),%edi
  403b45:	01 f9                	add    %edi,%ecx
  403b47:	89 4d 80             	mov    %ecx,-0x80(%rbp)
        //can leave as positive because it's being squarred.

        if (round(sqrt(pow(sumrx, 2) + pow(sumry, 2))) > 255)
  403b4a:	f2 0f 2a 45 94       	cvtsi2sdl -0x6c(%rbp),%xmm0
  403b4f:	e8 1c d5 ff ff       	callq  401070 <pow@plt>
  403b54:	f2 0f 10 0d 04 36 00 	movsd  0x3604(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403b5b:	00 
  403b5c:	f2 0f 2a 55 88       	cvtsi2sdl -0x78(%rbp),%xmm2
  403b61:	f2 0f 11 85 00 fe ff 	movsd  %xmm0,-0x200(%rbp)
  403b68:	ff 
  403b69:	0f 28 c2             	movaps %xmm2,%xmm0
  403b6c:	e8 ff d4 ff ff       	callq  401070 <pow@plt>
  403b71:	f2 0f 10 0d df 35 00 	movsd  0x35df(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  403b78:	00 
  403b79:	f2 0f 10 95 00 fe ff 	movsd  -0x200(%rbp),%xmm2
  403b80:	ff 
  403b81:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  403b85:	0f 28 c2             	movaps %xmm2,%xmm0
  403b88:	f2 0f 11 8d f8 fd ff 	movsd  %xmm1,-0x208(%rbp)
  403b8f:	ff 
  403b90:	e8 6b d5 ff ff       	callq  401100 <sqrt@plt>
  403b95:	e8 a6 d4 ff ff       	callq  401040 <round@plt>
  403b9a:	f2 0f 10 8d f8 fd ff 	movsd  -0x208(%rbp),%xmm1
  403ba1:	ff 
  403ba2:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  403ba6:	0f 86 3c 00 00 00    	jbe    403be8 <edges+0x1838>
        {
            holder[height - 1][i].rgbtRed = 255;
  403bac:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403baf:	83 e8 01             	sub    $0x1,%eax
  403bb2:	48 63 c8             	movslq %eax,%rcx
  403bb5:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  403bbc:	48 0f af ca          	imul   %rdx,%rcx
  403bc0:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403bc7:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  403bce:	48 01 ce             	add    %rcx,%rsi
  403bd1:	48 63 4d 98          	movslq -0x68(%rbp),%rcx
  403bd5:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403bdc:	48 01 ce             	add    %rcx,%rsi
  403bdf:	c6 46 02 ff          	movb   $0xff,0x2(%rsi)
        }
  403be3:	e9 8a 00 00 00       	jmpq   403c72 <edges+0x18c2>
        else
        {
            holder[height - 1][i].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
  403be8:	f2 0f 2a 45 94       	cvtsi2sdl -0x6c(%rbp),%xmm0
  403bed:	f2 0f 10 0d 6b 35 00 	movsd  0x356b(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403bf4:	00 
  403bf5:	f2 0f 11 8d f0 fd ff 	movsd  %xmm1,-0x210(%rbp)
  403bfc:	ff 
  403bfd:	e8 6e d4 ff ff       	callq  401070 <pow@plt>
  403c02:	f2 0f 2a 4d 88       	cvtsi2sdl -0x78(%rbp),%xmm1
  403c07:	f2 0f 11 85 e8 fd ff 	movsd  %xmm0,-0x218(%rbp)
  403c0e:	ff 
  403c0f:	0f 28 c1             	movaps %xmm1,%xmm0
  403c12:	f2 0f 10 8d f0 fd ff 	movsd  -0x210(%rbp),%xmm1
  403c19:	ff 
  403c1a:	e8 51 d4 ff ff       	callq  401070 <pow@plt>
  403c1f:	f2 0f 10 8d e8 fd ff 	movsd  -0x218(%rbp),%xmm1
  403c26:	ff 
  403c27:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  403c2b:	0f 28 c1             	movaps %xmm1,%xmm0
  403c2e:	e8 cd d4 ff ff       	callq  401100 <sqrt@plt>
  403c33:	e8 08 d4 ff ff       	callq  401040 <round@plt>
  403c38:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  403c3c:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  403c3f:	83 e9 01             	sub    $0x1,%ecx
  403c42:	48 63 d1             	movslq %ecx,%rdx
  403c45:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  403c4c:	48 0f af d6          	imul   %rsi,%rdx
  403c50:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403c57:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  403c5e:	48 01 d7             	add    %rdx,%rdi
  403c61:	48 63 55 98          	movslq -0x68(%rbp),%rdx
  403c65:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403c6c:	48 01 d7             	add    %rdx,%rdi
  403c6f:	88 47 02             	mov    %al,0x2(%rdi)
  403c72:	f2 0f 10 0d e6 34 00 	movsd  0x34e6(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403c79:	00 
        }

        if (round(sqrt(pow(sumgx, 2) + pow(sumgy, 2))) > 255)
  403c7a:	f2 0f 2a 45 90       	cvtsi2sdl -0x70(%rbp),%xmm0
  403c7f:	e8 ec d3 ff ff       	callq  401070 <pow@plt>
  403c84:	f2 0f 10 0d d4 34 00 	movsd  0x34d4(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403c8b:	00 
  403c8c:	f2 0f 2a 55 84       	cvtsi2sdl -0x7c(%rbp),%xmm2
  403c91:	f2 0f 11 85 e0 fd ff 	movsd  %xmm0,-0x220(%rbp)
  403c98:	ff 
  403c99:	0f 28 c2             	movaps %xmm2,%xmm0
  403c9c:	e8 cf d3 ff ff       	callq  401070 <pow@plt>
  403ca1:	f2 0f 10 0d af 34 00 	movsd  0x34af(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  403ca8:	00 
  403ca9:	f2 0f 10 95 e0 fd ff 	movsd  -0x220(%rbp),%xmm2
  403cb0:	ff 
  403cb1:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  403cb5:	0f 28 c2             	movaps %xmm2,%xmm0
  403cb8:	f2 0f 11 8d d8 fd ff 	movsd  %xmm1,-0x228(%rbp)
  403cbf:	ff 
  403cc0:	e8 3b d4 ff ff       	callq  401100 <sqrt@plt>
  403cc5:	e8 76 d3 ff ff       	callq  401040 <round@plt>
  403cca:	f2 0f 10 8d d8 fd ff 	movsd  -0x228(%rbp),%xmm1
  403cd1:	ff 
  403cd2:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  403cd6:	0f 86 3c 00 00 00    	jbe    403d18 <edges+0x1968>
        {
            holder[height - 1][i].rgbtGreen = 255;
  403cdc:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403cdf:	83 e8 01             	sub    $0x1,%eax
  403ce2:	48 63 c8             	movslq %eax,%rcx
  403ce5:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  403cec:	48 0f af ca          	imul   %rdx,%rcx
  403cf0:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403cf7:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  403cfe:	48 01 ce             	add    %rcx,%rsi
  403d01:	48 63 4d 98          	movslq -0x68(%rbp),%rcx
  403d05:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403d0c:	48 01 ce             	add    %rcx,%rsi
  403d0f:	c6 46 01 ff          	movb   $0xff,0x1(%rsi)
        }
  403d13:	e9 8a 00 00 00       	jmpq   403da2 <edges+0x19f2>
        else
        {
            holder[height - 1][i].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
  403d18:	f2 0f 2a 45 90       	cvtsi2sdl -0x70(%rbp),%xmm0
  403d1d:	f2 0f 10 0d 3b 34 00 	movsd  0x343b(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403d24:	00 
  403d25:	f2 0f 11 8d d0 fd ff 	movsd  %xmm1,-0x230(%rbp)
  403d2c:	ff 
  403d2d:	e8 3e d3 ff ff       	callq  401070 <pow@plt>
  403d32:	f2 0f 2a 4d 84       	cvtsi2sdl -0x7c(%rbp),%xmm1
  403d37:	f2 0f 11 85 c8 fd ff 	movsd  %xmm0,-0x238(%rbp)
  403d3e:	ff 
  403d3f:	0f 28 c1             	movaps %xmm1,%xmm0
  403d42:	f2 0f 10 8d d0 fd ff 	movsd  -0x230(%rbp),%xmm1
  403d49:	ff 
  403d4a:	e8 21 d3 ff ff       	callq  401070 <pow@plt>
  403d4f:	f2 0f 10 8d c8 fd ff 	movsd  -0x238(%rbp),%xmm1
  403d56:	ff 
  403d57:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  403d5b:	0f 28 c1             	movaps %xmm1,%xmm0
  403d5e:	e8 9d d3 ff ff       	callq  401100 <sqrt@plt>
  403d63:	e8 d8 d2 ff ff       	callq  401040 <round@plt>
  403d68:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  403d6c:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  403d6f:	83 e9 01             	sub    $0x1,%ecx
  403d72:	48 63 d1             	movslq %ecx,%rdx
  403d75:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  403d7c:	48 0f af d6          	imul   %rsi,%rdx
  403d80:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403d87:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  403d8e:	48 01 d7             	add    %rdx,%rdi
  403d91:	48 63 55 98          	movslq -0x68(%rbp),%rdx
  403d95:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403d9c:	48 01 d7             	add    %rdx,%rdi
  403d9f:	88 47 01             	mov    %al,0x1(%rdi)
  403da2:	f2 0f 10 0d b6 33 00 	movsd  0x33b6(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403da9:	00 
        }

        if (round(sqrt(pow(sumbx, 2) + pow(sumby, 2))) > 255)
  403daa:	f2 0f 2a 45 8c       	cvtsi2sdl -0x74(%rbp),%xmm0
  403daf:	e8 bc d2 ff ff       	callq  401070 <pow@plt>
  403db4:	f2 0f 10 0d a4 33 00 	movsd  0x33a4(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403dbb:	00 
  403dbc:	f2 0f 2a 55 80       	cvtsi2sdl -0x80(%rbp),%xmm2
  403dc1:	f2 0f 11 85 c0 fd ff 	movsd  %xmm0,-0x240(%rbp)
  403dc8:	ff 
  403dc9:	0f 28 c2             	movaps %xmm2,%xmm0
  403dcc:	e8 9f d2 ff ff       	callq  401070 <pow@plt>
  403dd1:	f2 0f 10 0d 7f 33 00 	movsd  0x337f(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  403dd8:	00 
  403dd9:	f2 0f 10 95 c0 fd ff 	movsd  -0x240(%rbp),%xmm2
  403de0:	ff 
  403de1:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  403de5:	0f 28 c2             	movaps %xmm2,%xmm0
  403de8:	f2 0f 11 8d b8 fd ff 	movsd  %xmm1,-0x248(%rbp)
  403def:	ff 
  403df0:	e8 0b d3 ff ff       	callq  401100 <sqrt@plt>
  403df5:	e8 46 d2 ff ff       	callq  401040 <round@plt>
  403dfa:	f2 0f 10 8d b8 fd ff 	movsd  -0x248(%rbp),%xmm1
  403e01:	ff 
  403e02:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  403e06:	0f 86 3b 00 00 00    	jbe    403e47 <edges+0x1a97>
        {
            holder[height - 1][i].rgbtBlue = 255;
  403e0c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403e0f:	83 e8 01             	sub    $0x1,%eax
  403e12:	48 63 c8             	movslq %eax,%rcx
  403e15:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  403e1c:	48 0f af ca          	imul   %rdx,%rcx
  403e20:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403e27:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  403e2e:	48 01 ce             	add    %rcx,%rsi
  403e31:	48 63 4d 98          	movslq -0x68(%rbp),%rcx
  403e35:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  403e3c:	48 01 ce             	add    %rcx,%rsi
  403e3f:	c6 06 ff             	movb   $0xff,(%rsi)
        }
  403e42:	e9 89 00 00 00       	jmpq   403ed0 <edges+0x1b20>
        else
        {
            holder[height - 1][i].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));
  403e47:	f2 0f 2a 45 8c       	cvtsi2sdl -0x74(%rbp),%xmm0
  403e4c:	f2 0f 10 0d 0c 33 00 	movsd  0x330c(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403e53:	00 
  403e54:	f2 0f 11 8d b0 fd ff 	movsd  %xmm1,-0x250(%rbp)
  403e5b:	ff 
  403e5c:	e8 0f d2 ff ff       	callq  401070 <pow@plt>
  403e61:	f2 0f 2a 4d 80       	cvtsi2sdl -0x80(%rbp),%xmm1
  403e66:	f2 0f 11 85 a8 fd ff 	movsd  %xmm0,-0x258(%rbp)
  403e6d:	ff 
  403e6e:	0f 28 c1             	movaps %xmm1,%xmm0
  403e71:	f2 0f 10 8d b0 fd ff 	movsd  -0x250(%rbp),%xmm1
  403e78:	ff 
  403e79:	e8 f2 d1 ff ff       	callq  401070 <pow@plt>
  403e7e:	f2 0f 10 8d a8 fd ff 	movsd  -0x258(%rbp),%xmm1
  403e85:	ff 
  403e86:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  403e8a:	0f 28 c1             	movaps %xmm1,%xmm0
  403e8d:	e8 6e d2 ff ff       	callq  401100 <sqrt@plt>
  403e92:	e8 a9 d1 ff ff       	callq  401040 <round@plt>
  403e97:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  403e9b:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  403e9e:	83 e9 01             	sub    $0x1,%ecx
  403ea1:	48 63 d1             	movslq %ecx,%rdx
  403ea4:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  403eab:	48 0f af d6          	imul   %rsi,%rdx
  403eaf:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403eb6:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  403ebd:	48 01 d7             	add    %rdx,%rdi
  403ec0:	48 63 55 98          	movslq -0x68(%rbp),%rdx
  403ec4:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403ecb:	48 01 d7             	add    %rdx,%rdi
  403ece:	88 07                	mov    %al,(%rdi)
        }

        /*holder[height - 1][i].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
        holder[height - 1][i].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
        holder[height - 1][i].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));*/
    }
  403ed0:	e9 00 00 00 00       	jmpq   403ed5 <edges+0x1b25>
    for (int i = 1; i < width - 1; i++)
  403ed5:	8b 45 98             	mov    -0x68(%rbp),%eax
  403ed8:	83 c0 01             	add    $0x1,%eax
  403edb:	89 45 98             	mov    %eax,-0x68(%rbp)
  403ede:	e9 ef f7 ff ff       	jmpq   4036d2 <edges+0x1322>

    //left edge
    //minus corners
    for (int i = 1; i < height - 1; i++)
  403ee3:	c7 85 7c ff ff ff 01 	movl   $0x1,-0x84(%rbp)
  403eea:	00 00 00 
  403eed:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  403ef3:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  403ef6:	83 e9 01             	sub    $0x1,%ecx
  403ef9:	39 c8                	cmp    %ecx,%eax
  403efb:	0f 8d 91 06 00 00    	jge    404592 <edges+0x21e2>
  403f01:	f2 0f 10 0d 57 32 00 	movsd  0x3257(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  403f08:	00 
    {
        int sumrx = image[i - 1][1].rgbtRed + 2 * image[i][1].rgbtRed + image[i + 1][1].rgbtRed;
  403f09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403f0d:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
  403f13:	83 e9 01             	sub    $0x1,%ecx
  403f16:	48 63 d1             	movslq %ecx,%rdx
  403f19:	48 8b b5 d8 fe ff ff 	mov    -0x128(%rbp),%rsi
  403f20:	48 0f af d6          	imul   %rsi,%rdx
  403f24:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403f2b:	48 01 d0             	add    %rdx,%rax
  403f2e:	0f b6 48 05          	movzbl 0x5(%rax),%ecx
  403f32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403f36:	48 63 95 7c ff ff ff 	movslq -0x84(%rbp),%rdx
  403f3d:	48 0f af d6          	imul   %rsi,%rdx
  403f41:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403f48:	48 01 d0             	add    %rdx,%rax
  403f4b:	0f b6 78 05          	movzbl 0x5(%rax),%edi
  403f4f:	c1 e7 01             	shl    $0x1,%edi
  403f52:	01 f9                	add    %edi,%ecx
  403f54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403f58:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  403f5e:	83 c7 01             	add    $0x1,%edi
  403f61:	48 63 d7             	movslq %edi,%rdx
  403f64:	48 0f af d6          	imul   %rsi,%rdx
  403f68:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403f6f:	48 01 d0             	add    %rdx,%rax
  403f72:	0f b6 78 05          	movzbl 0x5(%rax),%edi
  403f76:	01 f9                	add    %edi,%ecx
  403f78:	89 8d 78 ff ff ff    	mov    %ecx,-0x88(%rbp)
        int sumgx = image[i - 1][1].rgbtGreen + 2 * image[i][1].rgbtGreen + image[i + 1][1].rgbtGreen;
  403f7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403f82:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
  403f88:	83 e9 01             	sub    $0x1,%ecx
  403f8b:	48 63 d1             	movslq %ecx,%rdx
  403f8e:	48 0f af d6          	imul   %rsi,%rdx
  403f92:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403f99:	48 01 d0             	add    %rdx,%rax
  403f9c:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
  403fa0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403fa4:	48 63 95 7c ff ff ff 	movslq -0x84(%rbp),%rdx
  403fab:	48 0f af d6          	imul   %rsi,%rdx
  403faf:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403fb6:	48 01 d0             	add    %rdx,%rax
  403fb9:	0f b6 78 04          	movzbl 0x4(%rax),%edi
  403fbd:	c1 e7 01             	shl    $0x1,%edi
  403fc0:	01 f9                	add    %edi,%ecx
  403fc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403fc6:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  403fcc:	83 c7 01             	add    $0x1,%edi
  403fcf:	48 63 d7             	movslq %edi,%rdx
  403fd2:	48 0f af d6          	imul   %rsi,%rdx
  403fd6:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  403fdd:	48 01 d0             	add    %rdx,%rax
  403fe0:	0f b6 78 04          	movzbl 0x4(%rax),%edi
  403fe4:	01 f9                	add    %edi,%ecx
  403fe6:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)
        int sumbx = image[i - 1][1].rgbtBlue + 2 * image[i][1].rgbtBlue + image[i + 1][1].rgbtBlue;
  403fec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403ff0:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
  403ff6:	83 e9 01             	sub    $0x1,%ecx
  403ff9:	48 63 d1             	movslq %ecx,%rdx
  403ffc:	48 0f af d6          	imul   %rsi,%rdx
  404000:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404007:	48 01 d0             	add    %rdx,%rax
  40400a:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
  40400e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404012:	48 63 95 7c ff ff ff 	movslq -0x84(%rbp),%rdx
  404019:	48 0f af d6          	imul   %rsi,%rdx
  40401d:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404024:	48 01 d0             	add    %rdx,%rax
  404027:	0f b6 78 03          	movzbl 0x3(%rax),%edi
  40402b:	c1 e7 01             	shl    $0x1,%edi
  40402e:	01 f9                	add    %edi,%ecx
  404030:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404034:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  40403a:	83 c7 01             	add    $0x1,%edi
  40403d:	48 63 d7             	movslq %edi,%rdx
  404040:	48 0f af d6          	imul   %rsi,%rdx
  404044:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40404b:	48 01 d0             	add    %rdx,%rax
  40404e:	0f b6 78 03          	movzbl 0x3(%rax),%edi
  404052:	01 f9                	add    %edi,%ecx
  404054:	89 8d 70 ff ff ff    	mov    %ecx,-0x90(%rbp)

        int sumry = -2 * image[i - 1][0].rgbtRed - image[i - 1][1].rgbtRed + 2 * image[i + 1][0].rgbtRed + image[i + 1][1].rgbtRed;
  40405a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40405e:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
  404064:	83 e9 01             	sub    $0x1,%ecx
  404067:	48 63 d1             	movslq %ecx,%rdx
  40406a:	48 0f af d6          	imul   %rsi,%rdx
  40406e:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404075:	48 01 d0             	add    %rdx,%rax
  404078:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
  40407c:	69 c9 fe ff ff ff    	imul   $0xfffffffe,%ecx,%ecx
  404082:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404086:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  40408c:	83 ef 01             	sub    $0x1,%edi
  40408f:	48 63 d7             	movslq %edi,%rdx
  404092:	48 0f af d6          	imul   %rsi,%rdx
  404096:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40409d:	48 01 d0             	add    %rdx,%rax
  4040a0:	0f b6 78 05          	movzbl 0x5(%rax),%edi
  4040a4:	29 f9                	sub    %edi,%ecx
  4040a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4040aa:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  4040b0:	83 c7 01             	add    $0x1,%edi
  4040b3:	48 63 d7             	movslq %edi,%rdx
  4040b6:	48 0f af d6          	imul   %rsi,%rdx
  4040ba:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4040c1:	48 01 d0             	add    %rdx,%rax
  4040c4:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  4040c8:	c1 e7 01             	shl    $0x1,%edi
  4040cb:	01 f9                	add    %edi,%ecx
  4040cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4040d1:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  4040d7:	83 c7 01             	add    $0x1,%edi
  4040da:	48 63 d7             	movslq %edi,%rdx
  4040dd:	48 0f af d6          	imul   %rsi,%rdx
  4040e1:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4040e8:	48 01 d0             	add    %rdx,%rax
  4040eb:	0f b6 78 05          	movzbl 0x5(%rax),%edi
  4040ef:	01 f9                	add    %edi,%ecx
  4040f1:	89 8d 6c ff ff ff    	mov    %ecx,-0x94(%rbp)
        int sumgy = -2 * image[i - 1][0].rgbtGreen - image[i - 1][1].rgbtGreen + 2 * image[i + 1][0].rgbtGreen + image[i + 1][1].rgbtGreen;
  4040f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4040fb:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
  404101:	83 e9 01             	sub    $0x1,%ecx
  404104:	48 63 d1             	movslq %ecx,%rdx
  404107:	48 0f af d6          	imul   %rsi,%rdx
  40410b:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404112:	48 01 d0             	add    %rdx,%rax
  404115:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  404119:	69 c9 fe ff ff ff    	imul   $0xfffffffe,%ecx,%ecx
  40411f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404123:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  404129:	83 ef 01             	sub    $0x1,%edi
  40412c:	48 63 d7             	movslq %edi,%rdx
  40412f:	48 0f af d6          	imul   %rsi,%rdx
  404133:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40413a:	48 01 d0             	add    %rdx,%rax
  40413d:	0f b6 78 04          	movzbl 0x4(%rax),%edi
  404141:	29 f9                	sub    %edi,%ecx
  404143:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404147:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  40414d:	83 c7 01             	add    $0x1,%edi
  404150:	48 63 d7             	movslq %edi,%rdx
  404153:	48 0f af d6          	imul   %rsi,%rdx
  404157:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40415e:	48 01 d0             	add    %rdx,%rax
  404161:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  404165:	c1 e7 01             	shl    $0x1,%edi
  404168:	01 f9                	add    %edi,%ecx
  40416a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40416e:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  404174:	83 c7 01             	add    $0x1,%edi
  404177:	48 63 d7             	movslq %edi,%rdx
  40417a:	48 0f af d6          	imul   %rsi,%rdx
  40417e:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404185:	48 01 d0             	add    %rdx,%rax
  404188:	0f b6 78 04          	movzbl 0x4(%rax),%edi
  40418c:	01 f9                	add    %edi,%ecx
  40418e:	89 8d 68 ff ff ff    	mov    %ecx,-0x98(%rbp)
        int sumby = -2 * image[i - 1][0].rgbtBlue - image[i - 1][1].rgbtBlue + 2 * image[i + 1][0].rgbtBlue + image[i + 1][1].rgbtBlue;
  404194:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404198:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
  40419e:	83 e9 01             	sub    $0x1,%ecx
  4041a1:	48 63 d1             	movslq %ecx,%rdx
  4041a4:	48 0f af d6          	imul   %rsi,%rdx
  4041a8:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4041af:	48 01 d0             	add    %rdx,%rax
  4041b2:	0f b6 08             	movzbl (%rax),%ecx
  4041b5:	69 c9 fe ff ff ff    	imul   $0xfffffffe,%ecx,%ecx
  4041bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4041bf:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  4041c5:	83 ef 01             	sub    $0x1,%edi
  4041c8:	48 63 d7             	movslq %edi,%rdx
  4041cb:	48 0f af d6          	imul   %rsi,%rdx
  4041cf:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4041d6:	48 01 d0             	add    %rdx,%rax
  4041d9:	0f b6 78 03          	movzbl 0x3(%rax),%edi
  4041dd:	29 f9                	sub    %edi,%ecx
  4041df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4041e3:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  4041e9:	83 c7 01             	add    $0x1,%edi
  4041ec:	48 63 d7             	movslq %edi,%rdx
  4041ef:	48 0f af d6          	imul   %rsi,%rdx
  4041f3:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4041fa:	48 01 d0             	add    %rdx,%rax
  4041fd:	0f b6 38             	movzbl (%rax),%edi
  404200:	c1 e7 01             	shl    $0x1,%edi
  404203:	01 f9                	add    %edi,%ecx
  404205:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404209:	8b bd 7c ff ff ff    	mov    -0x84(%rbp),%edi
  40420f:	83 c7 01             	add    $0x1,%edi
  404212:	48 63 d7             	movslq %edi,%rdx
  404215:	48 0f af d6          	imul   %rsi,%rdx
  404219:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404220:	48 01 d0             	add    %rdx,%rax
  404223:	0f b6 78 03          	movzbl 0x3(%rax),%edi
  404227:	01 f9                	add    %edi,%ecx
  404229:	89 8d 64 ff ff ff    	mov    %ecx,-0x9c(%rbp)

        if (round(sqrt(pow(sumrx, 2) + pow(sumry, 2))) > 255)
  40422f:	f2 0f 2a 85 78 ff ff 	cvtsi2sdl -0x88(%rbp),%xmm0
  404236:	ff 
  404237:	e8 34 ce ff ff       	callq  401070 <pow@plt>
  40423c:	f2 0f 10 0d 1c 2f 00 	movsd  0x2f1c(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404243:	00 
  404244:	f2 0f 2a 95 6c ff ff 	cvtsi2sdl -0x94(%rbp),%xmm2
  40424b:	ff 
  40424c:	f2 0f 11 85 a0 fd ff 	movsd  %xmm0,-0x260(%rbp)
  404253:	ff 
  404254:	0f 28 c2             	movaps %xmm2,%xmm0
  404257:	e8 14 ce ff ff       	callq  401070 <pow@plt>
  40425c:	f2 0f 10 0d f4 2e 00 	movsd  0x2ef4(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  404263:	00 
  404264:	f2 0f 10 95 a0 fd ff 	movsd  -0x260(%rbp),%xmm2
  40426b:	ff 
  40426c:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  404270:	0f 28 c2             	movaps %xmm2,%xmm0
  404273:	f2 0f 11 8d 98 fd ff 	movsd  %xmm1,-0x268(%rbp)
  40427a:	ff 
  40427b:	e8 80 ce ff ff       	callq  401100 <sqrt@plt>
  404280:	e8 bb cd ff ff       	callq  401040 <round@plt>
  404285:	f2 0f 10 8d 98 fd ff 	movsd  -0x268(%rbp),%xmm1
  40428c:	ff 
  40428d:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  404291:	0f 86 2c 00 00 00    	jbe    4042c3 <edges+0x1f13>
        {
            holder[i][0].rgbtRed = 255;
  404297:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  40429e:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4042a5:	48 0f af c1          	imul   %rcx,%rax
  4042a9:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  4042b0:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  4042b7:	48 01 c2             	add    %rax,%rdx
  4042ba:	c6 42 02 ff          	movb   $0xff,0x2(%rdx)
        }
  4042be:	e9 80 00 00 00       	jmpq   404343 <edges+0x1f93>
        else
        {
            holder[i][0].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
  4042c3:	f2 0f 2a 85 78 ff ff 	cvtsi2sdl -0x88(%rbp),%xmm0
  4042ca:	ff 
  4042cb:	f2 0f 10 0d 8d 2e 00 	movsd  0x2e8d(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4042d2:	00 
  4042d3:	f2 0f 11 8d 90 fd ff 	movsd  %xmm1,-0x270(%rbp)
  4042da:	ff 
  4042db:	e8 90 cd ff ff       	callq  401070 <pow@plt>
  4042e0:	f2 0f 2a 8d 6c ff ff 	cvtsi2sdl -0x94(%rbp),%xmm1
  4042e7:	ff 
  4042e8:	f2 0f 11 85 88 fd ff 	movsd  %xmm0,-0x278(%rbp)
  4042ef:	ff 
  4042f0:	0f 28 c1             	movaps %xmm1,%xmm0
  4042f3:	f2 0f 10 8d 90 fd ff 	movsd  -0x270(%rbp),%xmm1
  4042fa:	ff 
  4042fb:	e8 70 cd ff ff       	callq  401070 <pow@plt>
  404300:	f2 0f 10 8d 88 fd ff 	movsd  -0x278(%rbp),%xmm1
  404307:	ff 
  404308:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  40430c:	0f 28 c1             	movaps %xmm1,%xmm0
  40430f:	e8 ec cd ff ff       	callq  401100 <sqrt@plt>
  404314:	e8 27 cd ff ff       	callq  401040 <round@plt>
  404319:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  40431d:	48 63 8d 7c ff ff ff 	movslq -0x84(%rbp),%rcx
  404324:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  40432b:	48 0f af ca          	imul   %rdx,%rcx
  40432f:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404336:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  40433d:	48 01 ce             	add    %rcx,%rsi
  404340:	88 46 02             	mov    %al,0x2(%rsi)
  404343:	f2 0f 10 0d 15 2e 00 	movsd  0x2e15(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40434a:	00 
        }

        if (round(sqrt(pow(sumgx, 2) + pow(sumgy, 2))) > 255)
  40434b:	f2 0f 2a 85 74 ff ff 	cvtsi2sdl -0x8c(%rbp),%xmm0
  404352:	ff 
  404353:	e8 18 cd ff ff       	callq  401070 <pow@plt>
  404358:	f2 0f 10 0d 00 2e 00 	movsd  0x2e00(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40435f:	00 
  404360:	f2 0f 2a 95 68 ff ff 	cvtsi2sdl -0x98(%rbp),%xmm2
  404367:	ff 
  404368:	f2 0f 11 85 80 fd ff 	movsd  %xmm0,-0x280(%rbp)
  40436f:	ff 
  404370:	0f 28 c2             	movaps %xmm2,%xmm0
  404373:	e8 f8 cc ff ff       	callq  401070 <pow@plt>
  404378:	f2 0f 10 0d d8 2d 00 	movsd  0x2dd8(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  40437f:	00 
  404380:	f2 0f 10 95 80 fd ff 	movsd  -0x280(%rbp),%xmm2
  404387:	ff 
  404388:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  40438c:	0f 28 c2             	movaps %xmm2,%xmm0
  40438f:	f2 0f 11 8d 78 fd ff 	movsd  %xmm1,-0x288(%rbp)
  404396:	ff 
  404397:	e8 64 cd ff ff       	callq  401100 <sqrt@plt>
  40439c:	e8 9f cc ff ff       	callq  401040 <round@plt>
  4043a1:	f2 0f 10 8d 78 fd ff 	movsd  -0x288(%rbp),%xmm1
  4043a8:	ff 
  4043a9:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  4043ad:	0f 86 2c 00 00 00    	jbe    4043df <edges+0x202f>
        {
            holder[i][0].rgbtGreen = 255;
  4043b3:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  4043ba:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4043c1:	48 0f af c1          	imul   %rcx,%rax
  4043c5:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  4043cc:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  4043d3:	48 01 c2             	add    %rax,%rdx
  4043d6:	c6 42 01 ff          	movb   $0xff,0x1(%rdx)
        }
  4043da:	e9 80 00 00 00       	jmpq   40445f <edges+0x20af>
        else
        {
            holder[i][0].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
  4043df:	f2 0f 2a 85 74 ff ff 	cvtsi2sdl -0x8c(%rbp),%xmm0
  4043e6:	ff 
  4043e7:	f2 0f 10 0d 71 2d 00 	movsd  0x2d71(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4043ee:	00 
  4043ef:	f2 0f 11 8d 70 fd ff 	movsd  %xmm1,-0x290(%rbp)
  4043f6:	ff 
  4043f7:	e8 74 cc ff ff       	callq  401070 <pow@plt>
  4043fc:	f2 0f 2a 8d 68 ff ff 	cvtsi2sdl -0x98(%rbp),%xmm1
  404403:	ff 
  404404:	f2 0f 11 85 68 fd ff 	movsd  %xmm0,-0x298(%rbp)
  40440b:	ff 
  40440c:	0f 28 c1             	movaps %xmm1,%xmm0
  40440f:	f2 0f 10 8d 70 fd ff 	movsd  -0x290(%rbp),%xmm1
  404416:	ff 
  404417:	e8 54 cc ff ff       	callq  401070 <pow@plt>
  40441c:	f2 0f 10 8d 68 fd ff 	movsd  -0x298(%rbp),%xmm1
  404423:	ff 
  404424:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  404428:	0f 28 c1             	movaps %xmm1,%xmm0
  40442b:	e8 d0 cc ff ff       	callq  401100 <sqrt@plt>
  404430:	e8 0b cc ff ff       	callq  401040 <round@plt>
  404435:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  404439:	48 63 8d 7c ff ff ff 	movslq -0x84(%rbp),%rcx
  404440:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  404447:	48 0f af ca          	imul   %rdx,%rcx
  40444b:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404452:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  404459:	48 01 ce             	add    %rcx,%rsi
  40445c:	88 46 01             	mov    %al,0x1(%rsi)
  40445f:	f2 0f 10 0d f9 2c 00 	movsd  0x2cf9(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404466:	00 
        }

        if (round(sqrt(pow(sumbx, 2) + pow(sumby, 2))) > 255)
  404467:	f2 0f 2a 85 70 ff ff 	cvtsi2sdl -0x90(%rbp),%xmm0
  40446e:	ff 
  40446f:	e8 fc cb ff ff       	callq  401070 <pow@plt>
  404474:	f2 0f 10 0d e4 2c 00 	movsd  0x2ce4(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40447b:	00 
  40447c:	f2 0f 2a 95 64 ff ff 	cvtsi2sdl -0x9c(%rbp),%xmm2
  404483:	ff 
  404484:	f2 0f 11 85 60 fd ff 	movsd  %xmm0,-0x2a0(%rbp)
  40448b:	ff 
  40448c:	0f 28 c2             	movaps %xmm2,%xmm0
  40448f:	e8 dc cb ff ff       	callq  401070 <pow@plt>
  404494:	f2 0f 10 0d bc 2c 00 	movsd  0x2cbc(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  40449b:	00 
  40449c:	f2 0f 10 95 60 fd ff 	movsd  -0x2a0(%rbp),%xmm2
  4044a3:	ff 
  4044a4:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  4044a8:	0f 28 c2             	movaps %xmm2,%xmm0
  4044ab:	f2 0f 11 8d 58 fd ff 	movsd  %xmm1,-0x2a8(%rbp)
  4044b2:	ff 
  4044b3:	e8 48 cc ff ff       	callq  401100 <sqrt@plt>
  4044b8:	e8 83 cb ff ff       	callq  401040 <round@plt>
  4044bd:	f2 0f 10 8d 58 fd ff 	movsd  -0x2a8(%rbp),%xmm1
  4044c4:	ff 
  4044c5:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  4044c9:	0f 86 2b 00 00 00    	jbe    4044fa <edges+0x214a>
        {
            holder[i][0].rgbtBlue = 255;
  4044cf:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  4044d6:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4044dd:	48 0f af c1          	imul   %rcx,%rax
  4044e1:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  4044e8:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  4044ef:	48 01 c2             	add    %rax,%rdx
  4044f2:	c6 02 ff             	movb   $0xff,(%rdx)
        }
  4044f5:	e9 7f 00 00 00       	jmpq   404579 <edges+0x21c9>
        else
        {
            holder[i][0].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));
  4044fa:	f2 0f 2a 85 70 ff ff 	cvtsi2sdl -0x90(%rbp),%xmm0
  404501:	ff 
  404502:	f2 0f 10 0d 56 2c 00 	movsd  0x2c56(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404509:	00 
  40450a:	f2 0f 11 8d 50 fd ff 	movsd  %xmm1,-0x2b0(%rbp)
  404511:	ff 
  404512:	e8 59 cb ff ff       	callq  401070 <pow@plt>
  404517:	f2 0f 2a 8d 64 ff ff 	cvtsi2sdl -0x9c(%rbp),%xmm1
  40451e:	ff 
  40451f:	f2 0f 11 85 48 fd ff 	movsd  %xmm0,-0x2b8(%rbp)
  404526:	ff 
  404527:	0f 28 c1             	movaps %xmm1,%xmm0
  40452a:	f2 0f 10 8d 50 fd ff 	movsd  -0x2b0(%rbp),%xmm1
  404531:	ff 
  404532:	e8 39 cb ff ff       	callq  401070 <pow@plt>
  404537:	f2 0f 10 8d 48 fd ff 	movsd  -0x2b8(%rbp),%xmm1
  40453e:	ff 
  40453f:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  404543:	0f 28 c1             	movaps %xmm1,%xmm0
  404546:	e8 b5 cb ff ff       	callq  401100 <sqrt@plt>
  40454b:	e8 f0 ca ff ff       	callq  401040 <round@plt>
  404550:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  404554:	48 63 8d 7c ff ff ff 	movslq -0x84(%rbp),%rcx
  40455b:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  404562:	48 0f af ca          	imul   %rdx,%rcx
  404566:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40456d:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  404574:	48 01 ce             	add    %rcx,%rsi
  404577:	88 06                	mov    %al,(%rsi)
        }

        /*holder[i][0].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
        holder[i][0].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
        holder[i][0].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));*/
    }
  404579:	e9 00 00 00 00       	jmpq   40457e <edges+0x21ce>
    for (int i = 1; i < height - 1; i++)
  40457e:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  404584:	83 c0 01             	add    $0x1,%eax
  404587:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  40458d:	e9 5b f9 ff ff       	jmpq   403eed <edges+0x1b3d>

    //right edge
    //minus corners
    for (int i = 1; i < height - 1; i++)
  404592:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
  404599:	00 00 00 
  40459c:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
  4045a2:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4045a5:	83 e9 01             	sub    $0x1,%ecx
  4045a8:	39 c8                	cmp    %ecx,%eax
  4045aa:	0f 8d 8d 08 00 00    	jge    404e3d <edges+0x2a8d>
  4045b0:	f2 0f 10 0d a8 2b 00 	movsd  0x2ba8(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4045b7:	00 
    {
        int sumrx = image[i - 1][width - 2].rgbtRed + 2 * image[i][width - 2].rgbtRed + image[i + 1][width - 2].rgbtRed;
  4045b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4045bc:	8b 8d 60 ff ff ff    	mov    -0xa0(%rbp),%ecx
  4045c2:	83 e9 01             	sub    $0x1,%ecx
  4045c5:	48 63 d1             	movslq %ecx,%rdx
  4045c8:	48 8b b5 d8 fe ff ff 	mov    -0x128(%rbp),%rsi
  4045cf:	48 0f af d6          	imul   %rsi,%rdx
  4045d3:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4045da:	48 01 d0             	add    %rdx,%rax
  4045dd:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4045e0:	83 e9 02             	sub    $0x2,%ecx
  4045e3:	48 63 d1             	movslq %ecx,%rdx
  4045e6:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4045ed:	48 01 d0             	add    %rdx,%rax
  4045f0:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
  4045f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4045f8:	48 63 95 60 ff ff ff 	movslq -0xa0(%rbp),%rdx
  4045ff:	48 0f af d6          	imul   %rsi,%rdx
  404603:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40460a:	48 01 d0             	add    %rdx,%rax
  40460d:	8b 7d f8             	mov    -0x8(%rbp),%edi
  404610:	83 ef 02             	sub    $0x2,%edi
  404613:	48 63 d7             	movslq %edi,%rdx
  404616:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40461d:	48 01 d0             	add    %rdx,%rax
  404620:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  404624:	c1 e7 01             	shl    $0x1,%edi
  404627:	01 f9                	add    %edi,%ecx
  404629:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40462d:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  404633:	83 c7 01             	add    $0x1,%edi
  404636:	48 63 d7             	movslq %edi,%rdx
  404639:	48 0f af d6          	imul   %rsi,%rdx
  40463d:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404644:	48 01 d0             	add    %rdx,%rax
  404647:	8b 7d f8             	mov    -0x8(%rbp),%edi
  40464a:	83 ef 02             	sub    $0x2,%edi
  40464d:	48 63 d7             	movslq %edi,%rdx
  404650:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404657:	48 01 d0             	add    %rdx,%rax
  40465a:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  40465e:	01 f9                	add    %edi,%ecx
  404660:	89 8d 5c ff ff ff    	mov    %ecx,-0xa4(%rbp)
        int sumgx = image[i - 1][width - 2].rgbtGreen + 2 * image[i][width - 2].rgbtGreen + image[i + 1][width - 2].rgbtGreen;
  404666:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40466a:	8b 8d 60 ff ff ff    	mov    -0xa0(%rbp),%ecx
  404670:	83 e9 01             	sub    $0x1,%ecx
  404673:	48 63 d1             	movslq %ecx,%rdx
  404676:	48 0f af d6          	imul   %rsi,%rdx
  40467a:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404681:	48 01 d0             	add    %rdx,%rax
  404684:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  404687:	83 e9 02             	sub    $0x2,%ecx
  40468a:	48 63 d1             	movslq %ecx,%rdx
  40468d:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404694:	48 01 d0             	add    %rdx,%rax
  404697:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  40469b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40469f:	48 63 95 60 ff ff ff 	movslq -0xa0(%rbp),%rdx
  4046a6:	48 0f af d6          	imul   %rsi,%rdx
  4046aa:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4046b1:	48 01 d0             	add    %rdx,%rax
  4046b4:	8b 7d f8             	mov    -0x8(%rbp),%edi
  4046b7:	83 ef 02             	sub    $0x2,%edi
  4046ba:	48 63 d7             	movslq %edi,%rdx
  4046bd:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4046c4:	48 01 d0             	add    %rdx,%rax
  4046c7:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  4046cb:	c1 e7 01             	shl    $0x1,%edi
  4046ce:	01 f9                	add    %edi,%ecx
  4046d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4046d4:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  4046da:	83 c7 01             	add    $0x1,%edi
  4046dd:	48 63 d7             	movslq %edi,%rdx
  4046e0:	48 0f af d6          	imul   %rsi,%rdx
  4046e4:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4046eb:	48 01 d0             	add    %rdx,%rax
  4046ee:	8b 7d f8             	mov    -0x8(%rbp),%edi
  4046f1:	83 ef 02             	sub    $0x2,%edi
  4046f4:	48 63 d7             	movslq %edi,%rdx
  4046f7:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4046fe:	48 01 d0             	add    %rdx,%rax
  404701:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  404705:	01 f9                	add    %edi,%ecx
  404707:	89 8d 58 ff ff ff    	mov    %ecx,-0xa8(%rbp)
        int sumbx = image[i - 1][width - 2].rgbtBlue + 2 * image[i][width - 2].rgbtBlue + image[i + 1][width - 2].rgbtBlue;
  40470d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404711:	8b 8d 60 ff ff ff    	mov    -0xa0(%rbp),%ecx
  404717:	83 e9 01             	sub    $0x1,%ecx
  40471a:	48 63 d1             	movslq %ecx,%rdx
  40471d:	48 0f af d6          	imul   %rsi,%rdx
  404721:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404728:	48 01 d0             	add    %rdx,%rax
  40472b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  40472e:	83 e9 02             	sub    $0x2,%ecx
  404731:	48 63 d1             	movslq %ecx,%rdx
  404734:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40473b:	48 01 d0             	add    %rdx,%rax
  40473e:	0f b6 08             	movzbl (%rax),%ecx
  404741:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404745:	48 63 95 60 ff ff ff 	movslq -0xa0(%rbp),%rdx
  40474c:	48 0f af d6          	imul   %rsi,%rdx
  404750:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404757:	48 01 d0             	add    %rdx,%rax
  40475a:	8b 7d f8             	mov    -0x8(%rbp),%edi
  40475d:	83 ef 02             	sub    $0x2,%edi
  404760:	48 63 d7             	movslq %edi,%rdx
  404763:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40476a:	48 01 d0             	add    %rdx,%rax
  40476d:	0f b6 38             	movzbl (%rax),%edi
  404770:	c1 e7 01             	shl    $0x1,%edi
  404773:	01 f9                	add    %edi,%ecx
  404775:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404779:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  40477f:	83 c7 01             	add    $0x1,%edi
  404782:	48 63 d7             	movslq %edi,%rdx
  404785:	48 0f af d6          	imul   %rsi,%rdx
  404789:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404790:	48 01 d0             	add    %rdx,%rax
  404793:	8b 7d f8             	mov    -0x8(%rbp),%edi
  404796:	83 ef 02             	sub    $0x2,%edi
  404799:	48 63 d7             	movslq %edi,%rdx
  40479c:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4047a3:	48 01 d0             	add    %rdx,%rax
  4047a6:	0f b6 38             	movzbl (%rax),%edi
  4047a9:	01 f9                	add    %edi,%ecx
  4047ab:	89 8d 54 ff ff ff    	mov    %ecx,-0xac(%rbp)

        int sumry = -2 * image[i - 1][width - 1].rgbtRed - image[i - 1][width - 2].rgbtRed + 2 * image[i + 1][width - 1].rgbtRed + image[i +
  4047b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4047b5:	8b 8d 60 ff ff ff    	mov    -0xa0(%rbp),%ecx
  4047bb:	83 e9 01             	sub    $0x1,%ecx
  4047be:	48 63 d1             	movslq %ecx,%rdx
  4047c1:	48 0f af d6          	imul   %rsi,%rdx
  4047c5:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4047cc:	48 01 d0             	add    %rdx,%rax
  4047cf:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4047d2:	83 e9 01             	sub    $0x1,%ecx
  4047d5:	48 63 d1             	movslq %ecx,%rdx
  4047d8:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4047df:	48 01 d0             	add    %rdx,%rax
  4047e2:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
  4047e6:	69 c9 fe ff ff ff    	imul   $0xfffffffe,%ecx,%ecx
  4047ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4047f0:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  4047f6:	83 ef 01             	sub    $0x1,%edi
  4047f9:	48 63 d7             	movslq %edi,%rdx
  4047fc:	48 0f af d6          	imul   %rsi,%rdx
  404800:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404807:	48 01 d0             	add    %rdx,%rax
  40480a:	8b 7d f8             	mov    -0x8(%rbp),%edi
  40480d:	83 ef 02             	sub    $0x2,%edi
  404810:	48 63 d7             	movslq %edi,%rdx
  404813:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40481a:	48 01 d0             	add    %rdx,%rax
  40481d:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  404821:	29 f9                	sub    %edi,%ecx
  404823:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404827:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  40482d:	83 c7 01             	add    $0x1,%edi
  404830:	48 63 d7             	movslq %edi,%rdx
  404833:	48 0f af d6          	imul   %rsi,%rdx
  404837:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40483e:	48 01 d0             	add    %rdx,%rax
  404841:	8b 7d f8             	mov    -0x8(%rbp),%edi
  404844:	83 ef 01             	sub    $0x1,%edi
  404847:	48 63 d7             	movslq %edi,%rdx
  40484a:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404851:	48 01 d0             	add    %rdx,%rax
  404854:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  404858:	c1 e7 01             	shl    $0x1,%edi
  40485b:	01 f9                	add    %edi,%ecx
  40485d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404861:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  404867:	83 c7 01             	add    $0x1,%edi
  40486a:	48 63 d7             	movslq %edi,%rdx
  40486d:	48 0f af d6          	imul   %rsi,%rdx
  404871:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404878:	48 01 d0             	add    %rdx,%rax
                    1][width - 2].rgbtRed;
  40487b:	8b 7d f8             	mov    -0x8(%rbp),%edi
  40487e:	83 ef 02             	sub    $0x2,%edi
        int sumry = -2 * image[i - 1][width - 1].rgbtRed - image[i - 1][width - 2].rgbtRed + 2 * image[i + 1][width - 1].rgbtRed + image[i +
  404881:	48 63 d7             	movslq %edi,%rdx
  404884:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40488b:	48 01 d0             	add    %rdx,%rax
  40488e:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  404892:	01 f9                	add    %edi,%ecx
  404894:	89 8d 50 ff ff ff    	mov    %ecx,-0xb0(%rbp)
        int sumgy = -2 * image[i - 1][width - 1].rgbtGreen - image[i - 1][width - 2].rgbtGreen + 2 * image[i + 1][width - 1].rgbtGreen +
  40489a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40489e:	8b 8d 60 ff ff ff    	mov    -0xa0(%rbp),%ecx
  4048a4:	83 e9 01             	sub    $0x1,%ecx
  4048a7:	48 63 d1             	movslq %ecx,%rdx
  4048aa:	48 0f af d6          	imul   %rsi,%rdx
  4048ae:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4048b5:	48 01 d0             	add    %rdx,%rax
  4048b8:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4048bb:	83 e9 01             	sub    $0x1,%ecx
  4048be:	48 63 d1             	movslq %ecx,%rdx
  4048c1:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4048c8:	48 01 d0             	add    %rdx,%rax
  4048cb:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  4048cf:	69 c9 fe ff ff ff    	imul   $0xfffffffe,%ecx,%ecx
  4048d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4048d9:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  4048df:	83 ef 01             	sub    $0x1,%edi
  4048e2:	48 63 d7             	movslq %edi,%rdx
  4048e5:	48 0f af d6          	imul   %rsi,%rdx
  4048e9:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4048f0:	48 01 d0             	add    %rdx,%rax
  4048f3:	8b 7d f8             	mov    -0x8(%rbp),%edi
  4048f6:	83 ef 02             	sub    $0x2,%edi
  4048f9:	48 63 d7             	movslq %edi,%rdx
  4048fc:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404903:	48 01 d0             	add    %rdx,%rax
  404906:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  40490a:	29 f9                	sub    %edi,%ecx
  40490c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404910:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  404916:	83 c7 01             	add    $0x1,%edi
  404919:	48 63 d7             	movslq %edi,%rdx
  40491c:	48 0f af d6          	imul   %rsi,%rdx
  404920:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404927:	48 01 d0             	add    %rdx,%rax
  40492a:	8b 7d f8             	mov    -0x8(%rbp),%edi
  40492d:	83 ef 01             	sub    $0x1,%edi
  404930:	48 63 d7             	movslq %edi,%rdx
  404933:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40493a:	48 01 d0             	add    %rdx,%rax
  40493d:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  404941:	c1 e7 01             	shl    $0x1,%edi
  404944:	01 f9                	add    %edi,%ecx
                    image[i + 1][width - 2].rgbtGreen;
  404946:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40494a:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  404950:	83 c7 01             	add    $0x1,%edi
  404953:	48 63 d7             	movslq %edi,%rdx
  404956:	48 0f af d6          	imul   %rsi,%rdx
  40495a:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404961:	48 01 d0             	add    %rdx,%rax
  404964:	8b 7d f8             	mov    -0x8(%rbp),%edi
  404967:	83 ef 02             	sub    $0x2,%edi
  40496a:	48 63 d7             	movslq %edi,%rdx
  40496d:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404974:	48 01 d0             	add    %rdx,%rax
  404977:	0f b6 78 01          	movzbl 0x1(%rax),%edi
        int sumgy = -2 * image[i - 1][width - 1].rgbtGreen - image[i - 1][width - 2].rgbtGreen + 2 * image[i + 1][width - 1].rgbtGreen +
  40497b:	01 f9                	add    %edi,%ecx
  40497d:	89 8d 4c ff ff ff    	mov    %ecx,-0xb4(%rbp)
        int sumby = -2 * image[i - 1][width - 1].rgbtBlue - image[i - 1][width - 2].rgbtBlue + 2 * image[i + 1][width - 1].rgbtBlue +
  404983:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404987:	8b 8d 60 ff ff ff    	mov    -0xa0(%rbp),%ecx
  40498d:	83 e9 01             	sub    $0x1,%ecx
  404990:	48 63 d1             	movslq %ecx,%rdx
  404993:	48 0f af d6          	imul   %rsi,%rdx
  404997:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40499e:	48 01 d0             	add    %rdx,%rax
  4049a1:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4049a4:	83 e9 01             	sub    $0x1,%ecx
  4049a7:	48 63 d1             	movslq %ecx,%rdx
  4049aa:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4049b1:	48 01 d0             	add    %rdx,%rax
  4049b4:	0f b6 08             	movzbl (%rax),%ecx
  4049b7:	69 c9 fe ff ff ff    	imul   $0xfffffffe,%ecx,%ecx
  4049bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4049c1:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  4049c7:	83 ef 01             	sub    $0x1,%edi
  4049ca:	48 63 d7             	movslq %edi,%rdx
  4049cd:	48 0f af d6          	imul   %rsi,%rdx
  4049d1:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4049d8:	48 01 d0             	add    %rdx,%rax
  4049db:	8b 7d f8             	mov    -0x8(%rbp),%edi
  4049de:	83 ef 02             	sub    $0x2,%edi
  4049e1:	48 63 d7             	movslq %edi,%rdx
  4049e4:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4049eb:	48 01 d0             	add    %rdx,%rax
  4049ee:	0f b6 38             	movzbl (%rax),%edi
  4049f1:	29 f9                	sub    %edi,%ecx
  4049f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4049f7:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  4049fd:	83 c7 01             	add    $0x1,%edi
  404a00:	48 63 d7             	movslq %edi,%rdx
  404a03:	48 0f af d6          	imul   %rsi,%rdx
  404a07:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404a0e:	48 01 d0             	add    %rdx,%rax
  404a11:	8b 7d f8             	mov    -0x8(%rbp),%edi
  404a14:	83 ef 01             	sub    $0x1,%edi
  404a17:	48 63 d7             	movslq %edi,%rdx
  404a1a:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404a21:	48 01 d0             	add    %rdx,%rax
  404a24:	0f b6 38             	movzbl (%rax),%edi
  404a27:	c1 e7 01             	shl    $0x1,%edi
  404a2a:	01 f9                	add    %edi,%ecx
                    image[i + 1][width - 2].rgbtBlue;
  404a2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404a30:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
  404a36:	83 c7 01             	add    $0x1,%edi
  404a39:	48 63 d7             	movslq %edi,%rdx
  404a3c:	48 0f af d6          	imul   %rsi,%rdx
  404a40:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404a47:	48 01 d0             	add    %rdx,%rax
  404a4a:	8b 7d f8             	mov    -0x8(%rbp),%edi
  404a4d:	83 ef 02             	sub    $0x2,%edi
  404a50:	48 63 d7             	movslq %edi,%rdx
  404a53:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404a5a:	48 01 d0             	add    %rdx,%rax
  404a5d:	0f b6 38             	movzbl (%rax),%edi
        int sumby = -2 * image[i - 1][width - 1].rgbtBlue - image[i - 1][width - 2].rgbtBlue + 2 * image[i + 1][width - 1].rgbtBlue +
  404a60:	01 f9                	add    %edi,%ecx
  404a62:	89 8d 48 ff ff ff    	mov    %ecx,-0xb8(%rbp)

        if (round(sqrt(pow(sumrx, 2) + pow(sumry, 2))) > 255)
  404a68:	f2 0f 2a 85 5c ff ff 	cvtsi2sdl -0xa4(%rbp),%xmm0
  404a6f:	ff 
  404a70:	e8 fb c5 ff ff       	callq  401070 <pow@plt>
  404a75:	f2 0f 10 0d e3 26 00 	movsd  0x26e3(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404a7c:	00 
  404a7d:	f2 0f 2a 95 50 ff ff 	cvtsi2sdl -0xb0(%rbp),%xmm2
  404a84:	ff 
  404a85:	f2 0f 11 85 40 fd ff 	movsd  %xmm0,-0x2c0(%rbp)
  404a8c:	ff 
  404a8d:	0f 28 c2             	movaps %xmm2,%xmm0
  404a90:	e8 db c5 ff ff       	callq  401070 <pow@plt>
  404a95:	f2 0f 10 0d bb 26 00 	movsd  0x26bb(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  404a9c:	00 
  404a9d:	f2 0f 10 95 40 fd ff 	movsd  -0x2c0(%rbp),%xmm2
  404aa4:	ff 
  404aa5:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  404aa9:	0f 28 c2             	movaps %xmm2,%xmm0
  404aac:	f2 0f 11 8d 38 fd ff 	movsd  %xmm1,-0x2c8(%rbp)
  404ab3:	ff 
  404ab4:	e8 47 c6 ff ff       	callq  401100 <sqrt@plt>
  404ab9:	e8 82 c5 ff ff       	callq  401040 <round@plt>
  404abe:	f2 0f 10 8d 38 fd ff 	movsd  -0x2c8(%rbp),%xmm1
  404ac5:	ff 
  404ac6:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  404aca:	0f 86 3f 00 00 00    	jbe    404b0f <edges+0x275f>
        {
            holder[i][width - 1].rgbtRed = 255;
  404ad0:	48 63 85 60 ff ff ff 	movslq -0xa0(%rbp),%rax
  404ad7:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  404ade:	48 0f af c1          	imul   %rcx,%rax
  404ae2:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  404ae9:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  404af0:	48 01 c2             	add    %rax,%rdx
  404af3:	8b 75 f8             	mov    -0x8(%rbp),%esi
  404af6:	83 ee 01             	sub    $0x1,%esi
  404af9:	48 63 c6             	movslq %esi,%rax
  404afc:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  404b03:	48 01 c2             	add    %rax,%rdx
  404b06:	c6 42 02 ff          	movb   $0xff,0x2(%rdx)
        }
  404b0a:	e9 93 00 00 00       	jmpq   404ba2 <edges+0x27f2>
        else
        {
            holder[i][width - 1].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
  404b0f:	f2 0f 2a 85 5c ff ff 	cvtsi2sdl -0xa4(%rbp),%xmm0
  404b16:	ff 
  404b17:	f2 0f 10 0d 41 26 00 	movsd  0x2641(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404b1e:	00 
  404b1f:	f2 0f 11 8d 30 fd ff 	movsd  %xmm1,-0x2d0(%rbp)
  404b26:	ff 
  404b27:	e8 44 c5 ff ff       	callq  401070 <pow@plt>
  404b2c:	f2 0f 2a 8d 50 ff ff 	cvtsi2sdl -0xb0(%rbp),%xmm1
  404b33:	ff 
  404b34:	f2 0f 11 85 28 fd ff 	movsd  %xmm0,-0x2d8(%rbp)
  404b3b:	ff 
  404b3c:	0f 28 c1             	movaps %xmm1,%xmm0
  404b3f:	f2 0f 10 8d 30 fd ff 	movsd  -0x2d0(%rbp),%xmm1
  404b46:	ff 
  404b47:	e8 24 c5 ff ff       	callq  401070 <pow@plt>
  404b4c:	f2 0f 10 8d 28 fd ff 	movsd  -0x2d8(%rbp),%xmm1
  404b53:	ff 
  404b54:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  404b58:	0f 28 c1             	movaps %xmm1,%xmm0
  404b5b:	e8 a0 c5 ff ff       	callq  401100 <sqrt@plt>
  404b60:	e8 db c4 ff ff       	callq  401040 <round@plt>
  404b65:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  404b69:	48 63 8d 60 ff ff ff 	movslq -0xa0(%rbp),%rcx
  404b70:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  404b77:	48 0f af ca          	imul   %rdx,%rcx
  404b7b:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404b82:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  404b89:	48 01 ce             	add    %rcx,%rsi
  404b8c:	8b 7d f8             	mov    -0x8(%rbp),%edi
  404b8f:	83 ef 01             	sub    $0x1,%edi
  404b92:	48 63 cf             	movslq %edi,%rcx
  404b95:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404b9c:	48 01 ce             	add    %rcx,%rsi
  404b9f:	88 46 02             	mov    %al,0x2(%rsi)
  404ba2:	f2 0f 10 0d b6 25 00 	movsd  0x25b6(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404ba9:	00 
        }

        if (round(sqrt(pow(sumgx, 2) + pow(sumgy, 2))) > 255)
  404baa:	f2 0f 2a 85 58 ff ff 	cvtsi2sdl -0xa8(%rbp),%xmm0
  404bb1:	ff 
  404bb2:	e8 b9 c4 ff ff       	callq  401070 <pow@plt>
  404bb7:	f2 0f 10 0d a1 25 00 	movsd  0x25a1(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404bbe:	00 
  404bbf:	f2 0f 2a 95 4c ff ff 	cvtsi2sdl -0xb4(%rbp),%xmm2
  404bc6:	ff 
  404bc7:	f2 0f 11 85 20 fd ff 	movsd  %xmm0,-0x2e0(%rbp)
  404bce:	ff 
  404bcf:	0f 28 c2             	movaps %xmm2,%xmm0
  404bd2:	e8 99 c4 ff ff       	callq  401070 <pow@plt>
  404bd7:	f2 0f 10 0d 79 25 00 	movsd  0x2579(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  404bde:	00 
  404bdf:	f2 0f 10 95 20 fd ff 	movsd  -0x2e0(%rbp),%xmm2
  404be6:	ff 
  404be7:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  404beb:	0f 28 c2             	movaps %xmm2,%xmm0
  404bee:	f2 0f 11 8d 18 fd ff 	movsd  %xmm1,-0x2e8(%rbp)
  404bf5:	ff 
  404bf6:	e8 05 c5 ff ff       	callq  401100 <sqrt@plt>
  404bfb:	e8 40 c4 ff ff       	callq  401040 <round@plt>
  404c00:	f2 0f 10 8d 18 fd ff 	movsd  -0x2e8(%rbp),%xmm1
  404c07:	ff 
  404c08:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  404c0c:	0f 86 3f 00 00 00    	jbe    404c51 <edges+0x28a1>
        {
            holder[i][width - 1].rgbtGreen = 255;
  404c12:	48 63 85 60 ff ff ff 	movslq -0xa0(%rbp),%rax
  404c19:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  404c20:	48 0f af c1          	imul   %rcx,%rax
  404c24:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  404c2b:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  404c32:	48 01 c2             	add    %rax,%rdx
  404c35:	8b 75 f8             	mov    -0x8(%rbp),%esi
  404c38:	83 ee 01             	sub    $0x1,%esi
  404c3b:	48 63 c6             	movslq %esi,%rax
  404c3e:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  404c45:	48 01 c2             	add    %rax,%rdx
  404c48:	c6 42 01 ff          	movb   $0xff,0x1(%rdx)
        }
  404c4c:	e9 93 00 00 00       	jmpq   404ce4 <edges+0x2934>
        else
        {
            holder[i][width - 1].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
  404c51:	f2 0f 2a 85 58 ff ff 	cvtsi2sdl -0xa8(%rbp),%xmm0
  404c58:	ff 
  404c59:	f2 0f 10 0d ff 24 00 	movsd  0x24ff(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404c60:	00 
  404c61:	f2 0f 11 8d 10 fd ff 	movsd  %xmm1,-0x2f0(%rbp)
  404c68:	ff 
  404c69:	e8 02 c4 ff ff       	callq  401070 <pow@plt>
  404c6e:	f2 0f 2a 8d 4c ff ff 	cvtsi2sdl -0xb4(%rbp),%xmm1
  404c75:	ff 
  404c76:	f2 0f 11 85 08 fd ff 	movsd  %xmm0,-0x2f8(%rbp)
  404c7d:	ff 
  404c7e:	0f 28 c1             	movaps %xmm1,%xmm0
  404c81:	f2 0f 10 8d 10 fd ff 	movsd  -0x2f0(%rbp),%xmm1
  404c88:	ff 
  404c89:	e8 e2 c3 ff ff       	callq  401070 <pow@plt>
  404c8e:	f2 0f 10 8d 08 fd ff 	movsd  -0x2f8(%rbp),%xmm1
  404c95:	ff 
  404c96:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  404c9a:	0f 28 c1             	movaps %xmm1,%xmm0
  404c9d:	e8 5e c4 ff ff       	callq  401100 <sqrt@plt>
  404ca2:	e8 99 c3 ff ff       	callq  401040 <round@plt>
  404ca7:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  404cab:	48 63 8d 60 ff ff ff 	movslq -0xa0(%rbp),%rcx
  404cb2:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  404cb9:	48 0f af ca          	imul   %rdx,%rcx
  404cbd:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404cc4:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  404ccb:	48 01 ce             	add    %rcx,%rsi
  404cce:	8b 7d f8             	mov    -0x8(%rbp),%edi
  404cd1:	83 ef 01             	sub    $0x1,%edi
  404cd4:	48 63 cf             	movslq %edi,%rcx
  404cd7:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404cde:	48 01 ce             	add    %rcx,%rsi
  404ce1:	88 46 01             	mov    %al,0x1(%rsi)
  404ce4:	f2 0f 10 0d 74 24 00 	movsd  0x2474(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404ceb:	00 
        }

        if (round(sqrt(pow(sumbx, 2) + pow(sumby, 2))) > 255)
  404cec:	f2 0f 2a 85 54 ff ff 	cvtsi2sdl -0xac(%rbp),%xmm0
  404cf3:	ff 
  404cf4:	e8 77 c3 ff ff       	callq  401070 <pow@plt>
  404cf9:	f2 0f 10 0d 5f 24 00 	movsd  0x245f(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404d00:	00 
  404d01:	f2 0f 2a 95 48 ff ff 	cvtsi2sdl -0xb8(%rbp),%xmm2
  404d08:	ff 
  404d09:	f2 0f 11 85 00 fd ff 	movsd  %xmm0,-0x300(%rbp)
  404d10:	ff 
  404d11:	0f 28 c2             	movaps %xmm2,%xmm0
  404d14:	e8 57 c3 ff ff       	callq  401070 <pow@plt>
  404d19:	f2 0f 10 0d 37 24 00 	movsd  0x2437(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  404d20:	00 
  404d21:	f2 0f 10 95 00 fd ff 	movsd  -0x300(%rbp),%xmm2
  404d28:	ff 
  404d29:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  404d2d:	0f 28 c2             	movaps %xmm2,%xmm0
  404d30:	f2 0f 11 8d f8 fc ff 	movsd  %xmm1,-0x308(%rbp)
  404d37:	ff 
  404d38:	e8 c3 c3 ff ff       	callq  401100 <sqrt@plt>
  404d3d:	e8 fe c2 ff ff       	callq  401040 <round@plt>
  404d42:	f2 0f 10 8d f8 fc ff 	movsd  -0x308(%rbp),%xmm1
  404d49:	ff 
  404d4a:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  404d4e:	0f 86 3e 00 00 00    	jbe    404d92 <edges+0x29e2>
        {
            holder[i][width - 1].rgbtBlue = 255;
  404d54:	48 63 85 60 ff ff ff 	movslq -0xa0(%rbp),%rax
  404d5b:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  404d62:	48 0f af c1          	imul   %rcx,%rax
  404d66:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  404d6d:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  404d74:	48 01 c2             	add    %rax,%rdx
  404d77:	8b 75 f8             	mov    -0x8(%rbp),%esi
  404d7a:	83 ee 01             	sub    $0x1,%esi
  404d7d:	48 63 c6             	movslq %esi,%rax
  404d80:	48 69 c0 03 00 00 00 	imul   $0x3,%rax,%rax
  404d87:	48 01 c2             	add    %rax,%rdx
  404d8a:	c6 02 ff             	movb   $0xff,(%rdx)
        }
  404d8d:	e9 92 00 00 00       	jmpq   404e24 <edges+0x2a74>
        else
        {
            holder[i][width - 1].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));
  404d92:	f2 0f 2a 85 54 ff ff 	cvtsi2sdl -0xac(%rbp),%xmm0
  404d99:	ff 
  404d9a:	f2 0f 10 0d be 23 00 	movsd  0x23be(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404da1:	00 
  404da2:	f2 0f 11 8d f0 fc ff 	movsd  %xmm1,-0x310(%rbp)
  404da9:	ff 
  404daa:	e8 c1 c2 ff ff       	callq  401070 <pow@plt>
  404daf:	f2 0f 2a 8d 48 ff ff 	cvtsi2sdl -0xb8(%rbp),%xmm1
  404db6:	ff 
  404db7:	f2 0f 11 85 e8 fc ff 	movsd  %xmm0,-0x318(%rbp)
  404dbe:	ff 
  404dbf:	0f 28 c1             	movaps %xmm1,%xmm0
  404dc2:	f2 0f 10 8d f0 fc ff 	movsd  -0x310(%rbp),%xmm1
  404dc9:	ff 
  404dca:	e8 a1 c2 ff ff       	callq  401070 <pow@plt>
  404dcf:	f2 0f 10 8d e8 fc ff 	movsd  -0x318(%rbp),%xmm1
  404dd6:	ff 
  404dd7:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  404ddb:	0f 28 c1             	movaps %xmm1,%xmm0
  404dde:	e8 1d c3 ff ff       	callq  401100 <sqrt@plt>
  404de3:	e8 58 c2 ff ff       	callq  401040 <round@plt>
  404de8:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  404dec:	48 63 8d 60 ff ff ff 	movslq -0xa0(%rbp),%rcx
  404df3:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  404dfa:	48 0f af ca          	imul   %rdx,%rcx
  404dfe:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404e05:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  404e0c:	48 01 ce             	add    %rcx,%rsi
  404e0f:	8b 7d f8             	mov    -0x8(%rbp),%edi
  404e12:	83 ef 01             	sub    $0x1,%edi
  404e15:	48 63 cf             	movslq %edi,%rcx
  404e18:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404e1f:	48 01 ce             	add    %rcx,%rsi
  404e22:	88 06                	mov    %al,(%rsi)
        }

        /*holder[i][width - 1].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
        holder[i][width - 1].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
        holder[i][width - 1].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));*/
    }
  404e24:	e9 00 00 00 00       	jmpq   404e29 <edges+0x2a79>
    for (int i = 1; i < height - 1; i++)
  404e29:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
  404e2f:	83 c0 01             	add    $0x1,%eax
  404e32:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  404e38:	e9 5f f7 ff ff       	jmpq   40459c <edges+0x21ec>
  404e3d:	f2 0f 10 0d 1b 23 00 	movsd  0x231b(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404e44:	00 

    //top left corner
    int sumrx = 2 * image[0][1].rgbtRed + image[1][1].rgbtRed;
  404e45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404e49:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  404e50:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  404e57:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404e5e:	48 01 d0             	add    %rdx,%rax
  404e61:	0f b6 70 05          	movzbl 0x5(%rax),%esi
  404e65:	c1 e6 01             	shl    $0x1,%esi
  404e68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404e6c:	48 c1 e1 00          	shl    $0x0,%rcx
  404e70:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404e77:	48 01 c8             	add    %rcx,%rax
  404e7a:	0f b6 78 05          	movzbl 0x5(%rax),%edi
  404e7e:	01 fe                	add    %edi,%esi
  404e80:	89 b5 44 ff ff ff    	mov    %esi,-0xbc(%rbp)
    int sumgx = 2 * image[0][1].rgbtGreen + image[1][1].rgbtGreen;
  404e86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404e8a:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  404e91:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  404e98:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404e9f:	48 01 d0             	add    %rdx,%rax
  404ea2:	0f b6 70 04          	movzbl 0x4(%rax),%esi
  404ea6:	c1 e6 01             	shl    $0x1,%esi
  404ea9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404ead:	48 c1 e1 00          	shl    $0x0,%rcx
  404eb1:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404eb8:	48 01 c8             	add    %rcx,%rax
  404ebb:	0f b6 78 04          	movzbl 0x4(%rax),%edi
  404ebf:	01 fe                	add    %edi,%esi
  404ec1:	89 b5 40 ff ff ff    	mov    %esi,-0xc0(%rbp)
    int sumbx = 2 * image[0][1].rgbtBlue + image[1][1].rgbtBlue;
  404ec7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404ecb:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  404ed2:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  404ed9:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  404ee0:	48 01 d0             	add    %rdx,%rax
  404ee3:	0f b6 70 03          	movzbl 0x3(%rax),%esi
  404ee7:	c1 e6 01             	shl    $0x1,%esi
  404eea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404eee:	48 c1 e1 00          	shl    $0x0,%rcx
  404ef2:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404ef9:	48 01 c8             	add    %rcx,%rax
  404efc:	0f b6 78 03          	movzbl 0x3(%rax),%edi
  404f00:	01 fe                	add    %edi,%esi
  404f02:	89 b5 3c ff ff ff    	mov    %esi,-0xc4(%rbp)

    int sumry = 2 * image[1][0].rgbtRed + image[1][1].rgbtRed;
  404f08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404f0c:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  404f13:	48 c1 e1 00          	shl    $0x0,%rcx
  404f17:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404f1e:	48 01 c8             	add    %rcx,%rax
  404f21:	0f b6 70 02          	movzbl 0x2(%rax),%esi
  404f25:	c1 e6 01             	shl    $0x1,%esi
  404f28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404f2c:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  404f33:	48 c1 e1 00          	shl    $0x0,%rcx
  404f37:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404f3e:	48 01 c8             	add    %rcx,%rax
  404f41:	0f b6 78 05          	movzbl 0x5(%rax),%edi
  404f45:	01 fe                	add    %edi,%esi
  404f47:	89 b5 38 ff ff ff    	mov    %esi,-0xc8(%rbp)
    int sumgy = 2 * image[1][0].rgbtGreen + image[1][1].rgbtGreen;
  404f4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404f51:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  404f58:	48 c1 e1 00          	shl    $0x0,%rcx
  404f5c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404f63:	48 01 c8             	add    %rcx,%rax
  404f66:	0f b6 70 01          	movzbl 0x1(%rax),%esi
  404f6a:	c1 e6 01             	shl    $0x1,%esi
  404f6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404f71:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  404f78:	48 c1 e1 00          	shl    $0x0,%rcx
  404f7c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404f83:	48 01 c8             	add    %rcx,%rax
  404f86:	0f b6 78 04          	movzbl 0x4(%rax),%edi
  404f8a:	01 fe                	add    %edi,%esi
  404f8c:	89 b5 34 ff ff ff    	mov    %esi,-0xcc(%rbp)
    int sumby = 2 * image[1][0].rgbtBlue + image[1][1].rgbtBlue;
  404f92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404f96:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  404f9d:	48 c1 e1 00          	shl    $0x0,%rcx
  404fa1:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404fa8:	48 01 c8             	add    %rcx,%rax
  404fab:	0f b6 30             	movzbl (%rax),%esi
  404fae:	c1 e6 01             	shl    $0x1,%esi
  404fb1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404fb5:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  404fbc:	48 c1 e1 00          	shl    $0x0,%rcx
  404fc0:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  404fc7:	48 01 c8             	add    %rcx,%rax
  404fca:	0f b6 78 03          	movzbl 0x3(%rax),%edi
  404fce:	01 fe                	add    %edi,%esi
  404fd0:	89 b5 30 ff ff ff    	mov    %esi,-0xd0(%rbp)

    if (round(sqrt(pow(sumrx, 2) + pow(sumry, 2))) > 255)
  404fd6:	f2 0f 2a 85 44 ff ff 	cvtsi2sdl -0xbc(%rbp),%xmm0
  404fdd:	ff 
  404fde:	e8 8d c0 ff ff       	callq  401070 <pow@plt>
  404fe3:	f2 0f 10 0d 75 21 00 	movsd  0x2175(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  404fea:	00 
  404feb:	f2 0f 2a 95 38 ff ff 	cvtsi2sdl -0xc8(%rbp),%xmm2
  404ff2:	ff 
  404ff3:	f2 0f 11 85 e0 fc ff 	movsd  %xmm0,-0x320(%rbp)
  404ffa:	ff 
  404ffb:	0f 28 c2             	movaps %xmm2,%xmm0
  404ffe:	e8 6d c0 ff ff       	callq  401070 <pow@plt>
  405003:	f2 0f 10 0d 4d 21 00 	movsd  0x214d(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  40500a:	00 
  40500b:	f2 0f 10 95 e0 fc ff 	movsd  -0x320(%rbp),%xmm2
  405012:	ff 
  405013:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  405017:	0f 28 c2             	movaps %xmm2,%xmm0
  40501a:	f2 0f 11 8d d8 fc ff 	movsd  %xmm1,-0x328(%rbp)
  405021:	ff 
  405022:	e8 d9 c0 ff ff       	callq  401100 <sqrt@plt>
  405027:	e8 14 c0 ff ff       	callq  401040 <round@plt>
  40502c:	f2 0f 10 8d d8 fc ff 	movsd  -0x328(%rbp),%xmm1
  405033:	ff 
  405034:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  405038:	0f 86 28 00 00 00    	jbe    405066 <edges+0x2cb6>
  40503e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    {
        holder[0][0].rgbtRed = 255;
  405045:	48 69 c8 00 00 00 00 	imul   $0x0,%rax,%rcx
  40504c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405053:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  40505a:	48 01 ca             	add    %rcx,%rdx
  40505d:	c6 42 02 ff          	movb   $0xff,0x2(%rdx)
    }
  405061:	e9 7c 00 00 00       	jmpq   4050e2 <edges+0x2d32>
    else
    {
        holder[0][0].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
  405066:	f2 0f 2a 85 44 ff ff 	cvtsi2sdl -0xbc(%rbp),%xmm0
  40506d:	ff 
  40506e:	f2 0f 10 0d ea 20 00 	movsd  0x20ea(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405075:	00 
  405076:	f2 0f 11 8d d0 fc ff 	movsd  %xmm1,-0x330(%rbp)
  40507d:	ff 
  40507e:	e8 ed bf ff ff       	callq  401070 <pow@plt>
  405083:	f2 0f 2a 8d 38 ff ff 	cvtsi2sdl -0xc8(%rbp),%xmm1
  40508a:	ff 
  40508b:	f2 0f 11 85 c8 fc ff 	movsd  %xmm0,-0x338(%rbp)
  405092:	ff 
  405093:	0f 28 c1             	movaps %xmm1,%xmm0
  405096:	f2 0f 10 8d d0 fc ff 	movsd  -0x330(%rbp),%xmm1
  40509d:	ff 
  40509e:	e8 cd bf ff ff       	callq  401070 <pow@plt>
  4050a3:	f2 0f 10 8d c8 fc ff 	movsd  -0x338(%rbp),%xmm1
  4050aa:	ff 
  4050ab:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  4050af:	0f 28 c1             	movaps %xmm1,%xmm0
  4050b2:	e8 49 c0 ff ff       	callq  401100 <sqrt@plt>
  4050b7:	e8 84 bf ff ff       	callq  401040 <round@plt>
  4050bc:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  4050c0:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4050c7:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  4050ce:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4050d5:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  4050dc:	48 01 d6             	add    %rdx,%rsi
  4050df:	88 46 02             	mov    %al,0x2(%rsi)
  4050e2:	f2 0f 10 0d 76 20 00 	movsd  0x2076(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4050e9:	00 
    }

    if (round(sqrt(pow(sumgx, 2) + pow(sumgy, 2))) > 255)
  4050ea:	f2 0f 2a 85 40 ff ff 	cvtsi2sdl -0xc0(%rbp),%xmm0
  4050f1:	ff 
  4050f2:	e8 79 bf ff ff       	callq  401070 <pow@plt>
  4050f7:	f2 0f 10 0d 61 20 00 	movsd  0x2061(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4050fe:	00 
  4050ff:	f2 0f 2a 95 34 ff ff 	cvtsi2sdl -0xcc(%rbp),%xmm2
  405106:	ff 
  405107:	f2 0f 11 85 c0 fc ff 	movsd  %xmm0,-0x340(%rbp)
  40510e:	ff 
  40510f:	0f 28 c2             	movaps %xmm2,%xmm0
  405112:	e8 59 bf ff ff       	callq  401070 <pow@plt>
  405117:	f2 0f 10 0d 39 20 00 	movsd  0x2039(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  40511e:	00 
  40511f:	f2 0f 10 95 c0 fc ff 	movsd  -0x340(%rbp),%xmm2
  405126:	ff 
  405127:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  40512b:	0f 28 c2             	movaps %xmm2,%xmm0
  40512e:	f2 0f 11 8d b8 fc ff 	movsd  %xmm1,-0x348(%rbp)
  405135:	ff 
  405136:	e8 c5 bf ff ff       	callq  401100 <sqrt@plt>
  40513b:	e8 00 bf ff ff       	callq  401040 <round@plt>
  405140:	f2 0f 10 8d b8 fc ff 	movsd  -0x348(%rbp),%xmm1
  405147:	ff 
  405148:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  40514c:	0f 86 28 00 00 00    	jbe    40517a <edges+0x2dca>
  405152:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    {
        holder[0][0].rgbtGreen = 255;
  405159:	48 69 c8 00 00 00 00 	imul   $0x0,%rax,%rcx
  405160:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405167:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  40516e:	48 01 ca             	add    %rcx,%rdx
  405171:	c6 42 01 ff          	movb   $0xff,0x1(%rdx)
    }
  405175:	e9 7c 00 00 00       	jmpq   4051f6 <edges+0x2e46>
    else
    {
        holder[0][0].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
  40517a:	f2 0f 2a 85 40 ff ff 	cvtsi2sdl -0xc0(%rbp),%xmm0
  405181:	ff 
  405182:	f2 0f 10 0d d6 1f 00 	movsd  0x1fd6(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405189:	00 
  40518a:	f2 0f 11 8d b0 fc ff 	movsd  %xmm1,-0x350(%rbp)
  405191:	ff 
  405192:	e8 d9 be ff ff       	callq  401070 <pow@plt>
  405197:	f2 0f 2a 8d 34 ff ff 	cvtsi2sdl -0xcc(%rbp),%xmm1
  40519e:	ff 
  40519f:	f2 0f 11 85 a8 fc ff 	movsd  %xmm0,-0x358(%rbp)
  4051a6:	ff 
  4051a7:	0f 28 c1             	movaps %xmm1,%xmm0
  4051aa:	f2 0f 10 8d b0 fc ff 	movsd  -0x350(%rbp),%xmm1
  4051b1:	ff 
  4051b2:	e8 b9 be ff ff       	callq  401070 <pow@plt>
  4051b7:	f2 0f 10 8d a8 fc ff 	movsd  -0x358(%rbp),%xmm1
  4051be:	ff 
  4051bf:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  4051c3:	0f 28 c1             	movaps %xmm1,%xmm0
  4051c6:	e8 35 bf ff ff       	callq  401100 <sqrt@plt>
  4051cb:	e8 70 be ff ff       	callq  401040 <round@plt>
  4051d0:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  4051d4:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4051db:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  4051e2:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4051e9:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  4051f0:	48 01 d6             	add    %rdx,%rsi
  4051f3:	88 46 01             	mov    %al,0x1(%rsi)
  4051f6:	f2 0f 10 0d 62 1f 00 	movsd  0x1f62(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4051fd:	00 
    }

    if (round(sqrt(pow(sumbx, 2) + pow(sumby, 2))) > 255)
  4051fe:	f2 0f 2a 85 3c ff ff 	cvtsi2sdl -0xc4(%rbp),%xmm0
  405205:	ff 
  405206:	e8 65 be ff ff       	callq  401070 <pow@plt>
  40520b:	f2 0f 10 0d 4d 1f 00 	movsd  0x1f4d(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405212:	00 
  405213:	f2 0f 2a 95 30 ff ff 	cvtsi2sdl -0xd0(%rbp),%xmm2
  40521a:	ff 
  40521b:	f2 0f 11 85 a0 fc ff 	movsd  %xmm0,-0x360(%rbp)
  405222:	ff 
  405223:	0f 28 c2             	movaps %xmm2,%xmm0
  405226:	e8 45 be ff ff       	callq  401070 <pow@plt>
  40522b:	f2 0f 10 0d 25 1f 00 	movsd  0x1f25(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  405232:	00 
  405233:	f2 0f 10 95 a0 fc ff 	movsd  -0x360(%rbp),%xmm2
  40523a:	ff 
  40523b:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  40523f:	0f 28 c2             	movaps %xmm2,%xmm0
  405242:	f2 0f 11 8d 98 fc ff 	movsd  %xmm1,-0x368(%rbp)
  405249:	ff 
  40524a:	e8 b1 be ff ff       	callq  401100 <sqrt@plt>
  40524f:	e8 ec bd ff ff       	callq  401040 <round@plt>
  405254:	f2 0f 10 8d 98 fc ff 	movsd  -0x368(%rbp),%xmm1
  40525b:	ff 
  40525c:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  405260:	0f 86 27 00 00 00    	jbe    40528d <edges+0x2edd>
  405266:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    {
        holder[0][0].rgbtBlue = 255;
  40526d:	48 69 c8 00 00 00 00 	imul   $0x0,%rax,%rcx
  405274:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40527b:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  405282:	48 01 ca             	add    %rcx,%rdx
  405285:	c6 02 ff             	movb   $0xff,(%rdx)
    }
  405288:	e9 7b 00 00 00       	jmpq   405308 <edges+0x2f58>
    else
    {
        holder[0][0].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));
  40528d:	f2 0f 2a 85 3c ff ff 	cvtsi2sdl -0xc4(%rbp),%xmm0
  405294:	ff 
  405295:	f2 0f 10 0d c3 1e 00 	movsd  0x1ec3(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40529c:	00 
  40529d:	f2 0f 11 8d 90 fc ff 	movsd  %xmm1,-0x370(%rbp)
  4052a4:	ff 
  4052a5:	e8 c6 bd ff ff       	callq  401070 <pow@plt>
  4052aa:	f2 0f 2a 8d 30 ff ff 	cvtsi2sdl -0xd0(%rbp),%xmm1
  4052b1:	ff 
  4052b2:	f2 0f 11 85 88 fc ff 	movsd  %xmm0,-0x378(%rbp)
  4052b9:	ff 
  4052ba:	0f 28 c1             	movaps %xmm1,%xmm0
  4052bd:	f2 0f 10 8d 90 fc ff 	movsd  -0x370(%rbp),%xmm1
  4052c4:	ff 
  4052c5:	e8 a6 bd ff ff       	callq  401070 <pow@plt>
  4052ca:	f2 0f 10 8d 88 fc ff 	movsd  -0x378(%rbp),%xmm1
  4052d1:	ff 
  4052d2:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  4052d6:	0f 28 c1             	movaps %xmm1,%xmm0
  4052d9:	e8 22 be ff ff       	callq  401100 <sqrt@plt>
  4052de:	e8 5d bd ff ff       	callq  401040 <round@plt>
  4052e3:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  4052e7:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4052ee:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  4052f5:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4052fc:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  405303:	48 01 d6             	add    %rdx,%rsi
  405306:	88 06                	mov    %al,(%rsi)
  405308:	f2 0f 10 0d 50 1e 00 	movsd  0x1e50(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40530f:	00 
    /*holder[0][0].rgbtRed = round(sqrt(pow(sumrx, 2) + pow(sumry, 2)));
    holder[0][0].rgbtGreen = round(sqrt(pow(sumgx, 2) + pow(sumgy, 2)));
    holder[0][0].rgbtBlue = round(sqrt(pow(sumbx, 2) + pow(sumby, 2)));*/

    //top right corner
    int sumrx1 = 2 * image[0][width - 2].rgbtRed + image[1][width - 2].rgbtRed;
  405310:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405314:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  40531b:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  405322:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405329:	48 01 d0             	add    %rdx,%rax
  40532c:	8b 75 f8             	mov    -0x8(%rbp),%esi
  40532f:	83 ee 02             	sub    $0x2,%esi
  405332:	48 63 d6             	movslq %esi,%rdx
  405335:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40533c:	48 01 d0             	add    %rdx,%rax
  40533f:	0f b6 70 02          	movzbl 0x2(%rax),%esi
  405343:	c1 e6 01             	shl    $0x1,%esi
  405346:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40534a:	48 c1 e1 00          	shl    $0x0,%rcx
  40534e:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405355:	48 01 c8             	add    %rcx,%rax
  405358:	8b 7d f8             	mov    -0x8(%rbp),%edi
  40535b:	83 ef 02             	sub    $0x2,%edi
  40535e:	48 63 cf             	movslq %edi,%rcx
  405361:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405368:	48 01 c8             	add    %rcx,%rax
  40536b:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  40536f:	01 fe                	add    %edi,%esi
  405371:	89 b5 2c ff ff ff    	mov    %esi,-0xd4(%rbp)
    int sumgx1 = 2 * image[0][width - 2].rgbtGreen + image[1][width - 2].rgbtGreen;
  405377:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40537b:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  405382:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  405389:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405390:	48 01 d0             	add    %rdx,%rax
  405393:	8b 75 f8             	mov    -0x8(%rbp),%esi
  405396:	83 ee 02             	sub    $0x2,%esi
  405399:	48 63 d6             	movslq %esi,%rdx
  40539c:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4053a3:	48 01 d0             	add    %rdx,%rax
  4053a6:	0f b6 70 01          	movzbl 0x1(%rax),%esi
  4053aa:	c1 e6 01             	shl    $0x1,%esi
  4053ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4053b1:	48 c1 e1 00          	shl    $0x0,%rcx
  4053b5:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4053bc:	48 01 c8             	add    %rcx,%rax
  4053bf:	8b 7d f8             	mov    -0x8(%rbp),%edi
  4053c2:	83 ef 02             	sub    $0x2,%edi
  4053c5:	48 63 cf             	movslq %edi,%rcx
  4053c8:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4053cf:	48 01 c8             	add    %rcx,%rax
  4053d2:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  4053d6:	01 fe                	add    %edi,%esi
  4053d8:	89 b5 28 ff ff ff    	mov    %esi,-0xd8(%rbp)
    int sumbx1 = 2 * image[0][width - 2].rgbtBlue + image[1][width - 2].rgbtBlue;
  4053de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4053e2:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  4053e9:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  4053f0:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4053f7:	48 01 d0             	add    %rdx,%rax
  4053fa:	8b 75 f8             	mov    -0x8(%rbp),%esi
  4053fd:	83 ee 02             	sub    $0x2,%esi
  405400:	48 63 d6             	movslq %esi,%rdx
  405403:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40540a:	48 01 d0             	add    %rdx,%rax
  40540d:	0f b6 30             	movzbl (%rax),%esi
  405410:	c1 e6 01             	shl    $0x1,%esi
  405413:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405417:	48 c1 e1 00          	shl    $0x0,%rcx
  40541b:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405422:	48 01 c8             	add    %rcx,%rax
  405425:	8b 7d f8             	mov    -0x8(%rbp),%edi
  405428:	83 ef 02             	sub    $0x2,%edi
  40542b:	48 63 cf             	movslq %edi,%rcx
  40542e:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405435:	48 01 c8             	add    %rcx,%rax
  405438:	0f b6 38             	movzbl (%rax),%edi
  40543b:	01 fe                	add    %edi,%esi
  40543d:	89 b5 24 ff ff ff    	mov    %esi,-0xdc(%rbp)

    int sumry1 = 2 * image[1][width - 1].rgbtRed + image[1][width - 2].rgbtRed;
  405443:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405447:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  40544e:	48 c1 e1 00          	shl    $0x0,%rcx
  405452:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405459:	48 01 c8             	add    %rcx,%rax
  40545c:	8b 75 f8             	mov    -0x8(%rbp),%esi
  40545f:	83 ee 01             	sub    $0x1,%esi
  405462:	48 63 ce             	movslq %esi,%rcx
  405465:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40546c:	48 01 c8             	add    %rcx,%rax
  40546f:	0f b6 70 02          	movzbl 0x2(%rax),%esi
  405473:	c1 e6 01             	shl    $0x1,%esi
  405476:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40547a:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  405481:	48 c1 e1 00          	shl    $0x0,%rcx
  405485:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40548c:	48 01 c8             	add    %rcx,%rax
  40548f:	8b 7d f8             	mov    -0x8(%rbp),%edi
  405492:	83 ef 02             	sub    $0x2,%edi
  405495:	48 63 cf             	movslq %edi,%rcx
  405498:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40549f:	48 01 c8             	add    %rcx,%rax
  4054a2:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  4054a6:	01 fe                	add    %edi,%esi
  4054a8:	89 b5 20 ff ff ff    	mov    %esi,-0xe0(%rbp)
    int sumgy1 = 2 * image[1][width - 1].rgbtGreen + image[1][width - 2].rgbtGreen;
  4054ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4054b2:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  4054b9:	48 c1 e1 00          	shl    $0x0,%rcx
  4054bd:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4054c4:	48 01 c8             	add    %rcx,%rax
  4054c7:	8b 75 f8             	mov    -0x8(%rbp),%esi
  4054ca:	83 ee 01             	sub    $0x1,%esi
  4054cd:	48 63 ce             	movslq %esi,%rcx
  4054d0:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4054d7:	48 01 c8             	add    %rcx,%rax
  4054da:	0f b6 70 01          	movzbl 0x1(%rax),%esi
  4054de:	c1 e6 01             	shl    $0x1,%esi
  4054e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4054e5:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  4054ec:	48 c1 e1 00          	shl    $0x0,%rcx
  4054f0:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4054f7:	48 01 c8             	add    %rcx,%rax
  4054fa:	8b 7d f8             	mov    -0x8(%rbp),%edi
  4054fd:	83 ef 02             	sub    $0x2,%edi
  405500:	48 63 cf             	movslq %edi,%rcx
  405503:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40550a:	48 01 c8             	add    %rcx,%rax
  40550d:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  405511:	01 fe                	add    %edi,%esi
  405513:	89 b5 1c ff ff ff    	mov    %esi,-0xe4(%rbp)
    int sumby1 = 2 * image[1][width - 1].rgbtBlue + image[1][width - 2].rgbtBlue;
  405519:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40551d:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  405524:	48 c1 e1 00          	shl    $0x0,%rcx
  405528:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40552f:	48 01 c8             	add    %rcx,%rax
  405532:	8b 75 f8             	mov    -0x8(%rbp),%esi
  405535:	83 ee 01             	sub    $0x1,%esi
  405538:	48 63 ce             	movslq %esi,%rcx
  40553b:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405542:	48 01 c8             	add    %rcx,%rax
  405545:	0f b6 30             	movzbl (%rax),%esi
  405548:	c1 e6 01             	shl    $0x1,%esi
  40554b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40554f:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  405556:	48 c1 e1 00          	shl    $0x0,%rcx
  40555a:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405561:	48 01 c8             	add    %rcx,%rax
  405564:	8b 7d f8             	mov    -0x8(%rbp),%edi
  405567:	83 ef 02             	sub    $0x2,%edi
  40556a:	48 63 cf             	movslq %edi,%rcx
  40556d:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405574:	48 01 c8             	add    %rcx,%rax
  405577:	0f b6 38             	movzbl (%rax),%edi
  40557a:	01 fe                	add    %edi,%esi
  40557c:	89 b5 18 ff ff ff    	mov    %esi,-0xe8(%rbp)

    //can't be greater than 255
    if (round(sqrt(pow(sumrx1, 2) + pow(sumry1, 2))) > 255)
  405582:	f2 0f 2a 85 2c ff ff 	cvtsi2sdl -0xd4(%rbp),%xmm0
  405589:	ff 
  40558a:	e8 e1 ba ff ff       	callq  401070 <pow@plt>
  40558f:	f2 0f 10 0d c9 1b 00 	movsd  0x1bc9(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405596:	00 
  405597:	f2 0f 2a 95 20 ff ff 	cvtsi2sdl -0xe0(%rbp),%xmm2
  40559e:	ff 
  40559f:	f2 0f 11 85 80 fc ff 	movsd  %xmm0,-0x380(%rbp)
  4055a6:	ff 
  4055a7:	0f 28 c2             	movaps %xmm2,%xmm0
  4055aa:	e8 c1 ba ff ff       	callq  401070 <pow@plt>
  4055af:	f2 0f 10 0d a1 1b 00 	movsd  0x1ba1(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  4055b6:	00 
  4055b7:	f2 0f 10 95 80 fc ff 	movsd  -0x380(%rbp),%xmm2
  4055be:	ff 
  4055bf:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  4055c3:	0f 28 c2             	movaps %xmm2,%xmm0
  4055c6:	f2 0f 11 8d 78 fc ff 	movsd  %xmm1,-0x388(%rbp)
  4055cd:	ff 
  4055ce:	e8 2d bb ff ff       	callq  401100 <sqrt@plt>
  4055d3:	e8 68 ba ff ff       	callq  401040 <round@plt>
  4055d8:	f2 0f 10 8d 78 fc ff 	movsd  -0x388(%rbp),%xmm1
  4055df:	ff 
  4055e0:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  4055e4:	0f 86 3b 00 00 00    	jbe    405625 <edges+0x3275>
  4055ea:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    {
        holder[0][width - 1].rgbtRed = 255;
  4055f1:	48 69 c8 00 00 00 00 	imul   $0x0,%rax,%rcx
  4055f8:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4055ff:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  405606:	48 01 ca             	add    %rcx,%rdx
  405609:	8b 75 f8             	mov    -0x8(%rbp),%esi
  40560c:	83 ee 01             	sub    $0x1,%esi
  40560f:	48 63 ce             	movslq %esi,%rcx
  405612:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405619:	48 01 ca             	add    %rcx,%rdx
  40561c:	c6 42 02 ff          	movb   $0xff,0x2(%rdx)
    }
  405620:	e9 8f 00 00 00       	jmpq   4056b4 <edges+0x3304>
    else
    {
        holder[0][width - 1].rgbtRed = round(sqrt(pow(sumrx1, 2) + pow(sumry1, 2)));
  405625:	f2 0f 2a 85 2c ff ff 	cvtsi2sdl -0xd4(%rbp),%xmm0
  40562c:	ff 
  40562d:	f2 0f 10 0d 2b 1b 00 	movsd  0x1b2b(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405634:	00 
  405635:	f2 0f 11 8d 70 fc ff 	movsd  %xmm1,-0x390(%rbp)
  40563c:	ff 
  40563d:	e8 2e ba ff ff       	callq  401070 <pow@plt>
  405642:	f2 0f 2a 8d 20 ff ff 	cvtsi2sdl -0xe0(%rbp),%xmm1
  405649:	ff 
  40564a:	f2 0f 11 85 68 fc ff 	movsd  %xmm0,-0x398(%rbp)
  405651:	ff 
  405652:	0f 28 c1             	movaps %xmm1,%xmm0
  405655:	f2 0f 10 8d 70 fc ff 	movsd  -0x390(%rbp),%xmm1
  40565c:	ff 
  40565d:	e8 0e ba ff ff       	callq  401070 <pow@plt>
  405662:	f2 0f 10 8d 68 fc ff 	movsd  -0x398(%rbp),%xmm1
  405669:	ff 
  40566a:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  40566e:	0f 28 c1             	movaps %xmm1,%xmm0
  405671:	e8 8a ba ff ff       	callq  401100 <sqrt@plt>
  405676:	e8 c5 b9 ff ff       	callq  401040 <round@plt>
  40567b:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  40567f:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  405686:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  40568d:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405694:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  40569b:	48 01 d6             	add    %rdx,%rsi
  40569e:	8b 7d f8             	mov    -0x8(%rbp),%edi
  4056a1:	83 ef 01             	sub    $0x1,%edi
  4056a4:	48 63 d7             	movslq %edi,%rdx
  4056a7:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4056ae:	48 01 d6             	add    %rdx,%rsi
  4056b1:	88 46 02             	mov    %al,0x2(%rsi)
  4056b4:	f2 0f 10 0d a4 1a 00 	movsd  0x1aa4(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4056bb:	00 
    }

    if (round(sqrt(pow(sumgx1, 2) + pow(sumgy1, 2))) > 255)
  4056bc:	f2 0f 2a 85 28 ff ff 	cvtsi2sdl -0xd8(%rbp),%xmm0
  4056c3:	ff 
  4056c4:	e8 a7 b9 ff ff       	callq  401070 <pow@plt>
  4056c9:	f2 0f 10 0d 8f 1a 00 	movsd  0x1a8f(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4056d0:	00 
  4056d1:	f2 0f 2a 95 1c ff ff 	cvtsi2sdl -0xe4(%rbp),%xmm2
  4056d8:	ff 
  4056d9:	f2 0f 11 85 60 fc ff 	movsd  %xmm0,-0x3a0(%rbp)
  4056e0:	ff 
  4056e1:	0f 28 c2             	movaps %xmm2,%xmm0
  4056e4:	e8 87 b9 ff ff       	callq  401070 <pow@plt>
  4056e9:	f2 0f 10 0d 67 1a 00 	movsd  0x1a67(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  4056f0:	00 
  4056f1:	f2 0f 10 95 60 fc ff 	movsd  -0x3a0(%rbp),%xmm2
  4056f8:	ff 
  4056f9:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  4056fd:	0f 28 c2             	movaps %xmm2,%xmm0
  405700:	f2 0f 11 8d 58 fc ff 	movsd  %xmm1,-0x3a8(%rbp)
  405707:	ff 
  405708:	e8 f3 b9 ff ff       	callq  401100 <sqrt@plt>
  40570d:	e8 2e b9 ff ff       	callq  401040 <round@plt>
  405712:	f2 0f 10 8d 58 fc ff 	movsd  -0x3a8(%rbp),%xmm1
  405719:	ff 
  40571a:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  40571e:	0f 86 3b 00 00 00    	jbe    40575f <edges+0x33af>
  405724:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    {
        holder[0][width - 1].rgbtGreen = 255;
  40572b:	48 69 c8 00 00 00 00 	imul   $0x0,%rax,%rcx
  405732:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405739:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  405740:	48 01 ca             	add    %rcx,%rdx
  405743:	8b 75 f8             	mov    -0x8(%rbp),%esi
  405746:	83 ee 01             	sub    $0x1,%esi
  405749:	48 63 ce             	movslq %esi,%rcx
  40574c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405753:	48 01 ca             	add    %rcx,%rdx
  405756:	c6 42 01 ff          	movb   $0xff,0x1(%rdx)
    }
  40575a:	e9 8f 00 00 00       	jmpq   4057ee <edges+0x343e>
    else
    {
        holder[0][width - 1].rgbtGreen = round(sqrt(pow(sumgx1, 2) + pow(sumgy1, 2)));
  40575f:	f2 0f 2a 85 28 ff ff 	cvtsi2sdl -0xd8(%rbp),%xmm0
  405766:	ff 
  405767:	f2 0f 10 0d f1 19 00 	movsd  0x19f1(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40576e:	00 
  40576f:	f2 0f 11 8d 50 fc ff 	movsd  %xmm1,-0x3b0(%rbp)
  405776:	ff 
  405777:	e8 f4 b8 ff ff       	callq  401070 <pow@plt>
  40577c:	f2 0f 2a 8d 1c ff ff 	cvtsi2sdl -0xe4(%rbp),%xmm1
  405783:	ff 
  405784:	f2 0f 11 85 48 fc ff 	movsd  %xmm0,-0x3b8(%rbp)
  40578b:	ff 
  40578c:	0f 28 c1             	movaps %xmm1,%xmm0
  40578f:	f2 0f 10 8d 50 fc ff 	movsd  -0x3b0(%rbp),%xmm1
  405796:	ff 
  405797:	e8 d4 b8 ff ff       	callq  401070 <pow@plt>
  40579c:	f2 0f 10 8d 48 fc ff 	movsd  -0x3b8(%rbp),%xmm1
  4057a3:	ff 
  4057a4:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  4057a8:	0f 28 c1             	movaps %xmm1,%xmm0
  4057ab:	e8 50 b9 ff ff       	callq  401100 <sqrt@plt>
  4057b0:	e8 8b b8 ff ff       	callq  401040 <round@plt>
  4057b5:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  4057b9:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4057c0:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  4057c7:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4057ce:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  4057d5:	48 01 d6             	add    %rdx,%rsi
  4057d8:	8b 7d f8             	mov    -0x8(%rbp),%edi
  4057db:	83 ef 01             	sub    $0x1,%edi
  4057de:	48 63 d7             	movslq %edi,%rdx
  4057e1:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4057e8:	48 01 d6             	add    %rdx,%rsi
  4057eb:	88 46 01             	mov    %al,0x1(%rsi)
  4057ee:	f2 0f 10 0d 6a 19 00 	movsd  0x196a(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4057f5:	00 
    }

    if (round(sqrt(pow(sumbx1, 2) + pow(sumby1, 2))) > 255)
  4057f6:	f2 0f 2a 85 24 ff ff 	cvtsi2sdl -0xdc(%rbp),%xmm0
  4057fd:	ff 
  4057fe:	e8 6d b8 ff ff       	callq  401070 <pow@plt>
  405803:	f2 0f 10 0d 55 19 00 	movsd  0x1955(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40580a:	00 
  40580b:	f2 0f 2a 95 18 ff ff 	cvtsi2sdl -0xe8(%rbp),%xmm2
  405812:	ff 
  405813:	f2 0f 11 85 40 fc ff 	movsd  %xmm0,-0x3c0(%rbp)
  40581a:	ff 
  40581b:	0f 28 c2             	movaps %xmm2,%xmm0
  40581e:	e8 4d b8 ff ff       	callq  401070 <pow@plt>
  405823:	f2 0f 10 0d 2d 19 00 	movsd  0x192d(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  40582a:	00 
  40582b:	f2 0f 10 95 40 fc ff 	movsd  -0x3c0(%rbp),%xmm2
  405832:	ff 
  405833:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  405837:	0f 28 c2             	movaps %xmm2,%xmm0
  40583a:	f2 0f 11 8d 38 fc ff 	movsd  %xmm1,-0x3c8(%rbp)
  405841:	ff 
  405842:	e8 b9 b8 ff ff       	callq  401100 <sqrt@plt>
  405847:	e8 f4 b7 ff ff       	callq  401040 <round@plt>
  40584c:	f2 0f 10 8d 38 fc ff 	movsd  -0x3c8(%rbp),%xmm1
  405853:	ff 
  405854:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  405858:	0f 86 3a 00 00 00    	jbe    405898 <edges+0x34e8>
  40585e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    {
        holder[0][width - 1].rgbtBlue = 255;
  405865:	48 69 c8 00 00 00 00 	imul   $0x0,%rax,%rcx
  40586c:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405873:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  40587a:	48 01 ca             	add    %rcx,%rdx
  40587d:	8b 75 f8             	mov    -0x8(%rbp),%esi
  405880:	83 ee 01             	sub    $0x1,%esi
  405883:	48 63 ce             	movslq %esi,%rcx
  405886:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40588d:	48 01 ca             	add    %rcx,%rdx
  405890:	c6 02 ff             	movb   $0xff,(%rdx)
    }
  405893:	e9 8e 00 00 00       	jmpq   405926 <edges+0x3576>
    else
    {
        holder[0][width - 1].rgbtBlue = round(sqrt(pow(sumbx1, 2) + pow(sumby1, 2)));
  405898:	f2 0f 2a 85 24 ff ff 	cvtsi2sdl -0xdc(%rbp),%xmm0
  40589f:	ff 
  4058a0:	f2 0f 10 0d b8 18 00 	movsd  0x18b8(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4058a7:	00 
  4058a8:	f2 0f 11 8d 30 fc ff 	movsd  %xmm1,-0x3d0(%rbp)
  4058af:	ff 
  4058b0:	e8 bb b7 ff ff       	callq  401070 <pow@plt>
  4058b5:	f2 0f 2a 8d 18 ff ff 	cvtsi2sdl -0xe8(%rbp),%xmm1
  4058bc:	ff 
  4058bd:	f2 0f 11 85 28 fc ff 	movsd  %xmm0,-0x3d8(%rbp)
  4058c4:	ff 
  4058c5:	0f 28 c1             	movaps %xmm1,%xmm0
  4058c8:	f2 0f 10 8d 30 fc ff 	movsd  -0x3d0(%rbp),%xmm1
  4058cf:	ff 
  4058d0:	e8 9b b7 ff ff       	callq  401070 <pow@plt>
  4058d5:	f2 0f 10 8d 28 fc ff 	movsd  -0x3d8(%rbp),%xmm1
  4058dc:	ff 
  4058dd:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  4058e1:	0f 28 c1             	movaps %xmm1,%xmm0
  4058e4:	e8 17 b8 ff ff       	callq  401100 <sqrt@plt>
  4058e9:	e8 52 b7 ff ff       	callq  401040 <round@plt>
  4058ee:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  4058f2:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
  4058f9:	48 69 d1 00 00 00 00 	imul   $0x0,%rcx,%rdx
  405900:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405907:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  40590e:	48 01 d6             	add    %rdx,%rsi
  405911:	8b 7d f8             	mov    -0x8(%rbp),%edi
  405914:	83 ef 01             	sub    $0x1,%edi
  405917:	48 63 d7             	movslq %edi,%rdx
  40591a:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405921:	48 01 d6             	add    %rdx,%rsi
  405924:	88 06                	mov    %al,(%rsi)
  405926:	f2 0f 10 0d 32 18 00 	movsd  0x1832(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40592d:	00 
    /*holder[0][width - 1].rgbtRed = round(sqrt(pow(sumrx1, 2) + pow(sumry1, 2)));
    holder[0][width - 1].rgbtGreen = round(sqrt(pow(sumgx1, 2) + pow(sumgy1, 2)));
    holder[0][width - 1].rgbtBlue = round(sqrt(pow(sumbx1, 2) + pow(sumby1, 2)));*/

    //bottom left corner
    int sumrx2 = image[height - 2][1].rgbtRed + 2 * image[height - 1][1].rgbtRed;
  40592e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405932:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405935:	83 e9 02             	sub    $0x2,%ecx
  405938:	48 63 d1             	movslq %ecx,%rdx
  40593b:	48 8b b5 d8 fe ff ff 	mov    -0x128(%rbp),%rsi
  405942:	48 0f af d6          	imul   %rsi,%rdx
  405946:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40594d:	48 01 d0             	add    %rdx,%rax
  405950:	0f b6 48 05          	movzbl 0x5(%rax),%ecx
  405954:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405958:	8b 7d fc             	mov    -0x4(%rbp),%edi
  40595b:	83 ef 01             	sub    $0x1,%edi
  40595e:	48 63 d7             	movslq %edi,%rdx
  405961:	48 0f af d6          	imul   %rsi,%rdx
  405965:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40596c:	48 01 d0             	add    %rdx,%rax
  40596f:	0f b6 78 05          	movzbl 0x5(%rax),%edi
  405973:	c1 e7 01             	shl    $0x1,%edi
  405976:	01 f9                	add    %edi,%ecx
  405978:	89 8d 14 ff ff ff    	mov    %ecx,-0xec(%rbp)
    int sumgx2 = image[height - 2][1].rgbtGreen + 2 * image[height - 1][1].rgbtGreen;
  40597e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405982:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405985:	83 e9 02             	sub    $0x2,%ecx
  405988:	48 63 d1             	movslq %ecx,%rdx
  40598b:	48 0f af d6          	imul   %rsi,%rdx
  40598f:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405996:	48 01 d0             	add    %rdx,%rax
  405999:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
  40599d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4059a1:	8b 7d fc             	mov    -0x4(%rbp),%edi
  4059a4:	83 ef 01             	sub    $0x1,%edi
  4059a7:	48 63 d7             	movslq %edi,%rdx
  4059aa:	48 0f af d6          	imul   %rsi,%rdx
  4059ae:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4059b5:	48 01 d0             	add    %rdx,%rax
  4059b8:	0f b6 78 04          	movzbl 0x4(%rax),%edi
  4059bc:	c1 e7 01             	shl    $0x1,%edi
  4059bf:	01 f9                	add    %edi,%ecx
  4059c1:	89 8d 10 ff ff ff    	mov    %ecx,-0xf0(%rbp)
    int sumbx2 = image[height - 2][1].rgbtBlue + 2 * image[height - 1][1].rgbtBlue;
  4059c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4059cb:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4059ce:	83 e9 02             	sub    $0x2,%ecx
  4059d1:	48 63 d1             	movslq %ecx,%rdx
  4059d4:	48 0f af d6          	imul   %rsi,%rdx
  4059d8:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4059df:	48 01 d0             	add    %rdx,%rax
  4059e2:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
  4059e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4059ea:	8b 7d fc             	mov    -0x4(%rbp),%edi
  4059ed:	83 ef 01             	sub    $0x1,%edi
  4059f0:	48 63 d7             	movslq %edi,%rdx
  4059f3:	48 0f af d6          	imul   %rsi,%rdx
  4059f7:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4059fe:	48 01 d0             	add    %rdx,%rax
  405a01:	0f b6 78 03          	movzbl 0x3(%rax),%edi
  405a05:	c1 e7 01             	shl    $0x1,%edi
  405a08:	01 f9                	add    %edi,%ecx
  405a0a:	89 8d 0c ff ff ff    	mov    %ecx,-0xf4(%rbp)

    int sumry2 = image[height - 2][1].rgbtRed + 2 * image[height - 2][0].rgbtRed;
  405a10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405a14:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405a17:	83 e9 02             	sub    $0x2,%ecx
  405a1a:	48 63 d1             	movslq %ecx,%rdx
  405a1d:	48 0f af d6          	imul   %rsi,%rdx
  405a21:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405a28:	48 01 d0             	add    %rdx,%rax
  405a2b:	0f b6 48 05          	movzbl 0x5(%rax),%ecx
  405a2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405a33:	8b 7d fc             	mov    -0x4(%rbp),%edi
  405a36:	83 ef 02             	sub    $0x2,%edi
  405a39:	48 63 d7             	movslq %edi,%rdx
  405a3c:	48 0f af d6          	imul   %rsi,%rdx
  405a40:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405a47:	48 01 d0             	add    %rdx,%rax
  405a4a:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  405a4e:	c1 e7 01             	shl    $0x1,%edi
  405a51:	01 f9                	add    %edi,%ecx
  405a53:	89 8d 08 ff ff ff    	mov    %ecx,-0xf8(%rbp)
    int sumgy2 = image[height - 2][1].rgbtGreen + 2 * image[height - 2][0].rgbtGreen;
  405a59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405a5d:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405a60:	83 e9 02             	sub    $0x2,%ecx
  405a63:	48 63 d1             	movslq %ecx,%rdx
  405a66:	48 0f af d6          	imul   %rsi,%rdx
  405a6a:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405a71:	48 01 d0             	add    %rdx,%rax
  405a74:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
  405a78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405a7c:	8b 7d fc             	mov    -0x4(%rbp),%edi
  405a7f:	83 ef 02             	sub    $0x2,%edi
  405a82:	48 63 d7             	movslq %edi,%rdx
  405a85:	48 0f af d6          	imul   %rsi,%rdx
  405a89:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405a90:	48 01 d0             	add    %rdx,%rax
  405a93:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  405a97:	c1 e7 01             	shl    $0x1,%edi
  405a9a:	01 f9                	add    %edi,%ecx
  405a9c:	89 8d 04 ff ff ff    	mov    %ecx,-0xfc(%rbp)
    int sumby2 = image[height - 2][1].rgbtBlue + 2 * image[height - 2][0].rgbtBlue;
  405aa2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405aa6:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405aa9:	83 e9 02             	sub    $0x2,%ecx
  405aac:	48 63 d1             	movslq %ecx,%rdx
  405aaf:	48 0f af d6          	imul   %rsi,%rdx
  405ab3:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405aba:	48 01 d0             	add    %rdx,%rax
  405abd:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
  405ac1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405ac5:	8b 7d fc             	mov    -0x4(%rbp),%edi
  405ac8:	83 ef 02             	sub    $0x2,%edi
  405acb:	48 63 d7             	movslq %edi,%rdx
  405ace:	48 0f af d6          	imul   %rsi,%rdx
  405ad2:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405ad9:	48 01 d0             	add    %rdx,%rax
  405adc:	0f b6 38             	movzbl (%rax),%edi
  405adf:	c1 e7 01             	shl    $0x1,%edi
  405ae2:	01 f9                	add    %edi,%ecx
  405ae4:	89 8d 00 ff ff ff    	mov    %ecx,-0x100(%rbp)

    //can't have value greater than 255
    if (round(sqrt(pow(sumrx2, 2) + pow(sumry2, 2))) > 255)
  405aea:	f2 0f 2a 85 14 ff ff 	cvtsi2sdl -0xec(%rbp),%xmm0
  405af1:	ff 
  405af2:	e8 79 b5 ff ff       	callq  401070 <pow@plt>
  405af7:	f2 0f 10 0d 61 16 00 	movsd  0x1661(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405afe:	00 
  405aff:	f2 0f 2a 95 08 ff ff 	cvtsi2sdl -0xf8(%rbp),%xmm2
  405b06:	ff 
  405b07:	f2 0f 11 85 20 fc ff 	movsd  %xmm0,-0x3e0(%rbp)
  405b0e:	ff 
  405b0f:	0f 28 c2             	movaps %xmm2,%xmm0
  405b12:	e8 59 b5 ff ff       	callq  401070 <pow@plt>
  405b17:	f2 0f 10 0d 39 16 00 	movsd  0x1639(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  405b1e:	00 
  405b1f:	f2 0f 10 95 20 fc ff 	movsd  -0x3e0(%rbp),%xmm2
  405b26:	ff 
  405b27:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  405b2b:	0f 28 c2             	movaps %xmm2,%xmm0
  405b2e:	f2 0f 11 8d 18 fc ff 	movsd  %xmm1,-0x3e8(%rbp)
  405b35:	ff 
  405b36:	e8 c5 b5 ff ff       	callq  401100 <sqrt@plt>
  405b3b:	e8 00 b5 ff ff       	callq  401040 <round@plt>
  405b40:	f2 0f 10 8d 18 fc ff 	movsd  -0x3e8(%rbp),%xmm1
  405b47:	ff 
  405b48:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  405b4c:	0f 86 2e 00 00 00    	jbe    405b80 <edges+0x37d0>
    {
        holder[height - 1][0].rgbtRed = 255;
  405b52:	8b 45 fc             	mov    -0x4(%rbp),%eax
  405b55:	83 e8 01             	sub    $0x1,%eax
  405b58:	48 63 c8             	movslq %eax,%rcx
  405b5b:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  405b62:	48 0f af ca          	imul   %rdx,%rcx
  405b66:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405b6d:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  405b74:	48 01 ce             	add    %rcx,%rsi
  405b77:	c6 46 02 ff          	movb   $0xff,0x2(%rsi)
    }
  405b7b:	e9 82 00 00 00       	jmpq   405c02 <edges+0x3852>
    else
    {
        holder[height - 1][0].rgbtRed = round(sqrt(pow(sumrx2, 2) + pow(sumry2, 2)));
  405b80:	f2 0f 2a 85 14 ff ff 	cvtsi2sdl -0xec(%rbp),%xmm0
  405b87:	ff 
  405b88:	f2 0f 10 0d d0 15 00 	movsd  0x15d0(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405b8f:	00 
  405b90:	f2 0f 11 8d 10 fc ff 	movsd  %xmm1,-0x3f0(%rbp)
  405b97:	ff 
  405b98:	e8 d3 b4 ff ff       	callq  401070 <pow@plt>
  405b9d:	f2 0f 2a 8d 08 ff ff 	cvtsi2sdl -0xf8(%rbp),%xmm1
  405ba4:	ff 
  405ba5:	f2 0f 11 85 08 fc ff 	movsd  %xmm0,-0x3f8(%rbp)
  405bac:	ff 
  405bad:	0f 28 c1             	movaps %xmm1,%xmm0
  405bb0:	f2 0f 10 8d 10 fc ff 	movsd  -0x3f0(%rbp),%xmm1
  405bb7:	ff 
  405bb8:	e8 b3 b4 ff ff       	callq  401070 <pow@plt>
  405bbd:	f2 0f 10 8d 08 fc ff 	movsd  -0x3f8(%rbp),%xmm1
  405bc4:	ff 
  405bc5:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  405bc9:	0f 28 c1             	movaps %xmm1,%xmm0
  405bcc:	e8 2f b5 ff ff       	callq  401100 <sqrt@plt>
  405bd1:	e8 6a b4 ff ff       	callq  401040 <round@plt>
  405bd6:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  405bda:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405bdd:	83 e9 01             	sub    $0x1,%ecx
  405be0:	48 63 d1             	movslq %ecx,%rdx
  405be3:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  405bea:	48 0f af d6          	imul   %rsi,%rdx
  405bee:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405bf5:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  405bfc:	48 01 d7             	add    %rdx,%rdi
  405bff:	88 47 02             	mov    %al,0x2(%rdi)
  405c02:	f2 0f 10 0d 56 15 00 	movsd  0x1556(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405c09:	00 
    }

    if (round(sqrt(pow(sumgx2, 2) + pow(sumgy2, 2))) > 255)
  405c0a:	f2 0f 2a 85 10 ff ff 	cvtsi2sdl -0xf0(%rbp),%xmm0
  405c11:	ff 
  405c12:	e8 59 b4 ff ff       	callq  401070 <pow@plt>
  405c17:	f2 0f 10 0d 41 15 00 	movsd  0x1541(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405c1e:	00 
  405c1f:	f2 0f 2a 95 04 ff ff 	cvtsi2sdl -0xfc(%rbp),%xmm2
  405c26:	ff 
  405c27:	f2 0f 11 85 00 fc ff 	movsd  %xmm0,-0x400(%rbp)
  405c2e:	ff 
  405c2f:	0f 28 c2             	movaps %xmm2,%xmm0
  405c32:	e8 39 b4 ff ff       	callq  401070 <pow@plt>
  405c37:	f2 0f 10 0d 19 15 00 	movsd  0x1519(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  405c3e:	00 
  405c3f:	f2 0f 10 95 00 fc ff 	movsd  -0x400(%rbp),%xmm2
  405c46:	ff 
  405c47:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  405c4b:	0f 28 c2             	movaps %xmm2,%xmm0
  405c4e:	f2 0f 11 8d f8 fb ff 	movsd  %xmm1,-0x408(%rbp)
  405c55:	ff 
  405c56:	e8 a5 b4 ff ff       	callq  401100 <sqrt@plt>
  405c5b:	e8 e0 b3 ff ff       	callq  401040 <round@plt>
  405c60:	f2 0f 10 8d f8 fb ff 	movsd  -0x408(%rbp),%xmm1
  405c67:	ff 
  405c68:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  405c6c:	0f 86 2e 00 00 00    	jbe    405ca0 <edges+0x38f0>
    {
        holder[height - 1][0].rgbtGreen = 255;
  405c72:	8b 45 fc             	mov    -0x4(%rbp),%eax
  405c75:	83 e8 01             	sub    $0x1,%eax
  405c78:	48 63 c8             	movslq %eax,%rcx
  405c7b:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  405c82:	48 0f af ca          	imul   %rdx,%rcx
  405c86:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405c8d:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  405c94:	48 01 ce             	add    %rcx,%rsi
  405c97:	c6 46 01 ff          	movb   $0xff,0x1(%rsi)
    }
  405c9b:	e9 82 00 00 00       	jmpq   405d22 <edges+0x3972>
    else
    {
        holder[height - 1][0].rgbtGreen = round(sqrt(pow(sumgx2, 2) + pow(sumgy2, 2)));
  405ca0:	f2 0f 2a 85 10 ff ff 	cvtsi2sdl -0xf0(%rbp),%xmm0
  405ca7:	ff 
  405ca8:	f2 0f 10 0d b0 14 00 	movsd  0x14b0(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405caf:	00 
  405cb0:	f2 0f 11 8d f0 fb ff 	movsd  %xmm1,-0x410(%rbp)
  405cb7:	ff 
  405cb8:	e8 b3 b3 ff ff       	callq  401070 <pow@plt>
  405cbd:	f2 0f 2a 8d 04 ff ff 	cvtsi2sdl -0xfc(%rbp),%xmm1
  405cc4:	ff 
  405cc5:	f2 0f 11 85 e8 fb ff 	movsd  %xmm0,-0x418(%rbp)
  405ccc:	ff 
  405ccd:	0f 28 c1             	movaps %xmm1,%xmm0
  405cd0:	f2 0f 10 8d f0 fb ff 	movsd  -0x410(%rbp),%xmm1
  405cd7:	ff 
  405cd8:	e8 93 b3 ff ff       	callq  401070 <pow@plt>
  405cdd:	f2 0f 10 8d e8 fb ff 	movsd  -0x418(%rbp),%xmm1
  405ce4:	ff 
  405ce5:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  405ce9:	0f 28 c1             	movaps %xmm1,%xmm0
  405cec:	e8 0f b4 ff ff       	callq  401100 <sqrt@plt>
  405cf1:	e8 4a b3 ff ff       	callq  401040 <round@plt>
  405cf6:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  405cfa:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405cfd:	83 e9 01             	sub    $0x1,%ecx
  405d00:	48 63 d1             	movslq %ecx,%rdx
  405d03:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  405d0a:	48 0f af d6          	imul   %rsi,%rdx
  405d0e:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405d15:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  405d1c:	48 01 d7             	add    %rdx,%rdi
  405d1f:	88 47 01             	mov    %al,0x1(%rdi)
  405d22:	f2 0f 10 0d 36 14 00 	movsd  0x1436(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405d29:	00 
    }

    if (round(sqrt(pow(sumbx2, 2) + pow(sumby2, 2))) > 255)
  405d2a:	f2 0f 2a 85 0c ff ff 	cvtsi2sdl -0xf4(%rbp),%xmm0
  405d31:	ff 
  405d32:	e8 39 b3 ff ff       	callq  401070 <pow@plt>
  405d37:	f2 0f 10 0d 21 14 00 	movsd  0x1421(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405d3e:	00 
  405d3f:	f2 0f 2a 95 00 ff ff 	cvtsi2sdl -0x100(%rbp),%xmm2
  405d46:	ff 
  405d47:	f2 0f 11 85 e0 fb ff 	movsd  %xmm0,-0x420(%rbp)
  405d4e:	ff 
  405d4f:	0f 28 c2             	movaps %xmm2,%xmm0
  405d52:	e8 19 b3 ff ff       	callq  401070 <pow@plt>
  405d57:	f2 0f 10 0d f9 13 00 	movsd  0x13f9(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  405d5e:	00 
  405d5f:	f2 0f 10 95 e0 fb ff 	movsd  -0x420(%rbp),%xmm2
  405d66:	ff 
  405d67:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  405d6b:	0f 28 c2             	movaps %xmm2,%xmm0
  405d6e:	f2 0f 11 8d d8 fb ff 	movsd  %xmm1,-0x428(%rbp)
  405d75:	ff 
  405d76:	e8 85 b3 ff ff       	callq  401100 <sqrt@plt>
  405d7b:	e8 c0 b2 ff ff       	callq  401040 <round@plt>
  405d80:	f2 0f 10 8d d8 fb ff 	movsd  -0x428(%rbp),%xmm1
  405d87:	ff 
  405d88:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  405d8c:	0f 86 2d 00 00 00    	jbe    405dbf <edges+0x3a0f>
    {
        holder[height - 1][0].rgbtBlue = 255;
  405d92:	8b 45 fc             	mov    -0x4(%rbp),%eax
  405d95:	83 e8 01             	sub    $0x1,%eax
  405d98:	48 63 c8             	movslq %eax,%rcx
  405d9b:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  405da2:	48 0f af ca          	imul   %rdx,%rcx
  405da6:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  405dad:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  405db4:	48 01 ce             	add    %rcx,%rsi
  405db7:	c6 06 ff             	movb   $0xff,(%rsi)
    }
  405dba:	e9 81 00 00 00       	jmpq   405e40 <edges+0x3a90>
    else
    {
        holder[height - 1][0].rgbtBlue = round(sqrt(pow(sumbx2, 2) + pow(sumby2, 2)));
  405dbf:	f2 0f 2a 85 0c ff ff 	cvtsi2sdl -0xf4(%rbp),%xmm0
  405dc6:	ff 
  405dc7:	f2 0f 10 0d 91 13 00 	movsd  0x1391(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405dce:	00 
  405dcf:	f2 0f 11 8d d0 fb ff 	movsd  %xmm1,-0x430(%rbp)
  405dd6:	ff 
  405dd7:	e8 94 b2 ff ff       	callq  401070 <pow@plt>
  405ddc:	f2 0f 2a 8d 00 ff ff 	cvtsi2sdl -0x100(%rbp),%xmm1
  405de3:	ff 
  405de4:	f2 0f 11 85 c8 fb ff 	movsd  %xmm0,-0x438(%rbp)
  405deb:	ff 
  405dec:	0f 28 c1             	movaps %xmm1,%xmm0
  405def:	f2 0f 10 8d d0 fb ff 	movsd  -0x430(%rbp),%xmm1
  405df6:	ff 
  405df7:	e8 74 b2 ff ff       	callq  401070 <pow@plt>
  405dfc:	f2 0f 10 8d c8 fb ff 	movsd  -0x438(%rbp),%xmm1
  405e03:	ff 
  405e04:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  405e08:	0f 28 c1             	movaps %xmm1,%xmm0
  405e0b:	e8 f0 b2 ff ff       	callq  401100 <sqrt@plt>
  405e10:	e8 2b b2 ff ff       	callq  401040 <round@plt>
  405e15:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  405e19:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405e1c:	83 e9 01             	sub    $0x1,%ecx
  405e1f:	48 63 d1             	movslq %ecx,%rdx
  405e22:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  405e29:	48 0f af d6          	imul   %rsi,%rdx
  405e2d:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405e34:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  405e3b:	48 01 d7             	add    %rdx,%rdi
  405e3e:	88 07                	mov    %al,(%rdi)
  405e40:	f2 0f 10 0d 18 13 00 	movsd  0x1318(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  405e47:	00 
    /*holder[height - 1][0].rgbtRed = round(sqrt(pow(sumrx2, 2) + pow(sumry2, 2)));
    holder[height - 1][0].rgbtGreen = round(sqrt(pow(sumgx2, 2) + pow(sumgy2, 2)));
    holder[height - 1][0].rgbtBlue = round(sqrt(pow(sumbx2, 2) + pow(sumby2, 2)));*/

    //bottom right corner
    int sumrx3 = image[height - 2][width - 2].rgbtRed + 2 * image[height - 1][width - 2].rgbtRed;
  405e48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405e4c:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405e4f:	83 e9 02             	sub    $0x2,%ecx
  405e52:	48 63 d1             	movslq %ecx,%rdx
  405e55:	48 8b b5 d8 fe ff ff 	mov    -0x128(%rbp),%rsi
  405e5c:	48 0f af d6          	imul   %rsi,%rdx
  405e60:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405e67:	48 01 d0             	add    %rdx,%rax
  405e6a:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  405e6d:	83 e9 02             	sub    $0x2,%ecx
  405e70:	48 63 d1             	movslq %ecx,%rdx
  405e73:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405e7a:	48 01 d0             	add    %rdx,%rax
  405e7d:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
  405e81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405e85:	8b 7d fc             	mov    -0x4(%rbp),%edi
  405e88:	83 ef 01             	sub    $0x1,%edi
  405e8b:	48 63 d7             	movslq %edi,%rdx
  405e8e:	48 0f af d6          	imul   %rsi,%rdx
  405e92:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405e99:	48 01 d0             	add    %rdx,%rax
  405e9c:	8b 7d f8             	mov    -0x8(%rbp),%edi
  405e9f:	83 ef 02             	sub    $0x2,%edi
  405ea2:	48 63 d7             	movslq %edi,%rdx
  405ea5:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405eac:	48 01 d0             	add    %rdx,%rax
  405eaf:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  405eb3:	c1 e7 01             	shl    $0x1,%edi
  405eb6:	01 f9                	add    %edi,%ecx
  405eb8:	89 8d fc fe ff ff    	mov    %ecx,-0x104(%rbp)
    int sumgx3 = image[height - 2][width - 2].rgbtGreen + 2 * image[height - 1][width - 2].rgbtGreen;
  405ebe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405ec2:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405ec5:	83 e9 02             	sub    $0x2,%ecx
  405ec8:	48 63 d1             	movslq %ecx,%rdx
  405ecb:	48 0f af d6          	imul   %rsi,%rdx
  405ecf:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405ed6:	48 01 d0             	add    %rdx,%rax
  405ed9:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  405edc:	83 e9 02             	sub    $0x2,%ecx
  405edf:	48 63 d1             	movslq %ecx,%rdx
  405ee2:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405ee9:	48 01 d0             	add    %rdx,%rax
  405eec:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  405ef0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405ef4:	8b 7d fc             	mov    -0x4(%rbp),%edi
  405ef7:	83 ef 01             	sub    $0x1,%edi
  405efa:	48 63 d7             	movslq %edi,%rdx
  405efd:	48 0f af d6          	imul   %rsi,%rdx
  405f01:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405f08:	48 01 d0             	add    %rdx,%rax
  405f0b:	8b 7d f8             	mov    -0x8(%rbp),%edi
  405f0e:	83 ef 02             	sub    $0x2,%edi
  405f11:	48 63 d7             	movslq %edi,%rdx
  405f14:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405f1b:	48 01 d0             	add    %rdx,%rax
  405f1e:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  405f22:	c1 e7 01             	shl    $0x1,%edi
  405f25:	01 f9                	add    %edi,%ecx
  405f27:	89 8d f8 fe ff ff    	mov    %ecx,-0x108(%rbp)
    int sumbx3 = image[height - 2][width - 2].rgbtBlue + 2 * image[height - 1][width - 2].rgbtBlue;
  405f2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405f31:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405f34:	83 e9 02             	sub    $0x2,%ecx
  405f37:	48 63 d1             	movslq %ecx,%rdx
  405f3a:	48 0f af d6          	imul   %rsi,%rdx
  405f3e:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405f45:	48 01 d0             	add    %rdx,%rax
  405f48:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  405f4b:	83 e9 02             	sub    $0x2,%ecx
  405f4e:	48 63 d1             	movslq %ecx,%rdx
  405f51:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405f58:	48 01 d0             	add    %rdx,%rax
  405f5b:	0f b6 08             	movzbl (%rax),%ecx
  405f5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405f62:	8b 7d fc             	mov    -0x4(%rbp),%edi
  405f65:	83 ef 01             	sub    $0x1,%edi
  405f68:	48 63 d7             	movslq %edi,%rdx
  405f6b:	48 0f af d6          	imul   %rsi,%rdx
  405f6f:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405f76:	48 01 d0             	add    %rdx,%rax
  405f79:	8b 7d f8             	mov    -0x8(%rbp),%edi
  405f7c:	83 ef 02             	sub    $0x2,%edi
  405f7f:	48 63 d7             	movslq %edi,%rdx
  405f82:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405f89:	48 01 d0             	add    %rdx,%rax
  405f8c:	0f b6 38             	movzbl (%rax),%edi
  405f8f:	c1 e7 01             	shl    $0x1,%edi
  405f92:	01 f9                	add    %edi,%ecx
  405f94:	89 8d f4 fe ff ff    	mov    %ecx,-0x10c(%rbp)

    int sumry3 = image[height - 2][width - 2].rgbtRed + 2 * image[height - 2][width - 1].rgbtRed;
  405f9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405f9e:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  405fa1:	83 e9 02             	sub    $0x2,%ecx
  405fa4:	48 63 d1             	movslq %ecx,%rdx
  405fa7:	48 0f af d6          	imul   %rsi,%rdx
  405fab:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405fb2:	48 01 d0             	add    %rdx,%rax
  405fb5:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  405fb8:	83 e9 02             	sub    $0x2,%ecx
  405fbb:	48 63 d1             	movslq %ecx,%rdx
  405fbe:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405fc5:	48 01 d0             	add    %rdx,%rax
  405fc8:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
  405fcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405fd0:	8b 7d fc             	mov    -0x4(%rbp),%edi
  405fd3:	83 ef 02             	sub    $0x2,%edi
  405fd6:	48 63 d7             	movslq %edi,%rdx
  405fd9:	48 0f af d6          	imul   %rsi,%rdx
  405fdd:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405fe4:	48 01 d0             	add    %rdx,%rax
  405fe7:	8b 7d f8             	mov    -0x8(%rbp),%edi
  405fea:	83 ef 01             	sub    $0x1,%edi
  405fed:	48 63 d7             	movslq %edi,%rdx
  405ff0:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  405ff7:	48 01 d0             	add    %rdx,%rax
  405ffa:	0f b6 78 02          	movzbl 0x2(%rax),%edi
  405ffe:	c1 e7 01             	shl    $0x1,%edi
  406001:	01 f9                	add    %edi,%ecx
  406003:	89 8d f0 fe ff ff    	mov    %ecx,-0x110(%rbp)
    int sumgy3 = image[height - 2][width - 2].rgbtGreen + 2 * image[height - 2][width - 1].rgbtGreen;
  406009:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40600d:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  406010:	83 e9 02             	sub    $0x2,%ecx
  406013:	48 63 d1             	movslq %ecx,%rdx
  406016:	48 0f af d6          	imul   %rsi,%rdx
  40601a:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  406021:	48 01 d0             	add    %rdx,%rax
  406024:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  406027:	83 e9 02             	sub    $0x2,%ecx
  40602a:	48 63 d1             	movslq %ecx,%rdx
  40602d:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  406034:	48 01 d0             	add    %rdx,%rax
  406037:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  40603b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40603f:	8b 7d fc             	mov    -0x4(%rbp),%edi
  406042:	83 ef 02             	sub    $0x2,%edi
  406045:	48 63 d7             	movslq %edi,%rdx
  406048:	48 0f af d6          	imul   %rsi,%rdx
  40604c:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  406053:	48 01 d0             	add    %rdx,%rax
  406056:	8b 7d f8             	mov    -0x8(%rbp),%edi
  406059:	83 ef 01             	sub    $0x1,%edi
  40605c:	48 63 d7             	movslq %edi,%rdx
  40605f:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  406066:	48 01 d0             	add    %rdx,%rax
  406069:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  40606d:	c1 e7 01             	shl    $0x1,%edi
  406070:	01 f9                	add    %edi,%ecx
  406072:	89 8d ec fe ff ff    	mov    %ecx,-0x114(%rbp)
    int sumby3 = image[height - 2][width - 2].rgbtBlue + 2 * image[height - 2][width - 1].rgbtBlue;
  406078:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40607c:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40607f:	83 e9 02             	sub    $0x2,%ecx
  406082:	48 63 d1             	movslq %ecx,%rdx
  406085:	48 0f af d6          	imul   %rsi,%rdx
  406089:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  406090:	48 01 d0             	add    %rdx,%rax
  406093:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  406096:	83 e9 02             	sub    $0x2,%ecx
  406099:	48 63 d1             	movslq %ecx,%rdx
  40609c:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4060a3:	48 01 d0             	add    %rdx,%rax
  4060a6:	0f b6 08             	movzbl (%rax),%ecx
  4060a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4060ad:	8b 7d fc             	mov    -0x4(%rbp),%edi
  4060b0:	83 ef 02             	sub    $0x2,%edi
  4060b3:	48 63 d7             	movslq %edi,%rdx
  4060b6:	48 0f af d6          	imul   %rsi,%rdx
  4060ba:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4060c1:	48 01 d0             	add    %rdx,%rax
  4060c4:	8b 7d f8             	mov    -0x8(%rbp),%edi
  4060c7:	83 ef 01             	sub    $0x1,%edi
  4060ca:	48 63 d7             	movslq %edi,%rdx
  4060cd:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4060d4:	48 01 d0             	add    %rdx,%rax
  4060d7:	0f b6 38             	movzbl (%rax),%edi
  4060da:	c1 e7 01             	shl    $0x1,%edi
  4060dd:	01 f9                	add    %edi,%ecx
  4060df:	89 8d e8 fe ff ff    	mov    %ecx,-0x118(%rbp)

    //same reason as earlier, holder can't take values greater than 255.
    if (round(sqrt(pow(sumrx3, 2) + pow(sumry3, 2))) > 255)
  4060e5:	f2 0f 2a 85 fc fe ff 	cvtsi2sdl -0x104(%rbp),%xmm0
  4060ec:	ff 
  4060ed:	e8 7e af ff ff       	callq  401070 <pow@plt>
  4060f2:	f2 0f 10 0d 66 10 00 	movsd  0x1066(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4060f9:	00 
  4060fa:	f2 0f 2a 95 f0 fe ff 	cvtsi2sdl -0x110(%rbp),%xmm2
  406101:	ff 
  406102:	f2 0f 11 85 c0 fb ff 	movsd  %xmm0,-0x440(%rbp)
  406109:	ff 
  40610a:	0f 28 c2             	movaps %xmm2,%xmm0
  40610d:	e8 5e af ff ff       	callq  401070 <pow@plt>
  406112:	f2 0f 10 0d 3e 10 00 	movsd  0x103e(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  406119:	00 
  40611a:	f2 0f 10 95 c0 fb ff 	movsd  -0x440(%rbp),%xmm2
  406121:	ff 
  406122:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  406126:	0f 28 c2             	movaps %xmm2,%xmm0
  406129:	f2 0f 11 8d b8 fb ff 	movsd  %xmm1,-0x448(%rbp)
  406130:	ff 
  406131:	e8 ca af ff ff       	callq  401100 <sqrt@plt>
  406136:	e8 05 af ff ff       	callq  401040 <round@plt>
  40613b:	f2 0f 10 8d b8 fb ff 	movsd  -0x448(%rbp),%xmm1
  406142:	ff 
  406143:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  406147:	0f 86 41 00 00 00    	jbe    40618e <edges+0x3dde>
    {
        holder[height - 1][width - 1].rgbtRed = 255;
  40614d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  406150:	83 e8 01             	sub    $0x1,%eax
  406153:	48 63 c8             	movslq %eax,%rcx
  406156:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  40615d:	48 0f af ca          	imul   %rdx,%rcx
  406161:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  406168:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  40616f:	48 01 ce             	add    %rcx,%rsi
  406172:	8b 45 f8             	mov    -0x8(%rbp),%eax
  406175:	83 e8 01             	sub    $0x1,%eax
  406178:	48 63 c8             	movslq %eax,%rcx
  40617b:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  406182:	48 01 ce             	add    %rcx,%rsi
  406185:	c6 46 02 ff          	movb   $0xff,0x2(%rsi)
    }
  406189:	e9 95 00 00 00       	jmpq   406223 <edges+0x3e73>
    else
    {
        holder[height - 1][width - 1].rgbtRed = round(sqrt(pow(sumrx3, 2) + pow(sumry3, 2)));
  40618e:	f2 0f 2a 85 fc fe ff 	cvtsi2sdl -0x104(%rbp),%xmm0
  406195:	ff 
  406196:	f2 0f 10 0d c2 0f 00 	movsd  0xfc2(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40619d:	00 
  40619e:	f2 0f 11 8d b0 fb ff 	movsd  %xmm1,-0x450(%rbp)
  4061a5:	ff 
  4061a6:	e8 c5 ae ff ff       	callq  401070 <pow@plt>
  4061ab:	f2 0f 2a 8d f0 fe ff 	cvtsi2sdl -0x110(%rbp),%xmm1
  4061b2:	ff 
  4061b3:	f2 0f 11 85 a8 fb ff 	movsd  %xmm0,-0x458(%rbp)
  4061ba:	ff 
  4061bb:	0f 28 c1             	movaps %xmm1,%xmm0
  4061be:	f2 0f 10 8d b0 fb ff 	movsd  -0x450(%rbp),%xmm1
  4061c5:	ff 
  4061c6:	e8 a5 ae ff ff       	callq  401070 <pow@plt>
  4061cb:	f2 0f 10 8d a8 fb ff 	movsd  -0x458(%rbp),%xmm1
  4061d2:	ff 
  4061d3:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  4061d7:	0f 28 c1             	movaps %xmm1,%xmm0
  4061da:	e8 21 af ff ff       	callq  401100 <sqrt@plt>
  4061df:	e8 5c ae ff ff       	callq  401040 <round@plt>
  4061e4:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  4061e8:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4061eb:	83 e9 01             	sub    $0x1,%ecx
  4061ee:	48 63 d1             	movslq %ecx,%rdx
  4061f1:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  4061f8:	48 0f af d6          	imul   %rsi,%rdx
  4061fc:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  406203:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  40620a:	48 01 d7             	add    %rdx,%rdi
  40620d:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  406210:	83 e9 01             	sub    $0x1,%ecx
  406213:	48 63 d1             	movslq %ecx,%rdx
  406216:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40621d:	48 01 d7             	add    %rdx,%rdi
  406220:	88 47 02             	mov    %al,0x2(%rdi)
  406223:	f2 0f 10 0d 35 0f 00 	movsd  0xf35(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40622a:	00 
    }

    if (round(sqrt(pow(sumgx3, 2) + pow(sumgy3, 2))) > 255)
  40622b:	f2 0f 2a 85 f8 fe ff 	cvtsi2sdl -0x108(%rbp),%xmm0
  406232:	ff 
  406233:	e8 38 ae ff ff       	callq  401070 <pow@plt>
  406238:	f2 0f 10 0d 20 0f 00 	movsd  0xf20(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  40623f:	00 
  406240:	f2 0f 2a 95 ec fe ff 	cvtsi2sdl -0x114(%rbp),%xmm2
  406247:	ff 
  406248:	f2 0f 11 85 a0 fb ff 	movsd  %xmm0,-0x460(%rbp)
  40624f:	ff 
  406250:	0f 28 c2             	movaps %xmm2,%xmm0
  406253:	e8 18 ae ff ff       	callq  401070 <pow@plt>
  406258:	f2 0f 10 0d f8 0e 00 	movsd  0xef8(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  40625f:	00 
  406260:	f2 0f 10 95 a0 fb ff 	movsd  -0x460(%rbp),%xmm2
  406267:	ff 
  406268:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  40626c:	0f 28 c2             	movaps %xmm2,%xmm0
  40626f:	f2 0f 11 8d 98 fb ff 	movsd  %xmm1,-0x468(%rbp)
  406276:	ff 
  406277:	e8 84 ae ff ff       	callq  401100 <sqrt@plt>
  40627c:	e8 bf ad ff ff       	callq  401040 <round@plt>
  406281:	f2 0f 10 8d 98 fb ff 	movsd  -0x468(%rbp),%xmm1
  406288:	ff 
  406289:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  40628d:	0f 86 41 00 00 00    	jbe    4062d4 <edges+0x3f24>
    {
        holder[height - 1][width - 1].rgbtGreen = 255;
  406293:	8b 45 fc             	mov    -0x4(%rbp),%eax
  406296:	83 e8 01             	sub    $0x1,%eax
  406299:	48 63 c8             	movslq %eax,%rcx
  40629c:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  4062a3:	48 0f af ca          	imul   %rdx,%rcx
  4062a7:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4062ae:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  4062b5:	48 01 ce             	add    %rcx,%rsi
  4062b8:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4062bb:	83 e8 01             	sub    $0x1,%eax
  4062be:	48 63 c8             	movslq %eax,%rcx
  4062c1:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4062c8:	48 01 ce             	add    %rcx,%rsi
  4062cb:	c6 46 01 ff          	movb   $0xff,0x1(%rsi)
    }
  4062cf:	e9 95 00 00 00       	jmpq   406369 <edges+0x3fb9>
    else
    {
        holder[height - 1][width - 1].rgbtGreen = round(sqrt(pow(sumgx3, 2) + pow(sumgy3, 2)));
  4062d4:	f2 0f 2a 85 f8 fe ff 	cvtsi2sdl -0x108(%rbp),%xmm0
  4062db:	ff 
  4062dc:	f2 0f 10 0d 7c 0e 00 	movsd  0xe7c(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  4062e3:	00 
  4062e4:	f2 0f 11 8d 90 fb ff 	movsd  %xmm1,-0x470(%rbp)
  4062eb:	ff 
  4062ec:	e8 7f ad ff ff       	callq  401070 <pow@plt>
  4062f1:	f2 0f 2a 8d ec fe ff 	cvtsi2sdl -0x114(%rbp),%xmm1
  4062f8:	ff 
  4062f9:	f2 0f 11 85 88 fb ff 	movsd  %xmm0,-0x478(%rbp)
  406300:	ff 
  406301:	0f 28 c1             	movaps %xmm1,%xmm0
  406304:	f2 0f 10 8d 90 fb ff 	movsd  -0x470(%rbp),%xmm1
  40630b:	ff 
  40630c:	e8 5f ad ff ff       	callq  401070 <pow@plt>
  406311:	f2 0f 10 8d 88 fb ff 	movsd  -0x478(%rbp),%xmm1
  406318:	ff 
  406319:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  40631d:	0f 28 c1             	movaps %xmm1,%xmm0
  406320:	e8 db ad ff ff       	callq  401100 <sqrt@plt>
  406325:	e8 16 ad ff ff       	callq  401040 <round@plt>
  40632a:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  40632e:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  406331:	83 e9 01             	sub    $0x1,%ecx
  406334:	48 63 d1             	movslq %ecx,%rdx
  406337:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  40633e:	48 0f af d6          	imul   %rsi,%rdx
  406342:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  406349:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  406350:	48 01 d7             	add    %rdx,%rdi
  406353:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  406356:	83 e9 01             	sub    $0x1,%ecx
  406359:	48 63 d1             	movslq %ecx,%rdx
  40635c:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  406363:	48 01 d7             	add    %rdx,%rdi
  406366:	88 47 01             	mov    %al,0x1(%rdi)
  406369:	f2 0f 10 0d ef 0d 00 	movsd  0xdef(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  406370:	00 
    }

    if (round(sqrt(pow(sumbx3, 2) + pow(sumby3, 2))) > 255)
  406371:	f2 0f 2a 85 f4 fe ff 	cvtsi2sdl -0x10c(%rbp),%xmm0
  406378:	ff 
  406379:	e8 f2 ac ff ff       	callq  401070 <pow@plt>
  40637e:	f2 0f 10 0d da 0d 00 	movsd  0xdda(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  406385:	00 
  406386:	f2 0f 2a 95 e8 fe ff 	cvtsi2sdl -0x118(%rbp),%xmm2
  40638d:	ff 
  40638e:	f2 0f 11 85 80 fb ff 	movsd  %xmm0,-0x480(%rbp)
  406395:	ff 
  406396:	0f 28 c2             	movaps %xmm2,%xmm0
  406399:	e8 d2 ac ff ff       	callq  401070 <pow@plt>
  40639e:	f2 0f 10 0d b2 0d 00 	movsd  0xdb2(%rip),%xmm1        # 407158 <_IO_stdin_used+0x158>
  4063a5:	00 
  4063a6:	f2 0f 10 95 80 fb ff 	movsd  -0x480(%rbp),%xmm2
  4063ad:	ff 
  4063ae:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
  4063b2:	0f 28 c2             	movaps %xmm2,%xmm0
  4063b5:	f2 0f 11 8d 78 fb ff 	movsd  %xmm1,-0x488(%rbp)
  4063bc:	ff 
  4063bd:	e8 3e ad ff ff       	callq  401100 <sqrt@plt>
  4063c2:	e8 79 ac ff ff       	callq  401040 <round@plt>
  4063c7:	f2 0f 10 8d 78 fb ff 	movsd  -0x488(%rbp),%xmm1
  4063ce:	ff 
  4063cf:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  4063d3:	0f 86 40 00 00 00    	jbe    406419 <edges+0x4069>
    {
        holder[height - 1][width - 1].rgbtBlue = 255;
  4063d9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4063dc:	83 e8 01             	sub    $0x1,%eax
  4063df:	48 63 c8             	movslq %eax,%rcx
  4063e2:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
  4063e9:	48 0f af ca          	imul   %rdx,%rcx
  4063ed:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4063f4:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  4063fb:	48 01 ce             	add    %rcx,%rsi
  4063fe:	8b 45 f8             	mov    -0x8(%rbp),%eax
  406401:	83 e8 01             	sub    $0x1,%eax
  406404:	48 63 c8             	movslq %eax,%rcx
  406407:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40640e:	48 01 ce             	add    %rcx,%rsi
  406411:	c6 06 ff             	movb   $0xff,(%rsi)
    }
  406414:	e9 94 00 00 00       	jmpq   4064ad <edges+0x40fd>
    else
    {
        holder[height - 1][width - 1].rgbtBlue = round(sqrt(pow(sumbx3, 2) + pow(sumby3, 2)));
  406419:	f2 0f 2a 85 f4 fe ff 	cvtsi2sdl -0x10c(%rbp),%xmm0
  406420:	ff 
  406421:	f2 0f 10 0d 37 0d 00 	movsd  0xd37(%rip),%xmm1        # 407160 <_IO_stdin_used+0x160>
  406428:	00 
  406429:	f2 0f 11 8d 70 fb ff 	movsd  %xmm1,-0x490(%rbp)
  406430:	ff 
  406431:	e8 3a ac ff ff       	callq  401070 <pow@plt>
  406436:	f2 0f 2a 8d e8 fe ff 	cvtsi2sdl -0x118(%rbp),%xmm1
  40643d:	ff 
  40643e:	f2 0f 11 85 68 fb ff 	movsd  %xmm0,-0x498(%rbp)
  406445:	ff 
  406446:	0f 28 c1             	movaps %xmm1,%xmm0
  406449:	f2 0f 10 8d 70 fb ff 	movsd  -0x490(%rbp),%xmm1
  406450:	ff 
  406451:	e8 1a ac ff ff       	callq  401070 <pow@plt>
  406456:	f2 0f 10 8d 68 fb ff 	movsd  -0x498(%rbp),%xmm1
  40645d:	ff 
  40645e:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  406462:	0f 28 c1             	movaps %xmm1,%xmm0
  406465:	e8 96 ac ff ff       	callq  401100 <sqrt@plt>
  40646a:	e8 d1 ab ff ff       	callq  401040 <round@plt>
  40646f:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  406473:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  406476:	83 e9 01             	sub    $0x1,%ecx
  406479:	48 63 d1             	movslq %ecx,%rdx
  40647c:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  406483:	48 0f af d6          	imul   %rsi,%rdx
  406487:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  40648e:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  406495:	48 01 d7             	add    %rdx,%rdi
  406498:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  40649b:	83 e9 01             	sub    $0x1,%ecx
  40649e:	48 63 d1             	movslq %ecx,%rdx
  4064a1:	48 69 d2 03 00 00 00 	imul   $0x3,%rdx,%rdx
  4064a8:	48 01 d7             	add    %rdx,%rdi
  4064ab:	88 07                	mov    %al,(%rdi)
    /*holder[height - 1][width - 1].rgbtRed = round(sqrt(pow(sumrx3, 2) + pow(sumry3, 2)));
    holder[height - 1][width - 1].rgbtGreen = round(sqrt(pow(sumgx3, 2) + pow(sumgy3, 2)));
    holder[height - 1][width - 1].rgbtBlue = round(sqrt(pow(sumbx3, 2) + pow(sumby3, 2)));*/

    //set image values to holder values
    for (int i = 0; i < height; i++)
  4064ad:	c7 85 e4 fe ff ff 00 	movl   $0x0,-0x11c(%rbp)
  4064b4:	00 00 00 
  4064b7:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
  4064bd:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  4064c0:	0f 8d bb 00 00 00    	jge    406581 <edges+0x41d1>
    {
        for (int j = 0; j < width; j ++)
  4064c6:	c7 85 e0 fe ff ff 00 	movl   $0x0,-0x120(%rbp)
  4064cd:	00 00 00 
  4064d0:	8b 85 e0 fe ff ff    	mov    -0x120(%rbp),%eax
  4064d6:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  4064d9:	0f 8d 89 00 00 00    	jge    406568 <edges+0x41b8>
        {
            image[i][j] = holder[i][j];
  4064df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4064e3:	48 63 8d e4 fe ff ff 	movslq -0x11c(%rbp),%rcx
  4064ea:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
  4064f1:	48 0f af ca          	imul   %rdx,%rcx
  4064f5:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  4064fc:	48 01 c8             	add    %rcx,%rax
  4064ff:	48 63 8d e0 fe ff ff 	movslq -0x120(%rbp),%rcx
  406506:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  40650d:	48 01 c8             	add    %rcx,%rax
  406510:	48 63 8d e4 fe ff ff 	movslq -0x11c(%rbp),%rcx
  406517:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  40651e:	48 0f af ce          	imul   %rsi,%rcx
  406522:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  406529:	48 8b bd c8 fe ff ff 	mov    -0x138(%rbp),%rdi
  406530:	48 01 cf             	add    %rcx,%rdi
  406533:	48 63 8d e0 fe ff ff 	movslq -0x120(%rbp),%rcx
  40653a:	48 69 c9 03 00 00 00 	imul   $0x3,%rcx,%rcx
  406541:	48 01 cf             	add    %rcx,%rdi
  406544:	66 44 8b 07          	mov    (%rdi),%r8w
  406548:	66 44 89 00          	mov    %r8w,(%rax)
  40654c:	44 8a 4f 02          	mov    0x2(%rdi),%r9b
  406550:	44 88 48 02          	mov    %r9b,0x2(%rax)
        for (int j = 0; j < width; j ++)
  406554:	8b 85 e0 fe ff ff    	mov    -0x120(%rbp),%eax
  40655a:	83 c0 01             	add    $0x1,%eax
  40655d:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%rbp)
  406563:	e9 68 ff ff ff       	jmpq   4064d0 <edges+0x4120>
        }
    }
  406568:	e9 00 00 00 00       	jmpq   40656d <edges+0x41bd>
    for (int i = 0; i < height; i++)
  40656d:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
  406573:	83 c0 01             	add    $0x1,%eax
  406576:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%rbp)
  40657c:	e9 36 ff ff ff       	jmpq   4064b7 <edges+0x4107>
    //when can I stop
    //stop asking me for more
    //thanks

    return;
  406581:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406585:	48 89 c4             	mov    %rax,%rsp
  406588:	48 89 ec             	mov    %rbp,%rsp
  40658b:	5d                   	pop    %rbp
  40658c:	c3                   	retq   
  40658d:	0f 1f 00             	nopl   (%rax)

0000000000406590 <__libc_csu_init>:
  406590:	f3 0f 1e fa          	endbr64 
  406594:	41 57                	push   %r15
  406596:	4c 8d 3d 63 28 00 00 	lea    0x2863(%rip),%r15        # 408e00 <__frame_dummy_init_array_entry>
  40659d:	41 56                	push   %r14
  40659f:	49 89 d6             	mov    %rdx,%r14
  4065a2:	41 55                	push   %r13
  4065a4:	49 89 f5             	mov    %rsi,%r13
  4065a7:	41 54                	push   %r12
  4065a9:	41 89 fc             	mov    %edi,%r12d
  4065ac:	55                   	push   %rbp
  4065ad:	48 8d 2d 54 28 00 00 	lea    0x2854(%rip),%rbp        # 408e08 <__do_global_dtors_aux_fini_array_entry>
  4065b4:	53                   	push   %rbx
  4065b5:	4c 29 fd             	sub    %r15,%rbp
  4065b8:	48 83 ec 08          	sub    $0x8,%rsp
  4065bc:	e8 3f aa ff ff       	callq  401000 <_init>
  4065c1:	48 c1 fd 03          	sar    $0x3,%rbp
  4065c5:	74 1f                	je     4065e6 <__libc_csu_init+0x56>
  4065c7:	31 db                	xor    %ebx,%ebx
  4065c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4065d0:	4c 89 f2             	mov    %r14,%rdx
  4065d3:	4c 89 ee             	mov    %r13,%rsi
  4065d6:	44 89 e7             	mov    %r12d,%edi
  4065d9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
  4065dd:	48 83 c3 01          	add    $0x1,%rbx
  4065e1:	48 39 dd             	cmp    %rbx,%rbp
  4065e4:	75 ea                	jne    4065d0 <__libc_csu_init+0x40>
  4065e6:	48 83 c4 08          	add    $0x8,%rsp
  4065ea:	5b                   	pop    %rbx
  4065eb:	5d                   	pop    %rbp
  4065ec:	41 5c                	pop    %r12
  4065ee:	41 5d                	pop    %r13
  4065f0:	41 5e                	pop    %r14
  4065f2:	41 5f                	pop    %r15
  4065f4:	c3                   	retq   
  4065f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4065fc:	00 00 00 00 

0000000000406600 <__libc_csu_fini>:
  406600:	f3 0f 1e fa          	endbr64 
  406604:	c3                   	retq   

Disassembly of section .fini:

0000000000406608 <_fini>:
  406608:	f3 0f 1e fa          	endbr64 
  40660c:	48 83 ec 08          	sub    $0x8,%rsp
  406610:	48 83 c4 08          	add    $0x8,%rsp
  406614:	c3                   	retq   
