
test:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    $0x8,%rsp
  401008:	48 8b 05 e9 2f 00 00 	mov    0x2fe9(%rip),%rax        # 403ff8 <__gmon_start__>
  40100f:	48 85 c0             	test   %rax,%rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	callq  *%rax
  401016:	48 83 c4 08          	add    $0x8,%rsp
  40101a:	c3                   	retq   

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 404008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 404010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401030 <pow@plt>:
  401030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 404018 <pow@GLIBC_2.29>
  401036:	68 00 00 00 00       	pushq  $0x0
  40103b:	e9 e0 ff ff ff       	jmpq   401020 <.plt>

0000000000401040 <printf@plt>:
  401040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 404020 <printf@GLIBC_2.2.5>
  401046:	68 01 00 00 00       	pushq  $0x1
  40104b:	e9 d0 ff ff ff       	jmpq   401020 <.plt>

Disassembly of section .text:

0000000000401050 <_start>:
  401050:	f3 0f 1e fa          	endbr64 
  401054:	31 ed                	xor    %ebp,%ebp
  401056:	49 89 d1             	mov    %rdx,%r9
  401059:	5e                   	pop    %rsi
  40105a:	48 89 e2             	mov    %rsp,%rdx
  40105d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  401061:	50                   	push   %rax
  401062:	54                   	push   %rsp
  401063:	49 c7 c0 70 12 40 00 	mov    $0x401270,%r8
  40106a:	48 c7 c1 00 12 40 00 	mov    $0x401200,%rcx
  401071:	48 c7 c7 40 11 40 00 	mov    $0x401140,%rdi
  401078:	ff 15 72 2f 00 00    	callq  *0x2f72(%rip)        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40107e:	f4                   	hlt    
  40107f:	90                   	nop

0000000000401080 <_dl_relocate_static_pie>:
  401080:	f3 0f 1e fa          	endbr64 
  401084:	c3                   	retq   
  401085:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40108c:	00 00 00 
  40108f:	90                   	nop

0000000000401090 <deregister_tm_clones>:
  401090:	b8 38 40 40 00       	mov    $0x404038,%eax
  401095:	48 3d 38 40 40 00    	cmp    $0x404038,%rax
  40109b:	74 13                	je     4010b0 <deregister_tm_clones+0x20>
  40109d:	b8 00 00 00 00       	mov    $0x0,%eax
  4010a2:	48 85 c0             	test   %rax,%rax
  4010a5:	74 09                	je     4010b0 <deregister_tm_clones+0x20>
  4010a7:	bf 38 40 40 00       	mov    $0x404038,%edi
  4010ac:	ff e0                	jmpq   *%rax
  4010ae:	66 90                	xchg   %ax,%ax
  4010b0:	c3                   	retq   
  4010b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4010b8:	00 00 00 00 
  4010bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004010c0 <register_tm_clones>:
  4010c0:	be 38 40 40 00       	mov    $0x404038,%esi
  4010c5:	48 81 ee 38 40 40 00 	sub    $0x404038,%rsi
  4010cc:	48 89 f0             	mov    %rsi,%rax
  4010cf:	48 c1 ee 3f          	shr    $0x3f,%rsi
  4010d3:	48 c1 f8 03          	sar    $0x3,%rax
  4010d7:	48 01 c6             	add    %rax,%rsi
  4010da:	48 d1 fe             	sar    %rsi
  4010dd:	74 11                	je     4010f0 <register_tm_clones+0x30>
  4010df:	b8 00 00 00 00       	mov    $0x0,%eax
  4010e4:	48 85 c0             	test   %rax,%rax
  4010e7:	74 07                	je     4010f0 <register_tm_clones+0x30>
  4010e9:	bf 38 40 40 00       	mov    $0x404038,%edi
  4010ee:	ff e0                	jmpq   *%rax
  4010f0:	c3                   	retq   
  4010f1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4010f8:	00 00 00 00 
  4010fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401100 <__do_global_dtors_aux>:
  401100:	f3 0f 1e fa          	endbr64 
  401104:	80 3d 2d 2f 00 00 00 	cmpb   $0x0,0x2f2d(%rip)        # 404038 <__TMC_END__>
  40110b:	75 13                	jne    401120 <__do_global_dtors_aux+0x20>
  40110d:	55                   	push   %rbp
  40110e:	48 89 e5             	mov    %rsp,%rbp
  401111:	e8 7a ff ff ff       	callq  401090 <deregister_tm_clones>
  401116:	c6 05 1b 2f 00 00 01 	movb   $0x1,0x2f1b(%rip)        # 404038 <__TMC_END__>
  40111d:	5d                   	pop    %rbp
  40111e:	c3                   	retq   
  40111f:	90                   	nop
  401120:	c3                   	retq   
  401121:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401128:	00 00 00 00 
  40112c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401130 <frame_dummy>:
  401130:	f3 0f 1e fa          	endbr64 
  401134:	eb 8a                	jmp    4010c0 <register_tm_clones>
  401136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40113d:	00 00 00 

0000000000401140 <main>:
#include <stdio.h>
#include <math.h>

int main(void)
{
  401140:	55                   	push   %rbp
  401141:	48 89 e5             	mov    %rsp,%rbp
  401144:	48 83 ec 20          	sub    $0x20,%rsp
  401148:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    long x = 1;
  40114f:	48 c7 45 f0 01 00 00 	movq   $0x1,-0x10(%rbp)
  401156:	00 
    double pi = 0.0;
  401157:	0f 57 c0             	xorps  %xmm0,%xmm0
  40115a:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  40115f:	f2 0f 10 05 a9 0e 00 	movsd  0xea9(%rip),%xmm0        # 402010 <_IO_stdin_used+0x10>
  401166:	00 
    while (1)
    {
        pi = pi + pow(-1, x-1) * 4/(2 * x-1);
  401167:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
  40116c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401170:	48 2d 01 00 00 00    	sub    $0x1,%rax
  401176:	f2 48 0f 2a d0       	cvtsi2sd %rax,%xmm2
  40117b:	f2 0f 11 4d e0       	movsd  %xmm1,-0x20(%rbp)
  401180:	0f 28 ca             	movaps %xmm2,%xmm1
  401183:	e8 a8 fe ff ff       	callq  401030 <pow@plt>
  401188:	f2 0f 10 0d 78 0e 00 	movsd  0xe78(%rip),%xmm1        # 402008 <_IO_stdin_used+0x8>
  40118f:	00 
  401190:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
  401194:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401198:	48 c1 e0 01          	shl    $0x1,%rax
  40119c:	48 2d 01 00 00 00    	sub    $0x1,%rax
  4011a2:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  4011a7:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
  4011ab:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
  4011b0:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  4011b4:	f2 0f 11 4d e8       	movsd  %xmm1,-0x18(%rbp)
        if (x % 50000000 == 0)
  4011b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4011bd:	48 99                	cqto   
  4011bf:	b9 80 f0 fa 02       	mov    $0x2faf080,%ecx
  4011c4:	48 f7 f9             	idiv   %rcx
  4011c7:	48 83 fa 00          	cmp    $0x0,%rdx
  4011cb:	0f 85 1a 00 00 00    	jne    4011eb <main+0xab>
        {
            printf("%.15lf    %li\n", pi, x);
  4011d1:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  4011d6:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4011da:	48 bf 18 20 40 00 00 	movabs $0x402018,%rdi
  4011e1:	00 00 00 
  4011e4:	b0 01                	mov    $0x1,%al
  4011e6:	e8 55 fe ff ff       	callq  401040 <printf@plt>
        }
        x++;
  4011eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4011ef:	48 05 01 00 00 00    	add    $0x1,%rax
  4011f5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    while (1)
  4011f9:	e9 61 ff ff ff       	jmpq   40115f <main+0x1f>
  4011fe:	66 90                	xchg   %ax,%ax

0000000000401200 <__libc_csu_init>:
  401200:	f3 0f 1e fa          	endbr64 
  401204:	41 57                	push   %r15
  401206:	4c 8d 3d d3 2b 00 00 	lea    0x2bd3(%rip),%r15        # 403de0 <__frame_dummy_init_array_entry>
  40120d:	41 56                	push   %r14
  40120f:	49 89 d6             	mov    %rdx,%r14
  401212:	41 55                	push   %r13
  401214:	49 89 f5             	mov    %rsi,%r13
  401217:	41 54                	push   %r12
  401219:	41 89 fc             	mov    %edi,%r12d
  40121c:	55                   	push   %rbp
  40121d:	48 8d 2d c4 2b 00 00 	lea    0x2bc4(%rip),%rbp        # 403de8 <__do_global_dtors_aux_fini_array_entry>
  401224:	53                   	push   %rbx
  401225:	4c 29 fd             	sub    %r15,%rbp
  401228:	48 83 ec 08          	sub    $0x8,%rsp
  40122c:	e8 cf fd ff ff       	callq  401000 <_init>
  401231:	48 c1 fd 03          	sar    $0x3,%rbp
  401235:	74 1f                	je     401256 <__libc_csu_init+0x56>
  401237:	31 db                	xor    %ebx,%ebx
  401239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401240:	4c 89 f2             	mov    %r14,%rdx
  401243:	4c 89 ee             	mov    %r13,%rsi
  401246:	44 89 e7             	mov    %r12d,%edi
  401249:	41 ff 14 df          	callq  *(%r15,%rbx,8)
  40124d:	48 83 c3 01          	add    $0x1,%rbx
  401251:	48 39 dd             	cmp    %rbx,%rbp
  401254:	75 ea                	jne    401240 <__libc_csu_init+0x40>
  401256:	48 83 c4 08          	add    $0x8,%rsp
  40125a:	5b                   	pop    %rbx
  40125b:	5d                   	pop    %rbp
  40125c:	41 5c                	pop    %r12
  40125e:	41 5d                	pop    %r13
  401260:	41 5e                	pop    %r14
  401262:	41 5f                	pop    %r15
  401264:	c3                   	retq   
  401265:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40126c:	00 00 00 00 

0000000000401270 <__libc_csu_fini>:
  401270:	f3 0f 1e fa          	endbr64 
  401274:	c3                   	retq   

Disassembly of section .fini:

0000000000401278 <_fini>:
  401278:	f3 0f 1e fa          	endbr64 
  40127c:	48 83 ec 08          	sub    $0x8,%rsp
  401280:	48 83 c4 08          	add    $0x8,%rsp
  401284:	c3                   	retq   
